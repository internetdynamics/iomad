{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to manage report insights actions that are executed using AJAX.\r\n *\r\n * @copyright  2017 David Monllao {@link http://www.davidmonllao.com}\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * This module manages prediction actions that require AJAX requests.\r\n *\r\n * @module report_insights/actions\r\n */\r\ndefine(['jquery', 'core/str', 'core/ajax', 'core/notification', 'core/url', 'core/modal_factory', 'core/modal_events'],\r\n        function($, Str, Ajax, Notification, Url, ModalFactory, ModalEvents) {\r\n\r\n    return {\r\n\r\n        /**\r\n         * Attach on click handlers for bulk actions.\r\n         *\r\n         * @param {String} rootNode\r\n         * @access public\r\n         */\r\n        initBulk: function(rootNode) {\r\n\r\n            /**\r\n             * Executes the provided action.\r\n             *\r\n             * @param  {Array}  predictionIds\r\n             * @param  {Array}  predictionContainers\r\n             * @param  {String} actionName\r\n             * @return {Promise}\r\n             */\r\n            var executeAction = function(predictionIds, predictionContainers, actionName) {\r\n\r\n                return Ajax.call([\r\n                    {\r\n                        methodname: 'report_insights_action_executed',\r\n                        args: {\r\n                            predictionids: predictionIds,\r\n                            actionname: actionName\r\n                        }\r\n                    }\r\n                ])[0].then(function() {\r\n                    // Remove the selected elements from the list.\r\n\r\n                    var tableNode = false;\r\n                    predictionContainers.forEach(function(el) {\r\n                        if (tableNode === false) {\r\n                            tableNode = el.closest('table');\r\n                        }\r\n                        el.remove();\r\n                    });\r\n\r\n                    if (tableNode.find('tbody > tr').length === 0) {\r\n                        let params = {\r\n                            contextid: tableNode.closest('div.insight-container').data('context-id'),\r\n                            modelid: tableNode.closest('div.insight-container').data('model-id')\r\n                        };\r\n                        window.location.assign(Url.relativeUrl(\"report/insights/insights.php\", params, false));\r\n                    }\r\n                    return;\r\n                }).catch(Notification.exception);\r\n            };\r\n\r\n            $(rootNode + ' [data-bulk-actionname]').on('click', function(e) {\r\n                e.preventDefault();\r\n                var action = $(e.currentTarget);\r\n                var actionName = action.data('bulk-actionname');\r\n                var actionVisibleName = action.text().trim();\r\n\r\n                var predictionIds = [];\r\n                var predictionContainers = [];\r\n\r\n                $('.insights-list input[data-togglegroup^=\"insight-bulk-action-\"][data-toggle=\"slave\"]:checked').each(function() {\r\n                    var container = $(this).closest('tr[data-prediction-id]');\r\n                    predictionContainers.push(container);\r\n                    predictionIds.push(container.data('prediction-id'));\r\n                });\r\n\r\n                if (predictionIds.length === 0) {\r\n                    // No items selected message.\r\n                    return this;\r\n                }\r\n\r\n                var strings = [];\r\n                Str.get_strings([{\r\n                    key: 'confirmbulkaction',\r\n                    component: 'report_insights',\r\n                    param: {\r\n                        action: actionVisibleName,\r\n                        nitems: predictionIds.length\r\n                    }\r\n                }, {\r\n                    key: 'confirm',\r\n                    component: 'moodle'\r\n                }]\r\n                ).then(function(strs) {\r\n                    strings = strs;\r\n                    return ModalFactory.create({\r\n                        type: ModalFactory.types.SAVE_CANCEL,\r\n                        title: actionVisibleName,\r\n                        body: strings[0],\r\n                    });\r\n                }).then(function(modal) {\r\n                    modal.setSaveButtonText(strings[1]);\r\n                    modal.show();\r\n                    modal.getRoot().on(ModalEvents.save, function() {\r\n                        // The action is now confirmed, sending an action for it.\r\n                        return executeAction(predictionIds, predictionContainers, actionName);\r\n                    });\r\n\r\n                    return modal;\r\n                }).catch(Notification.exception);\r\n\r\n                return this;\r\n            });\r\n        },\r\n    };\r\n});\r\n"],"names":["define","$","Str","Ajax","Notification","Url","ModalFactory","ModalEvents","initBulk","rootNode","on","e","preventDefault","action","currentTarget","actionName","data","actionVisibleName","text","trim","predictionIds","predictionContainers","each","container","this","closest","push","length","strings","get_strings","key","component","param","nitems","then","strs","create","type","types","SAVE_CANCEL","title","body","modal","setSaveButtonText","show","getRoot","save","call","methodname","args","predictionids","actionname","tableNode","forEach","el","remove","find","params","contextid","modelid","window","location","assign","relativeUrl","catch","exception","executeAction"],"mappings":";;;;;;AA2BAA,iCAAO,CAAC,SAAU,WAAY,YAAa,oBAAqB,WAAY,qBAAsB,sBAC1F,SAASC,EAAGC,IAAKC,KAAMC,aAAcC,IAAKC,aAAcC,mBAErD,CAQHC,SAAU,SAASC,UA0CfR,EAAEQ,SAAW,2BAA2BC,GAAG,SAAS,SAASC,GACzDA,EAAEC,qBACEC,OAASZ,EAAEU,EAAEG,eACbC,WAAaF,OAAOG,KAAK,mBACzBC,kBAAoBJ,OAAOK,OAAOC,OAElCC,cAAgB,GAChBC,qBAAuB,MAE3BpB,EAAE,+FAA+FqB,MAAK,eAC9FC,UAAYtB,EAAEuB,MAAMC,QAAQ,0BAChCJ,qBAAqBK,KAAKH,WAC1BH,cAAcM,KAAKH,UAAUP,KAAK,qBAGT,IAAzBI,cAAcO,cAEPH,SAGPI,QAAU,UACd1B,IAAI2B,YAAY,CAAC,CACbC,IAAK,oBACLC,UAAW,kBACXC,MAAO,CACHnB,OAAQI,kBACRgB,OAAQb,cAAcO,SAE3B,CACCG,IAAK,UACLC,UAAW,YAEbG,MAAK,SAASC,aACZP,QAAUO,KACH7B,aAAa8B,OAAO,CACvBC,KAAM/B,aAAagC,MAAMC,YACzBC,MAAOvB,kBACPwB,KAAMb,QAAQ,QAEnBM,MAAK,SAASQ,cACbA,MAAMC,kBAAkBf,QAAQ,IAChCc,MAAME,OACNF,MAAMG,UAAUnC,GAAGH,YAAYuC,MAAM,kBA1EzB,SAAS1B,cAAeC,qBAAsBN,mBAEvDZ,KAAK4C,KAAK,CACb,CACIC,WAAY,kCACZC,KAAM,CACFC,cAAe9B,cACf+B,WAAYpC,eAGrB,GAAGmB,MAAK,eAGHkB,WAAY,KAChB/B,qBAAqBgC,SAAQ,SAASC,KAChB,IAAdF,YACAA,UAAYE,GAAG7B,QAAQ,UAE3B6B,GAAGC,YAGqC,IAAxCH,UAAUI,KAAK,cAAc7B,OAAc,KACvC8B,OAAS,CACTC,UAAWN,UAAU3B,QAAQ,yBAAyBT,KAAK,cAC3D2C,QAASP,UAAU3B,QAAQ,yBAAyBT,KAAK,aAE7D4C,OAAOC,SAASC,OAAOzD,IAAI0D,YAAY,+BAAgCN,QAAQ,QAGpFO,MAAM5D,aAAa6D,WA+CPC,CAAc9C,cAAeC,qBAAsBN,eAGvD2B,SACRsB,MAAM5D,aAAa6D,WAEfzC"}