{"version":3,"file":"grading_popup.min.js","sources":["../src/grading_popup.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to enable inline editing of a comptency grade.\r\n *\r\n * @module report_competency/grading_popup\r\n * @copyright  2015 Damyon Wiese\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/notification', 'core/str', 'core/ajax', 'core/log', 'core/templates', 'tool_lp/dialogue'],\r\n       function($, notification, str, ajax, log, templates, Dialogue) {\r\n\r\n    /**\r\n     * GradingPopup\r\n     *\r\n     * @class report_competency/grading_popup\r\n     * @param {String} regionSelector The regionSelector\r\n     * @param {String} userCompetencySelector The userCompetencySelector\r\n     */\r\n    var GradingPopup = function(regionSelector, userCompetencySelector) {\r\n        this._regionSelector = regionSelector;\r\n        this._userCompetencySelector = userCompetencySelector;\r\n\r\n        $(this._regionSelector).on('click', this._userCompetencySelector, this._handleClick.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Get the data from the clicked cell and open the popup.\r\n     *\r\n     * @method _handleClick\r\n     * @param {Event} e The event\r\n     */\r\n    GradingPopup.prototype._handleClick = function(e) {\r\n        var cell = $(e.target).closest(this._userCompetencySelector);\r\n        var competencyId = $(cell).data('competencyid');\r\n        var courseId = $(cell).data('courseid');\r\n        var userId = $(cell).data('userid');\r\n\r\n        log.debug('Clicked on cell: competencyId=' + competencyId + ', courseId=' + courseId + ', userId=' + userId);\r\n\r\n        var requests = ajax.call([{\r\n            methodname: 'tool_lp_data_for_user_competency_summary_in_course',\r\n            args: {userid: userId, competencyid: competencyId, courseid: courseId},\r\n        }, {\r\n            methodname: 'core_competency_user_competency_viewed_in_course',\r\n            args: {userid: userId, competencyid: competencyId, courseid: courseId},\r\n        }]);\r\n\r\n        $.when(requests[0], requests[1])\r\n        .then(this._contextLoaded.bind(this))\r\n        .catch(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * We loaded the context, now render the template.\r\n     *\r\n     * @method _contextLoaded\r\n     * @param {Object} context\r\n     * @returns {Promise}\r\n     */\r\n    GradingPopup.prototype._contextLoaded = function(context) {\r\n        // We have to display user info in popup.\r\n        context.displayuser = true;\r\n\r\n        M.util.js_pending('report_competency/grading_popup:_contextLoaded');\r\n\r\n        return $.when(\r\n            str.get_string('usercompetencysummary', 'report_competency'),\r\n            templates.render('tool_lp/user_competency_summary_in_course', context)\r\n        )\r\n        .then(function(title, templateData) {\r\n            return new Dialogue(\r\n                title,\r\n                templateData[0],\r\n                function() {\r\n                    templates.runTemplateJS(templateData[1]);\r\n                    M.util.js_complete('report_competency/grading_popup:_contextLoaded');\r\n                },\r\n                this._refresh.bind(this),\r\n                true\r\n            );\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Refresh the page.\r\n     *\r\n     * @method _refresh\r\n     * @returns {Promise}\r\n     */\r\n    GradingPopup.prototype._refresh = function() {\r\n        var region = $(this._regionSelector);\r\n        var courseId = region.data('courseid');\r\n        var moduleId = region.data('moduleid');\r\n        var userId = region.data('userid');\r\n\r\n        // The module id is expected to be an integer, so don't pass empty string.\r\n        if (moduleId === '') {\r\n            moduleId = 0;\r\n        }\r\n\r\n        return ajax.call([{\r\n            methodname: 'report_competency_data_for_report',\r\n            args: {courseid: courseId, userid: userId, moduleid: moduleId},\r\n            done: this._pageContextLoaded.bind(this),\r\n            fail: notification.exception\r\n        }]);\r\n    };\r\n\r\n    /**\r\n     * We loaded the context, now render the template.\r\n     *\r\n     * @method _pageContextLoaded\r\n     * @param {Object} context\r\n     */\r\n    GradingPopup.prototype._pageContextLoaded = function(context) {\r\n        templates.render('report_competency/report', context)\r\n        .then(function(html, js) {\r\n            templates.replaceNode(this._regionSelector, html, js);\r\n\r\n            return;\r\n        }.bind(this))\r\n        .catch(notification.exception);\r\n    };\r\n\r\n    /** @property {String} The selector for the region with the user competencies */\r\n    GradingPopup.prototype._regionSelector = null;\r\n    /** @property {String} The selector for the region with a single user competencies */\r\n    GradingPopup.prototype._userCompetencySelector = null;\r\n\r\n    return GradingPopup;\r\n});\r\n"],"names":["define","$","notification","str","ajax","log","templates","Dialogue","GradingPopup","regionSelector","userCompetencySelector","_regionSelector","_userCompetencySelector","this","on","_handleClick","bind","prototype","e","cell","target","closest","competencyId","data","courseId","userId","debug","requests","call","methodname","args","userid","competencyid","courseid","when","then","_contextLoaded","catch","exception","context","displayuser","M","util","js_pending","get_string","render","title","templateData","runTemplateJS","js_complete","_refresh","region","moduleId","moduleid","done","_pageContextLoaded","fail","html","js","replaceNode"],"mappings":";;;;;;;AAuBAA,yCAAO,CAAC,SAAU,oBAAqB,WAAY,YAAa,WAAY,iBAAkB,qBACvF,SAASC,EAAGC,aAAcC,IAAKC,KAAMC,IAAKC,UAAWC,cASpDC,aAAe,SAASC,eAAgBC,6BACnCC,gBAAkBF,oBAClBG,wBAA0BF,uBAE/BT,EAAEY,KAAKF,iBAAiBG,GAAG,QAASD,KAAKD,wBAAyBC,KAAKE,aAAaC,KAAKH,eAS7FL,aAAaS,UAAUF,aAAe,SAASG,OACvCC,KAAOlB,EAAEiB,EAAEE,QAAQC,QAAQR,KAAKD,yBAChCU,aAAerB,EAAEkB,MAAMI,KAAK,gBAC5BC,SAAWvB,EAAEkB,MAAMI,KAAK,YACxBE,OAASxB,EAAEkB,MAAMI,KAAK,UAE1BlB,IAAIqB,MAAM,iCAAmCJ,aAAe,cAAgBE,SAAW,YAAcC,YAEjGE,SAAWvB,KAAKwB,KAAK,CAAC,CACtBC,WAAY,qDACZC,KAAM,CAACC,OAAQN,OAAQO,aAAcV,aAAcW,SAAUT,WAC9D,CACCK,WAAY,mDACZC,KAAM,CAACC,OAAQN,OAAQO,aAAcV,aAAcW,SAAUT,aAGjEvB,EAAEiC,KAAKP,SAAS,GAAIA,SAAS,IAC5BQ,KAAKtB,KAAKuB,eAAepB,KAAKH,OAC9BwB,MAAMnC,aAAaoC,YAUxB9B,aAAaS,UAAUmB,eAAiB,SAASG,gBAE7CA,QAAQC,aAAc,EAEtBC,EAAEC,KAAKC,WAAW,kDAEX1C,EAAEiC,KACL/B,IAAIyC,WAAW,wBAAyB,qBACxCtC,UAAUuC,OAAO,4CAA6CN,UAEjEJ,KAAK,SAASW,MAAOC,qBACX,IAAIxC,SACPuC,MACAC,aAAa,IACb,WACIzC,UAAU0C,cAAcD,aAAa,IACrCN,EAAEC,KAAKO,YAAY,oDAEvBpC,KAAKqC,SAASlC,KAAKH,OACnB,IAENG,KAAKH,QASXL,aAAaS,UAAUiC,SAAW,eAC1BC,OAASlD,EAAEY,KAAKF,iBAChBa,SAAW2B,OAAO5B,KAAK,YACvB6B,SAAWD,OAAO5B,KAAK,YACvBE,OAAS0B,OAAO5B,KAAK,gBAGR,KAAb6B,WACAA,SAAW,GAGRhD,KAAKwB,KAAK,CAAC,CACdC,WAAY,oCACZC,KAAM,CAACG,SAAUT,SAAUO,OAAQN,OAAQ4B,SAAUD,UACrDE,KAAMzC,KAAK0C,mBAAmBvC,KAAKH,MACnC2C,KAAMtD,aAAaoC,cAU3B9B,aAAaS,UAAUsC,mBAAqB,SAAShB,SACjDjC,UAAUuC,OAAO,2BAA4BN,SAC5CJ,KAAK,SAASsB,KAAMC,IACjBpD,UAAUqD,YAAY9C,KAAKF,gBAAiB8C,KAAMC,KAGpD1C,KAAKH,OACNwB,MAAMnC,aAAaoC,YAIxB9B,aAAaS,UAAUN,gBAAkB,KAEzCH,aAAaS,UAAUL,wBAA0B,KAE1CJ"}