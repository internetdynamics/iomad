{"version":3,"file":"private_files.min.js","sources":["../src/private_files.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to handle AJAX interactions with user private files\r\n *\r\n * @module     core_user/private_files\r\n * @copyright  2020 Marina Glancy\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport DynamicForm from 'core_form/dynamicform';\r\nimport ModalForm from 'core_form/modalform';\r\nimport {get_string as getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\n\r\n/**\r\n * Initialize private files form as AJAX form\r\n *\r\n * @param {String} containerSelector\r\n * @param {String} formClass\r\n */\r\nexport const initDynamicForm = (containerSelector, formClass) => {\r\n    const form = new DynamicForm(document.querySelector(containerSelector), formClass);\r\n\r\n    // When form is saved, refresh it to remove validation errors, if any:\r\n    form.addEventListener(form.events.FORM_SUBMITTED, () => {\r\n        form.load();\r\n        getString('changessaved')\r\n        .then(addToast)\r\n        .catch(null);\r\n    });\r\n\r\n    // Reload the page on cancel.\r\n    form.addEventListener(form.events.CANCEL_BUTTON_PRESSED, () => window.location.reload());\r\n};\r\n\r\n/**\r\n * Initialize private files form as Modal form\r\n *\r\n * @param {String} elementSelector\r\n * @param {String} formClass\r\n */\r\nexport const initModal = (elementSelector, formClass) => {\r\n    document.querySelector(elementSelector).addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        const form = new ModalForm({\r\n            formClass,\r\n            args: {nosubmit: true},\r\n            modalConfig: {title: getString('privatefilesmanage')},\r\n            returnFocus: e.target,\r\n        });\r\n        form.addEventListener(form.events.FORM_SUBMITTED, () => window.location.reload());\r\n        form.show();\r\n    });\r\n};\r\n"],"names":["containerSelector","formClass","form","DynamicForm","document","querySelector","addEventListener","events","FORM_SUBMITTED","load","then","addToast","catch","CANCEL_BUTTON_PRESSED","window","location","reload","elementSelector","e","preventDefault","ModalForm","args","nosubmit","modalConfig","title","returnFocus","target","show"],"mappings":";;;;;;;yOAiC+B,CAACA,kBAAmBC,mBACzCC,KAAO,IAAIC,qBAAYC,SAASC,cAAcL,mBAAoBC,WAGxEC,KAAKI,iBAAiBJ,KAAKK,OAAOC,gBAAgB,KAC9CN,KAAKO,2BACK,gBACTC,KAAKC,YACLC,MAAM,SAIXV,KAAKI,iBAAiBJ,KAAKK,OAAOM,uBAAuB,IAAMC,OAAOC,SAASC,+BAS1D,CAACC,gBAAiBhB,aACvCG,SAASC,cAAcY,iBAAiBX,iBAAiB,SAAS,SAASY,GACvEA,EAAEC,uBACIjB,KAAO,IAAIkB,mBAAU,CACvBnB,UAAAA,UACAoB,KAAM,CAACC,UAAU,GACjBC,YAAa,CAACC,OAAO,mBAAU,uBAC/BC,YAAaP,EAAEQ,SAEnBxB,KAAKI,iBAAiBJ,KAAKK,OAAOC,gBAAgB,IAAMM,OAAOC,SAASC,WACxEd,KAAKyB"}