{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to handle AJAX interactions.\r\n *\r\n * @module     core_user/repository\r\n * @copyright  2020 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport {call as fetchMany} from 'core/ajax';\r\n\r\n/**\r\n * Unenrol the user with the specified user enrolmentid ID.\r\n *\r\n * @param {Number} userEnrolmentId\r\n * @return {Promise}\r\n */\r\nexport const unenrolUser = userEnrolmentId => {\r\n    return fetchMany([{\r\n        methodname: 'core_enrol_unenrol_user_enrolment',\r\n        args: {\r\n            ueid: userEnrolmentId,\r\n        },\r\n    }])[0];\r\n};\r\n\r\n/**\r\n * Submit the user enrolment form with the specified form data.\r\n *\r\n * @param {String} formdata\r\n * @return {Promise}\r\n */\r\nexport const submitUserEnrolmentForm = formdata => {\r\n    return fetchMany([{\r\n        methodname: 'core_enrol_submit_user_enrolment_form',\r\n        args: {\r\n            formdata,\r\n        },\r\n    }])[0];\r\n};\r\n\r\nexport const createNotesForUsers = notes => {\r\n    return fetchMany([{\r\n        methodname: 'core_notes_create_notes',\r\n        args: {\r\n            notes\r\n        }\r\n    }])[0];\r\n};\r\n\r\nexport const sendMessagesToUsers = messages => {\r\n    return fetchMany([{\r\n        methodname: 'core_message_send_instant_messages',\r\n        args: {messages}\r\n    }])[0];\r\n};\r\n"],"names":["userEnrolmentId","methodname","args","ueid","formdata","notes","messages"],"mappings":"oRA8B2BA,kBAChB,cAAU,CAAC,CACdC,WAAY,oCACZC,KAAM,CACFC,KAAMH,oBAEV,oCAS+BI,WAC5B,cAAU,CAAC,CACdH,WAAY,wCACZC,KAAM,CACFE,SAAAA,aAEJ,gCAG2BC,QACxB,cAAU,CAAC,CACdJ,WAAY,0BACZC,KAAM,CACFG,MAAAA,UAEJ,gCAG2BC,WACxB,cAAU,CAAC,CACdL,WAAY,qCACZC,KAAM,CAACI,SAAAA,aACP"}