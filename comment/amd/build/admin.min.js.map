{"version":3,"file":"admin.min.js","sources":["../src/admin.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Comments admin management\r\n *\r\n * @module      core_comment/admin\r\n * @copyright   2022 Paul Holden <paulh@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {get_string as getString} from 'core/str';\r\nimport {deleteComment, deleteComments} from 'core_comment/repository';\r\nimport * as reportEvents from 'core_reportbuilder/local/events';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\n\r\nconst Selectors = {\r\n    commentDelete: '[data-action=\"comment-delete\"]',\r\n    commentDeleteChecked: '[data-togglegroup=\"report-select-all\"][data-toggle=\"slave\"]:checked',\r\n    commentDeleteSelected: '[data-action=\"comment-delete-selected\"]',\r\n};\r\n\r\n/**\r\n * Initialise module\r\n */\r\nexport const init = () => {\r\n    prefetchStrings('core_admin', [\r\n        'confirmdeletecomments',\r\n    ]);\r\n\r\n    prefetchStrings('core', [\r\n        'delete',\r\n        'deleteselected'\r\n    ]);\r\n\r\n    document.addEventListener('click', event => {\r\n        const commentDelete = event.target.closest(Selectors.commentDelete);\r\n        if (commentDelete) {\r\n            event.preventDefault();\r\n\r\n            // Use triggerElement to return focus to the action menu toggle.\r\n            const triggerElement = commentDelete.closest('.dropdown').querySelector('.dropdown-toggle');\r\n            Notification.saveCancelPromise(\r\n                getString('delete', 'core'),\r\n                getString('confirmdeletecomments', 'core_admin'),\r\n                getString('delete', 'core'),\r\n                {triggerElement}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_comment/comment:delete');\r\n                const reportElement = event.target.closest(reportSelectors.regions.report);\r\n\r\n                return deleteComment(commentDelete.dataset.commentId)\r\n                    .then(() => {\r\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                        return pendingPromise.resolve();\r\n                    })\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n\r\n        const commentDeleteSelected = event.target.closest(Selectors.commentDeleteSelected);\r\n        if (commentDeleteSelected) {\r\n            event.preventDefault();\r\n\r\n            const reportElement = document.querySelector(reportSelectors.regions.report);\r\n            const commentDeleteChecked = reportElement.querySelectorAll(Selectors.commentDeleteChecked);\r\n            if (commentDeleteChecked.length === 0) {\r\n                return;\r\n            }\r\n\r\n            Notification.saveCancelPromise(\r\n                getString('deleteselected', 'core'),\r\n                getString('confirmdeletecomments', 'core_admin'),\r\n                getString('delete', 'core'),\r\n                {triggerElement: commentDeleteSelected}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_comment/comments:delete');\r\n                const deleteCommentIds = [...commentDeleteChecked].map(check => check.value);\r\n\r\n                return deleteComments(deleteCommentIds)\r\n                    .then(() => {\r\n                        dispatchEvent(reportEvents.tableReload, {preservePagination: true}, reportElement);\r\n                        return pendingPromise.resolve();\r\n                    })\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    });\r\n};\r\n"],"names":["Selectors","document","addEventListener","event","commentDelete","target","closest","preventDefault","triggerElement","querySelector","saveCancelPromise","then","pendingPromise","Pending","reportElement","reportSelectors","regions","report","dataset","commentId","reportEvents","tableReload","preservePagination","resolve","catch","Notification","exception","commentDeleteSelected","commentDeleteChecked","querySelectorAll","length","deleteCommentIds","map","check","value"],"mappings":"0nDAkCMA,wBACa,iCADbA,+BAEoB,sEAFpBA,gCAGqB,wDAMP,mCACA,aAAc,CAC1B,wDAGY,OAAQ,CACpB,SACA,mBAGJC,SAASC,iBAAiB,SAASC,cACzBC,cAAgBD,MAAME,OAAOC,QAAQN,4BACvCI,cAAe,CACfD,MAAMI,uBAGAC,eAAiBJ,cAAcE,QAAQ,aAAaG,cAAc,0CAC3DC,mBACT,mBAAU,SAAU,SACpB,mBAAU,wBAAyB,eACnC,mBAAU,SAAU,QACpB,CAACF,eAAAA,iBACHG,MAAK,WACGC,eAAiB,IAAIC,iBAAQ,+BAC7BC,cAAgBX,MAAME,OAAOC,QAAQS,gBAAgBC,QAAQC,eAE5D,6BAAcb,cAAcc,QAAQC,WACtCR,MAAK,yCACYS,aAAaC,YAAa,CAACC,oBAAoB,GAAOR,eAC7DF,eAAeW,aAEzBC,MAAMC,sBAAaC,cACzBF,OAAM,eAKPG,sBAAwBxB,MAAME,OAAOC,QAAQN,oCAC/C2B,sBAAuB,CACvBxB,MAAMI,uBAEAO,cAAgBb,SAASQ,cAAcM,gBAAgBC,QAAQC,QAC/DW,qBAAuBd,cAAce,iBAAiB7B,mCACxB,IAAhC4B,qBAAqBE,oCAIZpB,mBACT,mBAAU,iBAAkB,SAC5B,mBAAU,wBAAyB,eACnC,mBAAU,SAAU,QACpB,CAACF,eAAgBmB,wBACnBhB,MAAK,WACGC,eAAiB,IAAIC,iBAAQ,gCAC7BkB,iBAAmB,IAAIH,sBAAsBI,KAAIC,OAASA,MAAMC,eAE/D,8BAAeH,kBACjBpB,MAAK,yCACYS,aAAaC,YAAa,CAACC,oBAAoB,GAAOR,eAC7DF,eAAeW,aAEzBC,MAAMC,sBAAaC,cACzBF,OAAM"}