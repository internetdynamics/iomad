{"version":3,"file":"filters.min.js","sources":["../../../src/local/editor/filters.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Report builder filters editor\r\n *\r\n * @module      core_reportbuilder/local/editor/filters\r\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport $ from 'jquery';\r\nimport CustomEvents from 'core/custom_interaction_events';\r\nimport 'core/inplace_editable';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport SortableList from 'core/sortable_list';\r\nimport {get_string as getString} from 'core/str';\r\nimport Templates from 'core/templates';\r\nimport {add as addToast} from 'core/toast';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport {addFilter, deleteFilter, reorderFilter} from 'core_reportbuilder/local/repository/filters';\r\n\r\n/**\r\n * Reload filters settings region\r\n *\r\n * @param {Element} reportElement\r\n * @param {Object} templateContext\r\n * @return {Promise}\r\n */\r\nconst reloadSettingsFiltersRegion = (reportElement, templateContext) => {\r\n    const pendingPromise = new Pending('core_reportbuilder/filters:reload');\r\n    const settingsFiltersRegion = reportElement.querySelector(reportSelectors.regions.settingsFilters);\r\n\r\n    return Templates.renderForPromise('core_reportbuilder/local/settings/filters', {filters: templateContext})\r\n        .then(({html, js}) => {\r\n            Templates.replaceNode(settingsFiltersRegion, html, js);\r\n\r\n            initFiltersForm();\r\n\r\n            // Re-focus the add filter element after reloading the region.\r\n            const reportAddFilter = reportElement.querySelector(reportSelectors.actions.reportAddFilter);\r\n            reportAddFilter?.focus();\r\n\r\n            return pendingPromise.resolve();\r\n        });\r\n};\r\n\r\n/**\r\n * Initialise filters form, must be called on each init because the form container is re-created when switching editor modes\r\n */\r\nconst initFiltersForm = () => {\r\n    CustomEvents.define(reportSelectors.actions.reportAddFilter, [CustomEvents.events.accessibleChange]);\r\n};\r\n\r\n/**\r\n * Initialise module, prefetch all required strings\r\n *\r\n * @param {Boolean} initialized Ensure we only add our listeners once\r\n */\r\nexport const init = initialized => {\r\n    prefetchStrings('core_reportbuilder', [\r\n        'deletefilter',\r\n        'deletefilterconfirm',\r\n        'filteradded',\r\n        'filterdeleted',\r\n        'filtermoved',\r\n    ]);\r\n\r\n    prefetchStrings('core', [\r\n        'delete',\r\n    ]);\r\n\r\n    initFiltersForm();\r\n    if (initialized) {\r\n        return;\r\n    }\r\n\r\n    // Add filter to report. Use custom events helper to ensure consistency across platforms.\r\n    $(document).on(CustomEvents.events.accessibleChange, reportSelectors.actions.reportAddFilter, event => {\r\n        const reportAddFilter = event.target.closest(reportSelectors.actions.reportAddFilter);\r\n        if (reportAddFilter) {\r\n            event.preventDefault();\r\n\r\n            // Check if dropdown is closed with no filter selected.\r\n            if (reportAddFilter.selectedIndex === 0) {\r\n                return;\r\n            }\r\n\r\n            const reportElement = reportAddFilter.closest(reportSelectors.regions.report);\r\n            const pendingPromise = new Pending('core_reportbuilder/filters:add');\r\n\r\n            addFilter(reportElement.dataset.reportId, reportAddFilter.value)\r\n                .then(data => reloadSettingsFiltersRegion(reportElement, data))\r\n                .then(() => getString('filteradded', 'core_reportbuilder',\r\n                    reportAddFilter.options[reportAddFilter.selectedIndex].text))\r\n                .then(addToast)\r\n                .then(() => pendingPromise.resolve())\r\n                .catch(Notification.exception);\r\n        }\r\n    });\r\n\r\n    document.addEventListener('click', event => {\r\n\r\n        // Remove filter from report.\r\n        const reportRemoveFilter = event.target.closest(reportSelectors.actions.reportRemoveFilter);\r\n        if (reportRemoveFilter) {\r\n            event.preventDefault();\r\n\r\n            const reportElement = reportRemoveFilter.closest(reportSelectors.regions.report);\r\n            const filterContainer = reportRemoveFilter.closest(reportSelectors.regions.activeFilter);\r\n            const filterName = filterContainer.dataset.filterName;\r\n\r\n            Notification.saveCancelPromise(\r\n                getString('deletefilter', 'core_reportbuilder', filterName),\r\n                getString('deletefilterconfirm', 'core_reportbuilder', filterName),\r\n                getString('delete', 'core'),\r\n                {triggerElement: reportRemoveFilter}\r\n            ).then(() => {\r\n                const pendingPromise = new Pending('core_reportbuilder/filters:remove');\r\n\r\n                return deleteFilter(reportElement.dataset.reportId, filterContainer.dataset.filterId)\r\n                    .then(data => reloadSettingsFiltersRegion(reportElement, data))\r\n                    .then(() => addToast(getString('filterdeleted', 'core_reportbuilder', filterName)))\r\n                    .then(() => pendingPromise.resolve())\r\n                    .catch(Notification.exception);\r\n            }).catch(() => {\r\n                return;\r\n            });\r\n        }\r\n    });\r\n\r\n    // Initialize sortable list to handle active filters moving (note JQuery dependency, see MDL-72293 for resolution).\r\n    var activeFiltersSortableList = new SortableList(`${reportSelectors.regions.activeFilters} ul`, {isHorizontal: false});\r\n    activeFiltersSortableList.getElementName = element => Promise.resolve(element.data('filterName'));\r\n\r\n    $(document).on(SortableList.EVENTS.DROP, `${reportSelectors.regions.report} li[data-filter-id]`, (event, info) => {\r\n        if (info.positionChanged) {\r\n            const pendingPromise = new Pending('core_reportbuilder/filters:reorder');\r\n            const reportElement = event.target.closest(reportSelectors.regions.report);\r\n            const filterId = info.element.data('filterId');\r\n            const filterPosition = info.element.data('filterPosition');\r\n\r\n            // Select target position, if moving to the end then count number of element siblings.\r\n            let targetFilterPosition = info.targetNextElement.data('filterPosition') || info.element.siblings().length + 2;\r\n            if (targetFilterPosition > filterPosition) {\r\n                targetFilterPosition--;\r\n            }\r\n\r\n            reorderFilter(reportElement.dataset.reportId, filterId, targetFilterPosition)\r\n                .then(data => reloadSettingsFiltersRegion(reportElement, data))\r\n                .then(() => getString('filtermoved', 'core_reportbuilder', info.element.data('filterName')))\r\n                .then(addToast)\r\n                .then(() => pendingPromise.resolve())\r\n                .catch(Notification.exception);\r\n        }\r\n    });\r\n};\r\n"],"names":["reloadSettingsFiltersRegion","reportElement","templateContext","pendingPromise","Pending","settingsFiltersRegion","querySelector","reportSelectors","regions","settingsFilters","Templates","renderForPromise","filters","then","_ref","html","js","replaceNode","initFiltersForm","reportAddFilter","actions","focus","resolve","define","CustomEvents","events","accessibleChange","initialized","document","on","event","target","closest","preventDefault","selectedIndex","report","dataset","reportId","value","data","options","text","addToast","catch","Notification","exception","addEventListener","reportRemoveFilter","filterContainer","activeFilter","filterName","saveCancelPromise","triggerElement","filterId","SortableList","activeFilters","isHorizontal","getElementName","element","Promise","EVENTS","DROP","info","positionChanged","filterPosition","targetFilterPosition","targetNextElement","siblings","length"],"mappings":"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"}