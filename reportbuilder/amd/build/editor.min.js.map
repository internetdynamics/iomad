{"version":3,"file":"editor.min.js","sources":["../src/editor.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Report builder editor\r\n *\r\n * @module      core_reportbuilder/editor\r\n * @copyright   2021 David Matamoros <davidmc@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n\"use strict\";\r\n\r\nimport $ from 'jquery';\r\nimport 'core/inplace_editable';\r\nimport {addIconToContainer} from 'core/loadingicon';\r\nimport Notification from 'core/notification';\r\nimport Pending from 'core/pending';\r\nimport Templates from 'core/templates';\r\nimport {get_string as getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\nimport * as reportSelectors from 'core_reportbuilder/local/selectors';\r\nimport {init as columnsEditorInit} from 'core_reportbuilder/local/editor/columns';\r\nimport {init as conditionsEditorInit} from 'core_reportbuilder/local/editor/conditions';\r\nimport {init as filtersEditorInit} from 'core_reportbuilder/local/editor/filters';\r\nimport {init as sortingEditorInit} from 'core_reportbuilder/local/editor/sorting';\r\nimport {init as cardviewEditorInit} from 'core_reportbuilder/local/editor/card_view';\r\nimport {getReport} from 'core_reportbuilder/local/repository/reports';\r\nimport {createReportModal} from 'core_reportbuilder/local/repository/modals';\r\n\r\nlet initialized = false;\r\n\r\n/**\r\n * Initialise editor and all it's modules\r\n */\r\nexport const init = () => {\r\n    columnsEditorInit(initialized);\r\n    conditionsEditorInit(initialized);\r\n    filtersEditorInit(initialized);\r\n    sortingEditorInit(initialized);\r\n    cardviewEditorInit(initialized);\r\n\r\n    // Ensure we only add our listeners once (can be called multiple times by mustache template).\r\n    if (initialized) {\r\n        return;\r\n    }\r\n\r\n    // Add event handlers to generic report editor elements.\r\n    document.addEventListener('click', event => {\r\n\r\n        // Toggle between edit and preview mode.\r\n        const toggleEditViewMode = event.target.closest(reportSelectors.actions.toggleEditPreview);\r\n        if (toggleEditViewMode) {\r\n            event.preventDefault();\r\n\r\n            const reportElement = event.target.closest(reportSelectors.regions.report);\r\n            const pendingPromise = new Pending('core_reportbuilder/reports:get');\r\n            const toggledEditMode = toggleEditViewMode.dataset.editMode !== \"1\";\r\n\r\n            addIconToContainer(toggleEditViewMode)\r\n                .then(() => getReport(reportElement.dataset.reportId, toggledEditMode))\r\n                .then(response => Promise.all([\r\n                    $.parseHTML(response.javascript, null, true).map(node => node.innerHTML).join(\"\\n\"),\r\n                    Templates.renderForPromise('core_reportbuilder/local/dynamictabs/editor', response),\r\n                ]))\r\n                .then(([responseJs, {html, js}]) => Templates.replaceNode(reportElement, html, js + responseJs))\r\n                .then(() => pendingPromise.resolve())\r\n                .catch(Notification.exception);\r\n        }\r\n\r\n        // Edit report details modal.\r\n        const reportEdit = event.target.closest(reportSelectors.actions.reportEdit);\r\n        if (reportEdit) {\r\n            event.preventDefault();\r\n\r\n            const reportModal = createReportModal(event.target, getString('editreportdetails', 'core_reportbuilder'),\r\n                reportEdit.dataset.reportId);\r\n            reportModal.addEventListener(reportModal.events.FORM_SUBMITTED, () => {\r\n                getString('reportupdated', 'core_reportbuilder')\r\n                    .then(addToast)\r\n                    .then(() => {\r\n                        return window.location.reload();\r\n                    })\r\n                    .catch(Notification.exception);\r\n            });\r\n            reportModal.show();\r\n        }\r\n    });\r\n\r\n    initialized = true;\r\n};\r\n"],"names":["initialized","document","addEventListener","event","toggleEditViewMode","target","closest","reportSelectors","actions","toggleEditPreview","preventDefault","reportElement","regions","report","pendingPromise","Pending","toggledEditMode","dataset","editMode","then","reportId","response","Promise","all","$","parseHTML","javascript","map","node","innerHTML","join","Templates","renderForPromise","_ref","responseJs","html","js","replaceNode","resolve","catch","Notification","exception","reportEdit","reportModal","events","FORM_SUBMITTED","addToast","window","location","reload","show"],"mappings":"09DA0CIA,aAAc,gBAKE,uBACEA,kCACGA,+BACHA,+BACAA,iCACCA,aAGfA,cAKJC,SAASC,iBAAiB,SAASC,cAGzBC,mBAAqBD,MAAME,OAAOC,QAAQC,gBAAgBC,QAAQC,sBACpEL,mBAAoB,CACpBD,MAAMO,uBAEAC,cAAgBR,MAAME,OAAOC,QAAQC,gBAAgBK,QAAQC,QAC7DC,eAAiB,IAAIC,iBAAQ,kCAC7BC,gBAA0D,MAAxCZ,mBAAmBa,QAAQC,6CAEhCd,oBACde,MAAK,KAAM,sBAAUR,cAAcM,QAAQG,SAAUJ,mBACrDG,MAAKE,UAAYC,QAAQC,IAAI,CAC1BC,gBAAEC,UAAUJ,SAASK,WAAY,MAAM,GAAMC,KAAIC,MAAQA,KAAKC,YAAWC,KAAK,MAC9EC,mBAAUC,iBAAiB,8CAA+CX,cAE7EF,MAAKc,WAAEC,YAAYC,KAACA,KAADC,GAAOA,iBAASL,mBAAUM,YAAY1B,cAAewB,KAAMC,GAAKF,eACnFf,MAAK,IAAML,eAAewB,YAC1BC,MAAMC,sBAAaC,iBAItBC,WAAavC,MAAME,OAAOC,QAAQC,gBAAgBC,QAAQkC,eAC5DA,WAAY,CACZvC,MAAMO,uBAEAiC,aAAc,6BAAkBxC,MAAME,QAAQ,mBAAU,oBAAqB,sBAC/EqC,WAAWzB,QAAQG,UACvBuB,YAAYzC,iBAAiByC,YAAYC,OAAOC,gBAAgB,yBAClD,gBAAiB,sBACtB1B,KAAK2B,YACL3B,MAAK,IACK4B,OAAOC,SAASC,WAE1BV,MAAMC,sBAAaC,cAE5BE,YAAYO,WAIpBlD,aAAc"}