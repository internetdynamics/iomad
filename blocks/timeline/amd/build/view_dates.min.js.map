{"version":3,"file":"view_dates.min.js","sources":["../src/view_dates.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Manage the timeline dates view for the timeline block.\r\n *\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(\r\n[\r\n    'jquery',\r\n    'block_timeline/event_list',\r\n    'core/pubsub',\r\n    'core/paged_content_events'\r\n],\r\nfunction(\r\n    $,\r\n    EventList,\r\n    PubSub,\r\n    PagedContentEvents\r\n) {\r\n\r\n    var SELECTORS = {\r\n        EVENT_LIST_CONTAINER: '[data-region=\"event-list-container\"]',\r\n        NO_COURSES_EMPTY_MESSAGE: '[data-region=\"no-courses-empty-message\"]',\r\n    };\r\n\r\n    /**\r\n     * Setup the listeners for the timeline block\r\n     *\r\n     * @param {string} root view dates container\r\n     * @param {string} namespace The namespace for the paged content\r\n     */\r\n    var registerEventListeners = function(root, namespace) {\r\n        var event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\r\n        PubSub.subscribe(event, function(limit) {\r\n            $(root).data('limit', limit);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialise the event list and being loading the events.\r\n     *\r\n     * @param {object} root The root element for the timeline dates view.\r\n     */\r\n    var load = function(root) {\r\n\r\n        if (!root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\r\n            var eventListContainer = root.find(SELECTORS.EVENT_LIST_CONTAINER);\r\n            var namespace = $(eventListContainer).attr('id') + \"user_block_timeline\" + Math.random();\r\n            registerEventListeners(root, namespace);\r\n\r\n            var config = {\r\n                persistentLimitKey: \"block_timeline_user_limit_preference\",\r\n                eventNamespace: namespace\r\n            };\r\n            EventList.init(eventListContainer, config);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Initialise the timeline dates view. Begin loading the events\r\n     * if this view is active.\r\n     *\r\n     * @param {object} root The root element for the timeline courses view.\r\n     */\r\n    var init = function(root) {\r\n        root = $(root);\r\n\r\n        // Only need to handle events loading if the user is actively enrolled in a course and this view is active.\r\n        if (root.hasClass('active') && !root.find(SELECTORS.NO_COURSES_EMPTY_MESSAGE).length) {\r\n            load(root);\r\n            root.attr('data-seen', true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset the view back to it's initial state. If this view is active then\r\n     * beging loading the events.\r\n     *\r\n     * @param {object} root The root element for the timeline courses view.\r\n     */\r\n    var reset = function(root) {\r\n        root.removeAttr('data-seen');\r\n        if (root.hasClass('active')) {\r\n            load(root);\r\n            root.attr('data-seen', true);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Load the events if this is the first time the view is displayed.\r\n     *\r\n     * @param {object} root The root element for the timeline courses view.\r\n     */\r\n    var shown = function(root) {\r\n        if (!root.attr('data-seen')) {\r\n            load(root);\r\n            root.attr('data-seen', true);\r\n        }\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n        reset: reset,\r\n        shown: shown\r\n    };\r\n});\r\n"],"names":["define","$","EventList","PubSub","PagedContentEvents","SELECTORS","load","root","find","length","eventListContainer","namespace","attr","Math","random","event","SET_ITEMS_PER_PAGE_LIMIT","subscribe","limit","data","registerEventListeners","config","persistentLimitKey","eventNamespace","init","hasClass","reset","removeAttr","shown"],"mappings":";;;;;;AAsBAA,mCACA,CACI,SACA,4BACA,cACA,8BAEJ,SACIC,EACAC,UACAC,OACAC,wBAGIC,+BACsB,uCADtBA,mCAE0B,2CAqB1BC,KAAO,SAASC,UAEXA,KAAKC,KAAKH,oCAAoCI,OAAQ,KACnDC,mBAAqBH,KAAKC,KAAKH,gCAC/BM,UAAYV,EAAES,oBAAoBE,KAAK,MAAQ,sBAAwBC,KAAKC,UAhB3D,SAASP,KAAMI,eACpCI,MAAQJ,UAAYP,mBAAmBY,yBAC3Cb,OAAOc,UAAUF,OAAO,SAASG,OAC7BjB,EAAEM,MAAMY,KAAK,QAASD,UActBE,CAAuBb,KAAMI,eAEzBU,OAAS,CACTC,mBAAoB,uCACpBC,eAAgBZ,WAEpBT,UAAUsB,KAAKd,mBAAoBW,gBA8CpC,CACHG,KArCO,SAASjB,OAChBA,KAAON,EAAEM,OAGAkB,SAAS,YAAclB,KAAKC,KAAKH,oCAAoCI,SAC1EH,KAAKC,MACLA,KAAKK,KAAK,aAAa,KAgC3Bc,MAtBQ,SAASnB,MACjBA,KAAKoB,WAAW,aACZpB,KAAKkB,SAAS,YACdnB,KAAKC,MACLA,KAAKK,KAAK,aAAa,KAmB3BgB,MAVQ,SAASrB,MACZA,KAAKK,KAAK,eACXN,KAAKC,MACLA,KAAKK,KAAK,aAAa"}