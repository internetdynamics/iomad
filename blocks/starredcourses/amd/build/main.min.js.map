{"version":3,"file":"main.min.js","sources":["../src/main.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript to initialise the starred courses block.\r\n *\r\n * @module block_starredcourses/main\r\n * @copyright   2018 Simey Lameze <simey@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(\r\n[\r\n    'jquery',\r\n    'core/notification',\r\n    'block_starredcourses/repository',\r\n    'core/pubsub',\r\n    'core/templates',\r\n    'core_course/events'\r\n],\r\nfunction(\r\n    $,\r\n    Notification,\r\n    Repository,\r\n    PubSub,\r\n    Templates,\r\n    CourseEvents\r\n) {\r\n\r\n    var SELECTORS = {\r\n        BLOCK_CONTAINER: '[data-region=\"starred-courses\"]',\r\n        STARRED_COURSES_REGION_VIEW: '[data-region=\"starred-courses-view\"]',\r\n        STARRED_COURSES_REGION: '[data-region=\"starred-courses-view-content\"]'\r\n    };\r\n\r\n    /**\r\n     * Render the starred courses.\r\n     *\r\n     * @method renderCourses\r\n     * @param {object} root The root element for the starred view.\r\n     * @param {array} courses containing array of returned courses.\r\n     * @returns {promise} Resolved with HTML and JS strings\r\n     */\r\n    var renderCourses = function(root, courses) {\r\n        if (courses.length > 0) {\r\n            return Templates.render('core_course/view-cards', {\r\n                courses: courses\r\n            });\r\n        } else {\r\n            var nocoursesimg = root.find(SELECTORS.STARRED_COURSES_REGION_VIEW).attr('data-nocoursesimg');\r\n            return Templates.render('block_starredcourses/no-courses', {\r\n                nocoursesimg: nocoursesimg\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Fetch user's starred courses and reload the content of the block.\r\n     *\r\n     * @param {object} root The root element for the starred view.\r\n     * @returns {promise} The updated content for the block.\r\n     */\r\n    var reloadContent = function(root) {\r\n        var content = root.find(SELECTORS.STARRED_COURSES_REGION);\r\n\r\n        var args = {\r\n            limit: 0,\r\n            offset: 0,\r\n        };\r\n\r\n        return Repository.getStarredCourses(args)\r\n            .then(function(courses) {\r\n                // Whether the course category should be displayed in the course item.\r\n                var showcoursecategory = $(SELECTORS.BLOCK_CONTAINER).data('displaycoursecategory');\r\n                courses = courses.map(function(course) {\r\n                    course.showcoursecategory = showcoursecategory;\r\n                    return course;\r\n                });\r\n                return renderCourses(root, courses);\r\n            }).then(function(html, js) {\r\n                return Templates.replaceNodeContents(content, html, js);\r\n            }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Register event listeners for the block.\r\n     *\r\n     * @param {object} root The calendar root element\r\n     */\r\n    var registerEventListeners = function(root) {\r\n        PubSub.subscribe(CourseEvents.favourited, function() {\r\n            reloadContent(root);\r\n        });\r\n\r\n        PubSub.subscribe(CourseEvents.unfavorited, function() {\r\n            reloadContent(root);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialise all of the modules for the starred courses block.\r\n     *\r\n     * @param {object} root The root element for the block.\r\n     */\r\n    var init = function(root) {\r\n        root = $(root);\r\n\r\n        registerEventListeners(root);\r\n        reloadContent(root);\r\n    };\r\n\r\n    return {\r\n        init: init\r\n    };\r\n});\r\n"],"names":["define","$","Notification","Repository","PubSub","Templates","CourseEvents","SELECTORS","reloadContent","root","content","find","getStarredCourses","limit","offset","then","courses","showcoursecategory","data","map","course","length","render","nocoursesimg","attr","renderCourses","html","js","replaceNodeContents","catch","exception","init","subscribe","favourited","unfavorited","registerEventListeners"],"mappings":";;;;;;;AAuBAA,mCACA,CACI,SACA,oBACA,kCACA,cACA,iBACA,uBAEJ,SACIC,EACAC,aACAC,WACAC,OACAC,UACAC,kBAGIC,0BACiB,kCADjBA,sCAE6B,uCAF7BA,iCAGwB,+CA8BxBC,cAAgB,SAASC,UACrBC,QAAUD,KAAKE,KAAKJ,yCAOjBJ,WAAWS,kBALP,CACPC,MAAO,EACPC,OAAQ,IAIPC,MAAK,SAASC,aAEPC,mBAAqBhB,EAAEM,2BAA2BW,KAAK,gCAC3DF,QAAUA,QAAQG,KAAI,SAASC,eAC3BA,OAAOH,mBAAqBA,mBACrBG,UAjCH,SAASX,KAAMO,YAC3BA,QAAQK,OAAS,SACVhB,UAAUiB,OAAO,yBAA0B,CAC9CN,QAASA,cAGTO,aAAed,KAAKE,KAAKJ,uCAAuCiB,KAAK,4BAClEnB,UAAUiB,OAAO,kCAAmC,CACvDC,aAAcA,eA2BPE,CAAchB,KAAMO,YAC5BD,MAAK,SAASW,KAAMC,WACZtB,UAAUuB,oBAAoBlB,QAASgB,KAAMC,OACrDE,MAAM3B,aAAa4B,kBA8BvB,CACHC,KARO,SAAStB,OAfS,SAASA,MAClCL,OAAO4B,UAAU1B,aAAa2B,YAAY,WACtCzB,cAAcC,SAGlBL,OAAO4B,UAAU1B,aAAa4B,aAAa,WACvC1B,cAAcC,UAYlB0B,CAFA1B,KAAOR,EAAEQ,OAGTD,cAAcC"}