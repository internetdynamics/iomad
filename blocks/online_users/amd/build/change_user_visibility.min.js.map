{"version":3,"file":"change_user_visibility.min.js","sources":["../src/change_user_visibility.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module that handles the change of the user's visibility in the\r\n * online users block.\r\n *\r\n * @module     block_online_users/change_user_visibility\r\n * @copyright  2018 Mihail Geshoski <mihail@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'],\r\n        function($, Ajax, Str, Notification) {\r\n\r\n    /**\r\n     * Selectors.\r\n     *\r\n     * @access private\r\n     * @type {Object}\r\n     */\r\n    var SELECTORS = {\r\n        CHANGE_VISIBILITY_LINK: '#change-user-visibility',\r\n        CHANGE_VISIBILITY_ICON: '#change-user-visibility .icon'\r\n    };\r\n\r\n    /**\r\n     * Change user visibility in the online users block.\r\n     *\r\n     * @method changeVisibility\r\n     * @param {String} action\r\n     * @param {String} userid\r\n     * @private\r\n     */\r\n    var changeVisibility = function(action, userid) {\r\n\r\n        var value = action == \"show\" ? 1 : 0;\r\n        var preferences = [{\r\n            'name': 'block_online_users_uservisibility',\r\n            'value': value,\r\n            'userid': userid\r\n        }];\r\n\r\n        var request = {\r\n            methodname: 'core_user_set_user_preferences',\r\n            args: {\r\n                preferences: preferences\r\n            }\r\n        };\r\n        Ajax.call([request])[0].then(function(data) {\r\n            if (data.saved) {\r\n                var newAction = oppositeAction(action);\r\n                changeVisibilityLinkAttr(newAction);\r\n                changeVisibilityIconAttr(newAction);\r\n            }\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Get the opposite action.\r\n     *\r\n     * @method oppositeAction\r\n     * @param {String} action\r\n     * @return {String}\r\n     * @private\r\n     */\r\n    var oppositeAction = function(action) {\r\n        return action == 'show' ? 'hide' : 'show';\r\n    };\r\n\r\n    /**\r\n     * Change the attribute values of the user visibility link in the online users block.\r\n     *\r\n     * @method changeVisibilityLinkAttr\r\n     * @param {String} action\r\n     * @private\r\n     */\r\n    var changeVisibilityLinkAttr = function(action) {\r\n        getTitle(action).then(function(title) {\r\n            $(SELECTORS.CHANGE_VISIBILITY_LINK).attr({\r\n                'data-action': action,\r\n                'title': title\r\n            });\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Change the attribute values of the user visibility icon in the online users block.\r\n     *\r\n     * @method changeVisibilityIconAttr\r\n     * @param {String} action\r\n     * @private\r\n     */\r\n    var changeVisibilityIconAttr = function(action) {\r\n        var icon = $(SELECTORS.CHANGE_VISIBILITY_ICON);\r\n        getTitle(action).then(function(title) {\r\n            // Add the proper title to the icon.\r\n            $(icon).attr({\r\n                'title': title,\r\n                'aria-label': title\r\n            });\r\n            // If the icon is an image.\r\n            if (icon.is(\"img\")) {\r\n                $(icon).attr({\r\n                    'src': M.util.image_url('t/' + action),\r\n                    'alt': title\r\n                });\r\n            } else {\r\n                // Add the new icon class and remove the old one.\r\n                $(icon).addClass(getIconClass(action));\r\n                $(icon).removeClass(getIconClass(oppositeAction(action)));\r\n            }\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Get the proper class for the user visibility icon in the online users block.\r\n     *\r\n     * @method getIconClass\r\n     * @param {String} action\r\n     * @return {String}\r\n     * @private\r\n     */\r\n    var getIconClass = function(action) {\r\n        return action == 'show' ? 'fa-eye-slash' : 'fa-eye';\r\n    };\r\n\r\n    /**\r\n     * Get the title description of the user visibility link in the online users block.\r\n     *\r\n     * @method getTitle\r\n     * @param {String} action\r\n     * @return {object} jQuery promise\r\n     * @private\r\n     */\r\n    var getTitle = function(action) {\r\n        return Str.get_string('online_status:' + action, 'block_online_users');\r\n    };\r\n\r\n    return {\r\n        // Public variables and functions.\r\n        /**\r\n         * Initialise change user visibility function.\r\n         *\r\n         * @method init\r\n         */\r\n        init: function() {\r\n            $(SELECTORS.CHANGE_VISIBILITY_LINK).on('click', function(e) {\r\n                e.preventDefault();\r\n                var action = ($(this).attr('data-action'));\r\n                var userid = ($(this).attr('data-userid'));\r\n                changeVisibility(action, userid);\r\n            });\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","Str","Notification","SELECTORS","oppositeAction","action","changeVisibilityLinkAttr","getTitle","then","title","attr","catch","exception","changeVisibilityIconAttr","icon","is","M","util","image_url","addClass","getIconClass","removeClass","get_string","init","on","e","preventDefault","userid","request","methodname","args","preferences","call","data","saved","newAction","changeVisibility","this"],"mappings":";;;;;;;;AAuBAA,mDAAO,CAAC,SAAU,YAAa,WAAY,sBACnC,SAASC,EAAGC,KAAMC,IAAKC,kBAQvBC,iCACwB,0BADxBA,iCAEwB,gCA4CxBC,eAAiB,SAASC,cACT,QAAVA,OAAmB,OAAS,QAUnCC,yBAA2B,SAASD,QACpCE,SAASF,QAAQG,MAAK,SAASC,OAC3BV,EAAEI,kCAAkCO,KAAK,eACtBL,aACNI,WAGdE,MAAMT,aAAaU,YAUtBC,yBAA2B,SAASR,YAChCS,KAAOf,EAAEI,kCACbI,SAASF,QAAQG,MAAK,SAASC,OAE3BV,EAAEe,MAAMJ,KAAK,OACAD,mBACKA,QAGdK,KAAKC,GAAG,OACRhB,EAAEe,MAAMJ,KAAK,KACFM,EAAEC,KAAKC,UAAU,KAAOb,YACxBI,SAIXV,EAAEe,MAAMK,SAASC,aAAaf,SAC9BN,EAAEe,MAAMO,YAAYD,aAAahB,eAAeC,cAGrDM,MAAMT,aAAaU,YAWtBQ,aAAe,SAASf,cACP,QAAVA,OAAmB,eAAiB,UAW3CE,SAAW,SAASF,eACbJ,IAAIqB,WAAW,iBAAmBjB,OAAQ,6BAG9C,CAOHkB,KAAM,WACFxB,EAAEI,kCAAkCqB,GAAG,SAAS,SAASC,GACrDA,EAAEC,iBArHS,SAASrB,OAAQsB,YAShCC,QAAU,CACVC,WAAY,iCACZC,KAAM,CACFC,YATU,CAAC,MACP,0CAFU,QAAV1B,OAAmB,EAAI,SAIrBsB,WASd3B,KAAKgC,KAAK,CAACJ,UAAU,GAAGpB,MAAK,SAASyB,SAC9BA,KAAKC,MAAO,KACRC,UAAY/B,eAAeC,QAC/BC,yBAAyB6B,WACzBtB,yBAAyBsB,eAG9BxB,MAAMT,aAAaU,WAkGdwB,CAFcrC,EAAEsC,MAAM3B,KAAK,eACbX,EAAEsC,MAAM3B,KAAK"}