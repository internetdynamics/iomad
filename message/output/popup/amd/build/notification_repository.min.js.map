{"version":3,"file":"notification_repository.min.js","sources":["../src/notification_repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Retrieves notifications from the server.\r\n *\r\n * @module     message_popup/notification_repository\r\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\r\n    /**\r\n     * Retrieve a list of notifications from the server.\r\n     *\r\n     * @param {object} args The request arguments\r\n     * @return {object} jQuery promise\r\n     */\r\n    var query = function(args) {\r\n        if (typeof args.limit === 'undefined') {\r\n            args.limit = 20;\r\n        }\r\n\r\n        if (typeof args.offset === 'undefined') {\r\n            args.offset = 0;\r\n        }\r\n\r\n        var request = {\r\n            methodname: 'message_popup_get_popup_notifications',\r\n            args: args\r\n        };\r\n\r\n        var promise = Ajax.call([request])[0];\r\n\r\n        promise.fail(Notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Get the number of unread notifications from the server.\r\n     *\r\n     * @param {object} args The request arguments\r\n     * @return {object} jQuery promise\r\n     */\r\n    var countUnread = function(args) {\r\n        var request = {\r\n            methodname: 'message_popup_get_unread_popup_notification_count',\r\n            args: args\r\n        };\r\n\r\n        var promise = Ajax.call([request])[0];\r\n\r\n        promise.fail(Notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Mark all notifications for the given user as read.\r\n     *\r\n     * @param {object} args The request arguments:\r\n     * @return {object} jQuery promise\r\n     */\r\n    var markAllAsRead = function(args) {\r\n        var request = {\r\n            methodname: 'core_message_mark_all_notifications_as_read',\r\n            args: args\r\n        };\r\n\r\n        var promise = Ajax.call([request])[0];\r\n\r\n        promise.fail(Notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Mark a specific notification as read.\r\n     *\r\n     * @param {int} id The notification id\r\n     * @param {int} timeread The read timestamp (optional)\r\n     * @return {object} jQuery promise\r\n     */\r\n    var markAsRead = function(id, timeread) {\r\n        var args = {\r\n            notificationid: id,\r\n        };\r\n\r\n        if (timeread) {\r\n            args.timeread = timeread;\r\n        }\r\n\r\n        var request = {\r\n            methodname: 'core_message_mark_notification_read',\r\n            args: args\r\n        };\r\n\r\n        var promise = Ajax.call([request])[0];\r\n\r\n        promise.fail(Notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    return {\r\n        query: query,\r\n        countUnread: countUnread,\r\n        markAllAsRead: markAllAsRead,\r\n        markAsRead: markAsRead,\r\n    };\r\n});\r\n"],"names":["define","Ajax","Notification","query","args","limit","offset","request","methodname","promise","call","fail","exception","countUnread","markAllAsRead","markAsRead","id","timeread","notificationid"],"mappings":";;;;;;;AAsBAA,+CAAO,CAAC,YAAa,sBAAsB,SAASC,KAAMC,oBA8F/C,CACHC,MAxFQ,SAASC,WACS,IAAfA,KAAKC,QACZD,KAAKC,MAAQ,SAGU,IAAhBD,KAAKE,SACZF,KAAKE,OAAS,OAGdC,QAAU,CACVC,WAAY,wCACZJ,KAAMA,MAGNK,QAAUR,KAAKS,KAAK,CAACH,UAAU,UAEnCE,QAAQE,KAAKT,aAAaU,WAEnBH,SAuEPI,YA9Dc,SAAST,UACnBG,QAAU,CACVC,WAAY,oDACZJ,KAAMA,MAGNK,QAAUR,KAAKS,KAAK,CAACH,UAAU,UAEnCE,QAAQE,KAAKT,aAAaU,WAEnBH,SAqDPK,cA5CgB,SAASV,UACrBG,QAAU,CACVC,WAAY,8CACZJ,KAAMA,MAGNK,QAAUR,KAAKS,KAAK,CAACH,UAAU,UAEnCE,QAAQE,KAAKT,aAAaU,WAEnBH,SAmCPM,WAzBa,SAASC,GAAIC,cACtBb,KAAO,CACPc,eAAgBF,IAGhBC,WACAb,KAAKa,SAAWA,cAGhBV,QAAU,CACVC,WAAY,sCACZJ,KAAMA,MAGNK,QAAUR,KAAKS,KAAK,CAACH,UAAU,UAEnCE,QAAQE,KAAKT,aAAaU,WAEnBH"}