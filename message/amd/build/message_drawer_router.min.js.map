{"version":3,"file":"message_drawer_router.min.js","sources":["../src/message_drawer_router.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A simple router for the message drawer that allows navigating between\r\n * the \"pages\" in the drawer.\r\n *\r\n * This module will maintain a linear history of the unique pages access\r\n * to allow navigating back.\r\n *\r\n * @module     core_message/message_drawer_router\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n[\r\n    'jquery',\r\n    'core/pubsub',\r\n    'core/str',\r\n    'core_message/message_drawer_events',\r\n    'core/aria',\r\n],\r\nfunction(\r\n    $,\r\n    PubSub,\r\n    Str,\r\n    MessageDrawerEvents,\r\n    Aria\r\n) {\r\n\r\n    /* @var {object} routes Message drawer route elements and callbacks. */\r\n    var routes = {};\r\n\r\n    /* @var {object} history Store for route objects history. */\r\n    var history = {};\r\n\r\n    var SELECTORS = {\r\n        CAN_RECEIVE_FOCUS: 'input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]',\r\n        ROUTES_BACK: '[data-route-back]'\r\n    };\r\n\r\n    /**\r\n     * Add a route.\r\n     *\r\n     * @param {String} namespace Unique identifier for the Routes\r\n     * @param {string} route Route config name.\r\n     * @param {array} parameters Route parameters.\r\n     * @param {callback} onGo Route initialization function.\r\n     * @param {callback} getDescription Route initialization function.\r\n     */\r\n    var add = function(namespace, route, parameters, onGo, getDescription) {\r\n        if (!routes[namespace]) {\r\n            routes[namespace] = [];\r\n        }\r\n\r\n        routes[namespace][route] =\r\n            {\r\n                parameters: parameters,\r\n                onGo: onGo,\r\n                getDescription: getDescription\r\n            };\r\n    };\r\n\r\n    /**\r\n     * Go to a defined route and run the route callbacks.\r\n     *\r\n     * @param {String} namespace Unique identifier for the Routes\r\n     * @param {string} newRoute Route config name.\r\n     * @return {object} record Current route record with route config name and parameters.\r\n     */\r\n    var changeRoute = function(namespace, newRoute) {\r\n        var newConfig;\r\n\r\n        // Check if the Route change call is made from an element in the app panel.\r\n        var fromPanel = [].slice.call(arguments).some(function(arg) {\r\n            return arg == 'frompanel';\r\n        });\r\n        // Get the rest of the arguments, if any.\r\n        var args = [].slice.call(arguments, 2);\r\n        var renderPromise = $.Deferred().resolve().promise();\r\n\r\n        Object.keys(routes[namespace]).forEach(function(route) {\r\n            var config = routes[namespace][route];\r\n            var isMatch = route === newRoute;\r\n\r\n            if (isMatch) {\r\n                newConfig = config;\r\n            }\r\n\r\n            config.parameters.forEach(function(element) {\r\n                // Some parameters may be null, or not an element.\r\n                if (typeof element !== 'object' || element === null) {\r\n                    return;\r\n                }\r\n\r\n                element.removeClass('previous');\r\n                element.attr('data-from-panel', false);\r\n\r\n                if (isMatch) {\r\n                    if (fromPanel) {\r\n                        // Set this attribute to let the conversation renderer know not to show a back button.\r\n                        element.attr('data-from-panel', true);\r\n                    }\r\n                    element.removeClass('hidden');\r\n                    Aria.unhide(element.get());\r\n                } else {\r\n                    // For the message index page elements in the left panel should not be hidden.\r\n                    if (!element.attr('data-in-panel')) {\r\n                        element.addClass('hidden');\r\n                        Aria.hide(element.get());\r\n                    } else if (newRoute == 'view-search' || newRoute == 'view-overview') {\r\n                        element.addClass('hidden');\r\n                        Aria.hide(element.get());\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        if (newConfig) {\r\n            if (newConfig.onGo) {\r\n                renderPromise = newConfig.onGo.apply(undefined, newConfig.parameters.concat(args));\r\n                var currentFocusElement = $(document.activeElement);\r\n                var hasFocus = false;\r\n                var firstFocusable = null;\r\n\r\n                // No need to start at 0 as we know that is the namespace.\r\n                for (var i = 1; i < newConfig.parameters.length; i++) {\r\n                    var element = newConfig.parameters[i];\r\n\r\n                    // Some parameters may be null, or not an element.\r\n                    if (typeof element !== 'object' || element === null) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (!firstFocusable) {\r\n                        firstFocusable = element;\r\n                    }\r\n\r\n                    if (element.has(currentFocusElement).length) {\r\n                        hasFocus = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if (!hasFocus) {\r\n                    // This page doesn't have focus yet so focus the first focusable\r\n                    // element in the new view.\r\n                    firstFocusable.find(SELECTORS.CAN_RECEIVE_FOCUS).filter(':visible').first().focus();\r\n                }\r\n            }\r\n        }\r\n\r\n        var record = {\r\n            route: newRoute,\r\n            params: args,\r\n            renderPromise: renderPromise\r\n        };\r\n\r\n        PubSub.publish(MessageDrawerEvents.ROUTE_CHANGED, record);\r\n\r\n        return record;\r\n    };\r\n\r\n    /**\r\n     * Go to a defined route and store the route history.\r\n     *\r\n     * @param {String} namespace Unique identifier for the Routes\r\n     * @return {object} record Current route record with route config name and parameters.\r\n     */\r\n    var go = function(namespace) {\r\n        var currentFocusElement = $(document.activeElement);\r\n\r\n        var record = changeRoute.apply(namespace, arguments);\r\n        var inHistory = false;\r\n\r\n        if (!history[namespace]) {\r\n            history[namespace] = [];\r\n        }\r\n\r\n        // History stores a unique list of routes. Check to see if the new route\r\n        // is already in the history, if it is then forget all history after it.\r\n        // This ensures there are no duplicate routes in history and that it represents\r\n        // a linear path of routes (it never stores something like [foo, bar, foo])).\r\n        history[namespace] = history[namespace].reduce(function(carry, previous) {\r\n            if (previous.route === record.route) {\r\n                inHistory = true;\r\n            }\r\n\r\n            if (!inHistory) {\r\n                carry.push(previous);\r\n            }\r\n\r\n            return carry;\r\n        }, []);\r\n\r\n        var historylength = history[namespace].length;\r\n        var previousRecord = historylength ? history[namespace][historylength - 1] : null;\r\n\r\n        if (previousRecord) {\r\n            var prevConfig = routes[namespace][previousRecord.route];\r\n            var elements = prevConfig.parameters;\r\n\r\n            // The first one will be the namespace, skip it.\r\n            for (var i = 1; i < elements.length; i++) {\r\n                // Some parameters may be null, or not an element.\r\n                if (typeof elements[i] !== 'object' || elements[i] === null) {\r\n                    continue;\r\n                }\r\n\r\n                elements[i].addClass('previous');\r\n            }\r\n\r\n            previousRecord.focusElement = currentFocusElement;\r\n\r\n            if (prevConfig.getDescription) {\r\n                // If the route has a description then set it on the back button for\r\n                // the new page we're displaying.\r\n                prevConfig.getDescription.apply(null, prevConfig.parameters.concat(previousRecord.params))\r\n                    .then(function(description) {\r\n                        return Str.get_string('backto', 'core_message', description);\r\n                    })\r\n                    .then(function(label) {\r\n                        // Wait for the new page to finish rendering so that we know\r\n                        // that the back button is visible.\r\n                        return record.renderPromise.then(function() {\r\n                            // Find the elements for the new route we displayed.\r\n                            routes[namespace][record.route].parameters.forEach(function(element) {\r\n                                // Some parameters may be null, or not an element.\r\n                                if (typeof element !== 'object' || !element) {\r\n                                    return;\r\n                                }\r\n                                // Update the aria label for the back button.\r\n                                element.find(SELECTORS.ROUTES_BACK).attr('aria-label', label);\r\n                            });\r\n                        });\r\n                    })\r\n                    .catch(function() {\r\n                        // Silently ignore.\r\n                    });\r\n            }\r\n        }\r\n        history[namespace].push(record);\r\n        return record;\r\n    };\r\n\r\n    /**\r\n     * Go back to the previous route record stored in history.\r\n     *\r\n     * @param {String} namespace Unique identifier for the Routes\r\n     */\r\n    var back = function(namespace) {\r\n        if (history[namespace].length) {\r\n            // Remove the current route.\r\n            history[namespace].pop();\r\n            var previous = history[namespace].pop();\r\n\r\n            if (previous) {\r\n                // If we have a previous route then show it.\r\n                go.apply(undefined, [namespace, previous.route].concat(previous.params));\r\n                // Delay the focus 50 milliseconds otherwise it doesn't correctly\r\n                // focus the element for some reason...\r\n                window.setTimeout(function() {\r\n                    previous.focusElement.focus();\r\n                }, 50);\r\n            }\r\n        }\r\n    };\r\n\r\n    return {\r\n        add: add,\r\n        go: go,\r\n        back: back\r\n    };\r\n});\r\n"],"names":["define","$","PubSub","Str","MessageDrawerEvents","Aria","routes","history","SELECTORS","changeRoute","namespace","newRoute","newConfig","fromPanel","slice","call","arguments","some","arg","args","renderPromise","Deferred","resolve","promise","Object","keys","forEach","route","config","isMatch","parameters","element","removeClass","attr","unhide","get","addClass","hide","onGo","apply","undefined","concat","currentFocusElement","document","activeElement","hasFocus","firstFocusable","i","length","has","find","filter","first","focus","record","params","publish","ROUTE_CHANGED","go","inHistory","reduce","carry","previous","push","historylength","previousRecord","prevConfig","elements","focusElement","getDescription","then","description","get_string","label","catch","add","back","pop","window","setTimeout"],"mappings":";;;;;;;;;;;AA0BAA,4CACA,CACI,SACA,cACA,WACA,qCACA,cAEJ,SACIC,EACAC,OACAC,IACAC,oBACAC,UAIIC,OAAS,GAGTC,QAAU,GAEVC,4BACmB,4EADnBA,sBAEa,oBAgCbC,YAAc,SAASC,UAAWC,cAC9BC,UAGAC,UAAY,GAAGC,MAAMC,KAAKC,WAAWC,MAAK,SAASC,WACrC,aAAPA,OAGPC,KAAO,GAAGL,MAAMC,KAAKC,UAAW,GAChCI,cAAgBnB,EAAEoB,WAAWC,UAAUC,aAE3CC,OAAOC,KAAKnB,OAAOI,YAAYgB,SAAQ,SAASC,WACxCC,OAAStB,OAAOI,WAAWiB,OAC3BE,QAAUF,QAAUhB,SAEpBkB,UACAjB,UAAYgB,QAGhBA,OAAOE,WAAWJ,SAAQ,SAASK,SAER,iBAAZA,SAAoC,OAAZA,UAInCA,QAAQC,YAAY,YACpBD,QAAQE,KAAK,mBAAmB,GAE5BJ,SACIhB,WAEAkB,QAAQE,KAAK,mBAAmB,GAEpCF,QAAQC,YAAY,UACpB3B,KAAK6B,OAAOH,QAAQI,QAGfJ,QAAQE,KAAK,kBAGK,eAAZtB,UAAyC,iBAAZA,WAFpCoB,QAAQK,SAAS,UACjB/B,KAAKgC,KAAKN,QAAQI,eAS9BvB,WACIA,UAAU0B,KAAM,CAChBlB,cAAgBR,UAAU0B,KAAKC,WAAMC,EAAW5B,UAAUkB,WAAWW,OAAOtB,eACxEuB,oBAAsBzC,EAAE0C,SAASC,eACjCC,UAAW,EACXC,eAAiB,KAGZC,EAAI,EAAGA,EAAInC,UAAUkB,WAAWkB,OAAQD,IAAK,KAC9ChB,QAAUnB,UAAUkB,WAAWiB,MAGZ,iBAAZhB,SAAoC,OAAZA,UAI9Be,iBACDA,eAAiBf,SAGjBA,QAAQkB,IAAIP,qBAAqBM,QAAQ,CACzCH,UAAW,SAKdA,UAGDC,eAAeI,KAAK1C,6BAA6B2C,OAAO,YAAYC,QAAQC,YAKpFC,OAAS,CACT3B,MAAOhB,SACP4C,OAAQpC,KACRC,cAAeA,sBAGnBlB,OAAOsD,QAAQpD,oBAAoBqD,cAAeH,QAE3CA,QASPI,GAAK,SAAShD,eACVgC,oBAAsBzC,EAAE0C,SAASC,eAEjCU,OAAS7C,YAAY8B,MAAM7B,UAAWM,WACtC2C,WAAY,EAEXpD,QAAQG,aACTH,QAAQG,WAAa,IAOzBH,QAAQG,WAAaH,QAAQG,WAAWkD,QAAO,SAASC,MAAOC,iBACvDA,SAASnC,QAAU2B,OAAO3B,QAC1BgC,WAAY,GAGXA,WACDE,MAAME,KAAKD,UAGRD,QACR,QAECG,cAAgBzD,QAAQG,WAAWsC,OACnCiB,eAAiBD,cAAgBzD,QAAQG,WAAWsD,cAAgB,GAAK,QAEzEC,eAAgB,SACZC,WAAa5D,OAAOI,WAAWuD,eAAetC,OAC9CwC,SAAWD,WAAWpC,WAGjBiB,EAAI,EAAGA,EAAIoB,SAASnB,OAAQD,IAEN,iBAAhBoB,SAASpB,IAAmC,OAAhBoB,SAASpB,IAIhDoB,SAASpB,GAAGX,SAAS,YAGzB6B,eAAeG,aAAe1B,oBAE1BwB,WAAWG,gBAGXH,WAAWG,eAAe9B,MAAM,KAAM2B,WAAWpC,WAAWW,OAAOwB,eAAeV,SAC7Ee,MAAK,SAASC,oBACJpE,IAAIqE,WAAW,SAAU,eAAgBD,gBAEnDD,MAAK,SAASG,cAGJnB,OAAOlC,cAAckD,MAAK,WAE7BhE,OAAOI,WAAW4C,OAAO3B,OAAOG,WAAWJ,SAAQ,SAASK,SAEjC,iBAAZA,SAAyBA,SAIpCA,QAAQmB,KAAK1C,uBAAuByB,KAAK,aAAcwC,gBAIlEC,OAAM,sBAKnBnE,QAAQG,WAAWqD,KAAKT,QACjBA,cA0BJ,CACHqB,IA3NM,SAASjE,UAAWiB,MAAOG,WAAYQ,KAAM+B,gBAC9C/D,OAAOI,aACRJ,OAAOI,WAAa,IAGxBJ,OAAOI,WAAWiB,OACd,CACIG,WAAYA,WACZQ,KAAMA,KACN+B,eAAgBA,iBAmNxBX,GAAIA,GACJkB,KArBO,SAASlE,cACZH,QAAQG,WAAWsC,OAAQ,CAE3BzC,QAAQG,WAAWmE,UACff,SAAWvD,QAAQG,WAAWmE,MAE9Bf,WAEAJ,GAAGnB,WAAMC,EAAW,CAAC9B,UAAWoD,SAASnC,OAAOc,OAAOqB,SAASP,SAGhEuB,OAAOC,YAAW,WACdjB,SAASM,aAAaf,UACvB"}