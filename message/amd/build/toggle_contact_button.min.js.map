{"version":3,"file":"toggle_contact_button.min.js","sources":["../src/toggle_contact_button.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to add/remove contact using ajax.\r\n *\r\n * @module     core_message/toggle_contact_button\r\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/templates', 'core/notification', 'core/custom_interaction_events'],\r\n        function($, Ajax, Templates, Notification, CustomEvents) {\r\n\r\n    /**\r\n     * Check the state of the element, if the current user is a contact or not.\r\n     *\r\n     * @method isContact\r\n     * @param {object} element jQuery object for the button\r\n     * @return {bool}\r\n     */\r\n    var isContact = function(element) {\r\n        return element.attr('data-is-contact') == '1';\r\n    };\r\n\r\n    /**\r\n     * Record that the user is a contact.\r\n     *\r\n     * @method setContact\r\n     * @param {object} element jQuery object for the button\r\n     */\r\n    var setContact = function(element) {\r\n        element.attr('data-is-contact', '1');\r\n    };\r\n\r\n    /**\r\n     * Record that the user is not a contact.\r\n     *\r\n     * @method setNotContact\r\n     * @param {object} element jQuery object for the button\r\n     */\r\n    var setNotContact = function(element) {\r\n        element.attr('data-is-contact', '0');\r\n    };\r\n\r\n    /**\r\n     * Get the id for the user being viewed.\r\n     *\r\n     * @method getUserId\r\n     * @param {object} element jQuery object for the button\r\n     * @return {int}\r\n     */\r\n    var getUserId = function(element) {\r\n        return element.attr('data-userid');\r\n    };\r\n\r\n    /**\r\n     * Get the id for the logged in user.\r\n     *\r\n     * @method getUserId\r\n     * @param {object} element jQuery object for the button\r\n     * @return {int}\r\n     */\r\n    var getCurrentUserId = function(element) {\r\n        return element.attr('data-currentuserid');\r\n    };\r\n\r\n    /**\r\n     * Check whether a text label should be displayed or not.\r\n     *\r\n     * @method getUserId\r\n     * @param {object} element jQuery object for the button\r\n     * @return {int}\r\n     */\r\n    var displayTextLabel = function(element) {\r\n        return element.attr('data-display-text-label') == '1';\r\n    };\r\n\r\n    /**\r\n     * Check if this element is currently loading.\r\n     *\r\n     * @method isLoading\r\n     * @param {object} element jQuery object for the button\r\n     * @return {bool}\r\n     */\r\n    var isLoading = function(element) {\r\n        return element.hasClass('loading') || element.attr('disabled');\r\n    };\r\n\r\n    /**\r\n     * Sends an ajax request to the server and handles the element state\r\n     * while the request is being performed.\r\n     *\r\n     * @method sendRequest\r\n     * @param {object} element jQuery object for the button\r\n     * @param {object} request Request hash to send\r\n     * @return {object} jQuery promise\r\n     */\r\n    var sendRequest = function(element, request) {\r\n        if (isLoading(element)) {\r\n            return $.Deferred();\r\n        }\r\n\r\n        element.addClass('loading');\r\n        element.attr('disabled', 'disabled');\r\n\r\n        return Ajax.call([request])[0]\r\n            .fail(Notification.exception)\r\n            .always(function() {\r\n                element.removeClass('loading');\r\n                element.removeAttr('disabled');\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server to add the current user as\r\n     * a contact. The contents of the button are changed to the\r\n     * remove contact button upon success.\r\n     *\r\n     * @method addContact\r\n     * @param {object} element jQuery object for the button\r\n     */\r\n    var addContact = function(element) {\r\n        if (isLoading(element)) {\r\n            return;\r\n        }\r\n\r\n        var request = {\r\n            methodname: 'core_message_create_contact_request',\r\n            args: {\r\n                userid: getCurrentUserId(element),\r\n                requesteduserid: getUserId(element),\r\n            }\r\n        };\r\n        sendRequest(element, request).done(function() {\r\n            setContact(element);\r\n            const templateContext = {\r\n                'displaytextlabel': displayTextLabel(element)\r\n            };\r\n            Templates.render('message/remove_contact_button', templateContext).done(function(html, js) {\r\n                Templates.replaceNodeContents(element, html, js);\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Send a request to the server to remove the current user as\r\n     * a contact. The contents of the button are changed to the\r\n     * add contact button upon success.\r\n     *\r\n     * @method removeContact\r\n     * @param {object} element jQuery object for the button\r\n     */\r\n    var removeContact = function(element) {\r\n        if (isLoading(element)) {\r\n            return;\r\n        }\r\n\r\n        var request = {\r\n            methodname: 'core_message_delete_contacts',\r\n            args: {\r\n                userids: [getUserId(element)],\r\n            }\r\n        };\r\n\r\n        sendRequest(element, request).done(function() {\r\n            setNotContact(element);\r\n            const templateContext = {\r\n                'displaytextlabel': displayTextLabel(element)\r\n            };\r\n            Templates.render('message/add_contact_button', templateContext).done(function(html, js) {\r\n                Templates.replaceNodeContents(element, html, js);\r\n            });\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Enhances the given element with a loading gif and event handles to make\r\n     * ajax requests to add or remove a contact where appropriate.\r\n     *\r\n     * @public\r\n     * @method enhance\r\n     * @param {object} element jQuery object for the button\r\n     */\r\n    var enhance = function(element) {\r\n        element = $(element);\r\n\r\n        if (!element.children('.loading-icon').length) {\r\n            // Add the loading gif if it isn't already there.\r\n            Templates.render('core/loading', {}).done(function(html, js) {\r\n                element.append(html, js);\r\n            });\r\n        }\r\n\r\n        CustomEvents.define(element, [CustomEvents.events.activate]);\r\n\r\n        element.on(CustomEvents.events.activate, function(e, data) {\r\n            if (isContact(element)) {\r\n                removeContact(element);\r\n            } else {\r\n                addContact(element);\r\n            }\r\n            e.preventDefault();\r\n            data.originalEvent.preventDefault();\r\n        });\r\n    };\r\n\r\n    return {\r\n        enhance: enhance\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","Templates","Notification","CustomEvents","getUserId","element","attr","getCurrentUserId","displayTextLabel","isLoading","hasClass","sendRequest","request","Deferred","addClass","call","fail","exception","always","removeClass","removeAttr","enhance","children","length","render","done","html","js","append","events","activate","on","e","data","isContact","methodname","args","userid","requesteduserid","setContact","templateContext","replaceNodeContents","addContact","userids","setNotContact","removeContact","preventDefault","originalEvent"],"mappings":";;;;;;;AAsBAA,4CAAO,CAAC,SAAU,YAAa,iBAAkB,oBAAqB,mCAC9D,SAASC,EAAGC,KAAMC,UAAWC,aAAcC,kBAwC3CC,UAAY,SAASC,gBACdA,QAAQC,KAAK,gBAUpBC,iBAAmB,SAASF,gBACrBA,QAAQC,KAAK,uBAUpBE,iBAAmB,SAASH,eACsB,KAA3CA,QAAQC,KAAK,4BAUpBG,UAAY,SAASJ,gBACdA,QAAQK,SAAS,YAAcL,QAAQC,KAAK,aAYnDK,YAAc,SAASN,QAASO,gBAC5BH,UAAUJ,SACHN,EAAEc,YAGbR,QAAQS,SAAS,WACjBT,QAAQC,KAAK,WAAY,YAElBN,KAAKe,KAAK,CAACH,UAAU,GACvBI,KAAKd,aAAae,WAClBC,QAAO,WACJb,QAAQc,YAAY,WACpBd,QAAQe,WAAW,uBAiGxB,CACHC,QAxBU,SAAShB,UACnBA,QAAUN,EAAEM,UAECiB,SAAS,iBAAiBC,QAEnCtB,UAAUuB,OAAO,eAAgB,IAAIC,MAAK,SAASC,KAAMC,IACrDtB,QAAQuB,OAAOF,KAAMC,OAI7BxB,aAAaL,OAAOO,QAAS,CAACF,aAAa0B,OAAOC,WAElDzB,QAAQ0B,GAAG5B,aAAa0B,OAAOC,UAAU,SAASE,EAAGC,OA/KzC,SAAS5B,eACqB,KAAnCA,QAAQC,KAAK,mBA+KZ4B,CAAU7B,SA3EL,SAASA,aAClBI,UAAUJ,cAIVO,QAAU,CACVuB,WAAY,sCACZC,KAAM,CACFC,OAAQ9B,iBAAiBF,SACzBiC,gBAAiBlC,UAAUC,WAGnCM,YAAYN,QAASO,SAASa,MAAK,YAvGtB,SAASpB,SACtBA,QAAQC,KAAK,kBAAmB,KAuG5BiC,CAAWlC,eACLmC,gBAAkB,kBACAhC,iBAAiBH,UAEzCJ,UAAUuB,OAAO,gCAAiCgB,iBAAiBf,MAAK,SAASC,KAAMC,IACnF1B,UAAUwC,oBAAoBpC,QAASqB,KAAMC,WA4D7Ce,CAAWrC,SA/CH,SAASA,aACrBI,UAAUJ,cAIVO,QAAU,CACVuB,WAAY,+BACZC,KAAM,CACFO,QAAS,CAACvC,UAAUC,YAI5BM,YAAYN,QAASO,SAASa,MAAK,YA5HnB,SAASpB,SACzBA,QAAQC,KAAK,kBAAmB,KA4H5BsC,CAAcvC,eACRmC,gBAAkB,kBACAhC,iBAAiBH,UAEzCJ,UAAUuB,OAAO,6BAA8BgB,iBAAiBf,MAAK,SAASC,KAAMC,IAChF1B,UAAUwC,oBAAoBpC,QAASqB,KAAMC,WA2B7CkB,CAAcxC,SAIlB2B,EAAEc,iBACFb,KAAKc,cAAcD"}