{"version":3,"file":"message_drawer_view_contacts.min.js","sources":["../src/message_drawer_view_contacts.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Controls the contacts page of the message drawer.\r\n *\r\n * @module     core_message/message_drawer_view_contacts\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n[\r\n    'jquery',\r\n    'core/pubsub',\r\n    'core/str',\r\n    'core_message/message_drawer_events',\r\n    'core_message/message_drawer_view_contacts_section_contacts',\r\n    'core_message/message_drawer_view_contacts_section_requests'\r\n],\r\nfunction(\r\n    $,\r\n    PubSub,\r\n    Str,\r\n    MessageDrawerEvents,\r\n    ContactsSection,\r\n    RequestsSection\r\n) {\r\n\r\n    var SELECTORS = {\r\n        ACTION_SHOW_CONTACTS_SECTION: '[data-action=\"show-contacts-section\"]',\r\n        ACTION_SHOW_REQUESTS_SECTION: '[data-action=\"show-requests-section\"]',\r\n        CONTACT_REQUEST_COUNT: '[data-region=\"contact-request-count\"]',\r\n        CONTACTS_SECTION_CONTAINER: '[data-section=\"contacts\"]',\r\n        REQUESTS_SECTION_CONTAINER: '[data-section=\"requests\"]',\r\n    };\r\n\r\n    /**\r\n     * Get the container element for the contacts section.\r\n     *\r\n     * @param {Object} body Contacts page body element.\r\n     * @return {Object}\r\n     */\r\n    var getContactsSectionContainer = function(body) {\r\n        return body.find(SELECTORS.CONTACTS_SECTION_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Get the container element for the requests section.\r\n     *\r\n     * @param {Object} body Contacts page body element.\r\n     * @return {Object}\r\n     */\r\n    var getRequestsSectionContainer = function(body) {\r\n        return body.find(SELECTORS.REQUESTS_SECTION_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Get the element that triggers showing the contacts section.\r\n     *\r\n     * @param {Object} body Contacts page body element.\r\n     * @return {Object}\r\n     */\r\n    var getShowContactsAction = function(body) {\r\n        return body.find(SELECTORS.ACTION_SHOW_CONTACTS_SECTION);\r\n    };\r\n\r\n    /**\r\n     * Get the element that triggers showing the requests section.\r\n     *\r\n     * @param {Object} body Contacts page body element.\r\n     * @return {Object}\r\n     */\r\n    var getShowRequestsAction = function(body) {\r\n        return body.find(SELECTORS.ACTION_SHOW_REQUESTS_SECTION);\r\n    };\r\n\r\n    /**\r\n     * Check if the given section is visible.\r\n     *\r\n     * @param {Object} sectionRoot The root element for the section\r\n     * @return {Bool}\r\n     */\r\n    var isSectionVisible = function(sectionRoot) {\r\n        return sectionRoot.hasClass('active');\r\n    };\r\n\r\n    /**\r\n     * Decrement the contact request count. If the count is zero or below then\r\n     * hide the count.\r\n     *\r\n     * @param {Object} body Conversation body container element.\r\n     * @return {Function} A function to handle decrementing the count.\r\n     */\r\n    var decrementContactRequestCount = function(body) {\r\n        return function() {\r\n            var countContainer = body.find(SELECTORS.CONTACT_REQUEST_COUNT);\r\n            var count = parseInt(countContainer.text(), 10);\r\n            count = isNaN(count) ? 0 : count - 1;\r\n\r\n            if (count <= 0) {\r\n                countContainer.addClass('hidden');\r\n            } else {\r\n                countContainer.text(count);\r\n            }\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Listen to and handle events for contacts.\r\n     *\r\n     * @param {Object} body Contacts body container element.\r\n     */\r\n    var registerEventListeners = function(body) {\r\n        var contactsSection = getContactsSectionContainer(body);\r\n        var requestsSection = getRequestsSectionContainer(body);\r\n        var showContactsAction = getShowContactsAction(body);\r\n        var showRequestsAction = getShowRequestsAction(body);\r\n\r\n        showContactsAction.on('show.bs.tab', function() {\r\n            ContactsSection.show(contactsSection);\r\n        });\r\n\r\n        showRequestsAction.on('show.bs.tab', function() {\r\n            RequestsSection.show(requestsSection);\r\n        });\r\n\r\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_ACCEPTED, decrementContactRequestCount(body));\r\n        PubSub.subscribe(MessageDrawerEvents.CONTACT_REQUEST_DECLINED, decrementContactRequestCount(body));\r\n    };\r\n\r\n    /**\r\n     * Setup the contact page.\r\n     *\r\n     * @param {string} namespace The route namespace.\r\n     * @param {Object} header Contacts header container element.\r\n     * @param {Object} body Contacts body container element.\r\n     * @param {Object} footer Contacts footer container element.\r\n     * @param {String|null} tab Tab to show, either 'requests' or 'contacts', if any.\r\n     * @return {Object} jQuery promise\r\n     */\r\n    var show = function(namespace, header, body, footer, tab) {\r\n        body = $(body);\r\n\r\n        if (!body.attr('data-contacts-init')) {\r\n            registerEventListeners(body);\r\n            body.attr('data-contacts-init', true);\r\n        }\r\n\r\n        var contactsSection = getContactsSectionContainer(body);\r\n        var requestsSection = getRequestsSectionContainer(body);\r\n\r\n        if (tab) {\r\n            var showContactsAction = getShowContactsAction(body);\r\n            var showRequestsAction = getShowRequestsAction(body);\r\n\r\n            // Unfortunately we need to hardcode the class changes here rather than trigger\r\n            // the bootstrap tab functionality because the bootstrap JS doesn't appear to be\r\n            // loaded by this point which means the tab plugin isn't added and the event listeners\r\n            // haven't been set up so we can't just trigger a click either.\r\n            if (tab == 'requests') {\r\n                showContactsAction.removeClass('active');\r\n                contactsSection.removeClass('show active');\r\n                showRequestsAction.addClass('active');\r\n                requestsSection.addClass('show active');\r\n            } else {\r\n                showRequestsAction.removeClass('active');\r\n                requestsSection.removeClass('show active');\r\n                showContactsAction.addClass('active');\r\n                contactsSection.addClass('show active');\r\n            }\r\n        }\r\n\r\n        if (isSectionVisible(contactsSection)) {\r\n            ContactsSection.show(contactsSection);\r\n        } else {\r\n            RequestsSection.show(requestsSection);\r\n        }\r\n\r\n        return $.Deferred().resolve().promise();\r\n    };\r\n\r\n    /**\r\n     * String describing this page used for aria-labels.\r\n     *\r\n     * @return {Object} jQuery promise\r\n     */\r\n    var description = function() {\r\n        return Str.get_string('messagedrawerviewcontacts', 'core_message');\r\n    };\r\n\r\n    return {\r\n        show: show,\r\n        description: description\r\n    };\r\n});\r\n"],"names":["define","$","PubSub","Str","MessageDrawerEvents","ContactsSection","RequestsSection","SELECTORS","getContactsSectionContainer","body","find","getRequestsSectionContainer","getShowContactsAction","getShowRequestsAction","decrementContactRequestCount","countContainer","count","parseInt","text","isNaN","addClass","show","namespace","header","footer","tab","attr","contactsSection","requestsSection","showContactsAction","showRequestsAction","on","subscribe","CONTACT_REQUEST_ACCEPTED","CONTACT_REQUEST_DECLINED","registerEventListeners","removeClass","hasClass","Deferred","resolve","promise","description","get_string"],"mappings":";;;;;;;AAsBAA,mDACA,CACI,SACA,cACA,WACA,qCACA,6DACA,+DAEJ,SACIC,EACAC,OACAC,IACAC,oBACAC,gBACAC,qBAGIC,uCAC8B,wCAD9BA,uCAE8B,wCAF9BA,gCAGuB,wCAHvBA,qCAI4B,4BAJ5BA,qCAK4B,4BAS5BC,4BAA8B,SAASC,aAChCA,KAAKC,KAAKH,uCASjBI,4BAA8B,SAASF,aAChCA,KAAKC,KAAKH,uCASjBK,sBAAwB,SAASH,aAC1BA,KAAKC,KAAKH,yCASjBM,sBAAwB,SAASJ,aAC1BA,KAAKC,KAAKH,yCAoBjBO,6BAA+B,SAASL,aACjC,eACCM,eAAiBN,KAAKC,KAAKH,iCAC3BS,MAAQC,SAASF,eAAeG,OAAQ,KAC5CF,MAAQG,MAAMH,OAAS,EAAIA,MAAQ,IAEtB,EACTD,eAAeK,SAAS,UAExBL,eAAeG,KAAKF,eAwFzB,CACHK,KAnDO,SAASC,UAAWC,OAAQd,KAAMe,OAAQC,MACjDhB,KAAOR,EAAEQ,OAECiB,KAAK,yBA/BU,SAASjB,UAC9BkB,gBAAkBnB,4BAA4BC,MAC9CmB,gBAAkBjB,4BAA4BF,MAC9CoB,mBAAqBjB,sBAAsBH,MAC3CqB,mBAAqBjB,sBAAsBJ,MAE/CoB,mBAAmBE,GAAG,eAAe,WACjC1B,gBAAgBgB,KAAKM,oBAGzBG,mBAAmBC,GAAG,eAAe,WACjCzB,gBAAgBe,KAAKO,oBAGzB1B,OAAO8B,UAAU5B,oBAAoB6B,yBAA0BnB,6BAA6BL,OAC5FP,OAAO8B,UAAU5B,oBAAoB8B,yBAA0BpB,6BAA6BL,OAiBxF0B,CAAuB1B,MACvBA,KAAKiB,KAAK,sBAAsB,QAGhCC,gBAAkBnB,4BAA4BC,MAC9CmB,gBAAkBjB,4BAA4BF,SAE9CgB,IAAK,KACDI,mBAAqBjB,sBAAsBH,MAC3CqB,mBAAqBjB,sBAAsBJ,MAMpC,YAAPgB,KACAI,mBAAmBO,YAAY,UAC/BT,gBAAgBS,YAAY,eAC5BN,mBAAmBV,SAAS,UAC5BQ,gBAAgBR,SAAS,iBAEzBU,mBAAmBM,YAAY,UAC/BR,gBAAgBQ,YAAY,eAC5BP,mBAAmBT,SAAS,UAC5BO,gBAAgBP,SAAS,uBAIZO,gBAzFFU,SAAS,UA0FxBhC,gBAAgBgB,KAAKM,iBAErBrB,gBAAgBe,KAAKO,iBAGlB3B,EAAEqC,WAAWC,UAAUC,WAc9BC,YANc,kBACPtC,IAAIuC,WAAW,4BAA6B"}