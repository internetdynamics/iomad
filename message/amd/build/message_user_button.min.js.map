{"version":3,"file":"message_user_button.min.js","sources":["../src/message_user_button.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to message a user from their profile page.\r\n *\r\n * @module     core_message/message_user_button\r\n * @copyright  2019 Mark Nelson <markn@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/custom_interaction_events', 'core_message/message_drawer_helper', 'core/templates'],\r\n    function($, CustomEvents, MessageDrawerHelper, Templates) {\r\n\r\n\r\n        var SELECTORS = {\r\n            MESSAGE_TEXTAREA: '[data-region=\"send-message-txt\"]',\r\n            MESSAGE_USER_BUTTON: '#message-user-button',\r\n            MESSAGE_JUMP: '[data-region=\"jumpto\"]'\r\n        };\r\n\r\n        var TEMPLATES = {\r\n            CONTENT: 'core_message/message_jumpto'\r\n        };\r\n\r\n        /**\r\n         * Get the id for the user being messaged.\r\n         *\r\n         * @param {object} element jQuery object for the button\r\n         * @return {int}\r\n         */\r\n        var getUserId = function(element) {\r\n            return parseInt(element.attr('data-userid'));\r\n        };\r\n\r\n        /**\r\n         * Returns the conversation id, 0 if none.\r\n         *\r\n         * @param {object} element jQuery object for the button\r\n         * @return {int}\r\n         */\r\n        var getConversationId = function(element) {\r\n            return parseInt(element.attr('data-conversationid'));\r\n        };\r\n\r\n        /**\r\n         * Handles opening the messaging drawer to send a\r\n         * message to a given user.\r\n         *\r\n         * @method enhance\r\n         * @param {object} element jQuery object for the button\r\n         */\r\n        var send = function(element) {\r\n            element = $(element);\r\n\r\n            var args = {\r\n                conversationid: getConversationId(element),\r\n                buttonid: $(element).attr('id'),\r\n                userid: getUserId(element)\r\n            };\r\n\r\n            Templates.render(TEMPLATES.CONTENT, {})\r\n                .then(function(html) {\r\n                    element.after(html);\r\n                })\r\n                .then(function() {\r\n                    $(SELECTORS.MESSAGE_USER_BUTTON).next().focus(function() {\r\n                        $(SELECTORS.MESSAGE_TEXTAREA).focus();\r\n                    });\r\n                });\r\n\r\n            CustomEvents.define(element, [CustomEvents.events.activate]);\r\n\r\n            element.on(CustomEvents.events.activate, function(e, data) {\r\n                if ($(e.target).hasClass('active')) {\r\n                    MessageDrawerHelper.hide();\r\n                    $(SELECTORS.MESSAGE_USER_BUTTON).next().attr('tabindex', -1);\r\n                } else {\r\n                    $(SELECTORS.MESSAGE_USER_BUTTON).next().attr('tabindex', 0);\r\n                    if (args.conversationid) {\r\n                        MessageDrawerHelper.showConversation(args);\r\n                    } else {\r\n                        MessageDrawerHelper.createConversationWithUser(args);\r\n                    }\r\n                }\r\n                $(e.target).focus();\r\n                $(e.target).toggleClass('active');\r\n                e.preventDefault();\r\n                data.originalEvent.preventDefault();\r\n            });\r\n        };\r\n\r\n        return /** @alias module:core_message/message_user_button */ {\r\n            send: send\r\n        };\r\n    });\r\n"],"names":["define","$","CustomEvents","MessageDrawerHelper","Templates","SELECTORS","TEMPLATES","getUserId","element","parseInt","attr","getConversationId","send","args","conversationid","buttonid","userid","render","then","html","after","next","focus","events","activate","on","e","data","target","hasClass","hide","showConversation","createConversationWithUser","toggleClass","preventDefault","originalEvent"],"mappings":";;;;;;;AAsBAA,0CAAO,CAAC,SAAU,iCAAkC,qCAAsC,mBACtF,SAASC,EAAGC,aAAcC,oBAAqBC,eAGvCC,2BACkB,mCADlBA,8BAEqB,uBAIrBC,kBACS,8BASTC,UAAY,SAASC,gBACdC,SAASD,QAAQE,KAAK,iBAS7BC,kBAAoB,SAASH,gBACtBC,SAASD,QAAQE,KAAK,+BAkD4B,CACzDE,KAzCO,SAASJ,SAChBA,QAAUP,EAAEO,aAERK,KAAO,CACPC,eAAgBH,kBAAkBH,SAClCO,SAAUd,EAAEO,SAASE,KAAK,MAC1BM,OAAQT,UAAUC,UAGtBJ,UAAUa,OAAOX,kBAAmB,IAC/BY,MAAK,SAASC,MACXX,QAAQY,MAAMD,SAEjBD,MAAK,WACFjB,EAAEI,+BAA+BgB,OAAOC,OAAM,WAC1CrB,EAAEI,4BAA4BiB,cAI1CpB,aAAaF,OAAOQ,QAAS,CAACN,aAAaqB,OAAOC,WAElDhB,QAAQiB,GAAGvB,aAAaqB,OAAOC,UAAU,SAASE,EAAGC,MAC7C1B,EAAEyB,EAAEE,QAAQC,SAAS,WACrB1B,oBAAoB2B,OACpB7B,EAAEI,+BAA+BgB,OAAOX,KAAK,YAAa,KAE1DT,EAAEI,+BAA+BgB,OAAOX,KAAK,WAAY,GACrDG,KAAKC,eACLX,oBAAoB4B,iBAAiBlB,MAErCV,oBAAoB6B,2BAA2BnB,OAGvDZ,EAAEyB,EAAEE,QAAQN,QACZrB,EAAEyB,EAAEE,QAAQK,YAAY,UACxBP,EAAEQ,iBACFP,KAAKQ,cAAcD"}