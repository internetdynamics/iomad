{"version":3,"file":"message_drawer_view_contacts_section_contacts.min.js","sources":["../src/message_drawer_view_contacts_section_contacts.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Controls the contacts section of the contacts page.\r\n *\r\n * @module     core_message/message_drawer_view_contacts_section_contacts\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(\r\n[\r\n    'jquery',\r\n    'core/notification',\r\n    'core/pubsub',\r\n    'core/templates',\r\n    'core_message/message_repository',\r\n    'core_message/message_drawer_events',\r\n    'core_message/message_drawer_lazy_load_list'\r\n],\r\nfunction(\r\n    $,\r\n    Notification,\r\n    PubSub,\r\n    Templates,\r\n    MessageRepository,\r\n    Events,\r\n    LazyLoadList\r\n) {\r\n\r\n    var limit = 100;\r\n    var initialOffset = 0;\r\n\r\n    var SELECTORS = {\r\n        BLOCK_ICON_CONTAINER: '[data-region=\"block-icon-container\"]',\r\n        CONTACT: '[data-region=\"contact\"]',\r\n        CONTENT_CONTAINER: '[data-region=\"contacts-content-container\"]'\r\n    };\r\n\r\n    var TEMPLATES = {\r\n        CONTACTS_LIST: 'core_message/message_drawer_contacts_list'\r\n    };\r\n\r\n    /**\r\n     * Find a contact element.\r\n     *\r\n     * @param {Object} body Contacts body container element.\r\n     * @param {Number} userId User id of contact.\r\n     * @return {Object} contact element.\r\n     */\r\n    var findContact = function(body, userId) {\r\n        return body.find('[data-contact-user-id=\"' + userId + '\"]');\r\n    };\r\n\r\n    /**\r\n     * Render the contacts in the content container.\r\n     *\r\n     * @param {Object} contentContainer Content container element.\r\n     * @param {Array} contacts List of contacts.\r\n     * @return {Object} jQuery promise\r\n     */\r\n    var render = function(contentContainer, contacts) {\r\n        var formattedContacts = contacts.map(function(contact) {\r\n            return $.extend(contact, {id: contact.userid});\r\n        });\r\n        return Templates.render(TEMPLATES.CONTACTS_LIST, {contacts: formattedContacts})\r\n            .then(function(html) {\r\n                contentContainer.append(html);\r\n                return html;\r\n            })\r\n            .catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Load the user contacts and call the renderer.\r\n     *\r\n     * @param {Number} offset The offset to use for loading contacts\r\n     * @return {Function} the callback.\r\n     */\r\n    var getLoadFunction = function(offset) {\r\n        return function(listRoot, userId) {\r\n            return MessageRepository.getContacts(userId, (limit + 1), offset)\r\n                .then(function(result) {\r\n                    return result;\r\n                })\r\n                .then(function(contacts) {\r\n                    if (contacts.length > limit) {\r\n                        contacts.pop();\r\n                    } else {\r\n                        LazyLoadList.setLoadedAll(listRoot, true);\r\n                    }\r\n                    return contacts;\r\n                })\r\n                .then(function(contacts) {\r\n                    offset = offset + limit;\r\n                    return contacts;\r\n                })\r\n                .catch(Notification.exception);\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Remove contact from view.\r\n     *\r\n     * @param {Object} body Contacts body container element.\r\n     * @param {Number} userId Contact userid.\r\n     */\r\n    var removeContact = function(body, userId) {\r\n        findContact(body, userId).remove();\r\n    };\r\n\r\n    /**\r\n     * Show the contact has been blocked.\r\n     *\r\n     * @param {Object} body Contacts body container element.\r\n     * @param {Number} userId Contact userid.\r\n     */\r\n    var showContactBlocked = function(body, userId) {\r\n        var contact = findContact(body, userId);\r\n        if (contact.length) {\r\n            contact.find(SELECTORS.BLOCK_ICON_CONTAINER).removeClass('hidden');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Show the contact has been unblocked.\r\n     *\r\n     * @param {Object} body Contacts body container element.\r\n     * @param {Number} userId Contact userid.\r\n     */\r\n    var showContactUnblocked = function(body, userId) {\r\n        var contact = findContact(body, userId);\r\n        if (contact.length) {\r\n            contact.find(SELECTORS.BLOCK_ICON_CONTAINER).addClass('hidden');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Listen to and handle events for contacts.\r\n     *\r\n     * @param {Object} root Contacts section container element.\r\n     */\r\n    var registerEventListeners = function(root) {\r\n        PubSub.subscribe(Events.CONTACT_ADDED, function(profile) {\r\n            var listContentContainer = LazyLoadList.getContentContainer(root);\r\n            render(listContentContainer, [profile]);\r\n            LazyLoadList.hideEmptyMessage(root);\r\n            LazyLoadList.showContent(root);\r\n        });\r\n\r\n        PubSub.subscribe(Events.CONTACT_REMOVED, function(userId) {\r\n            removeContact(root, userId);\r\n            var contacts = root.find(SELECTORS.CONTACT);\r\n\r\n            if (!contacts.length) {\r\n                LazyLoadList.hideContent(root);\r\n                LazyLoadList.showEmptyMessage(root);\r\n            }\r\n        });\r\n\r\n        PubSub.subscribe(Events.CONTACT_BLOCKED, function(userId) {\r\n            showContactBlocked(root, userId);\r\n        });\r\n\r\n        PubSub.subscribe(Events.CONTACT_UNBLOCKED, function(userId) {\r\n            showContactUnblocked(root, userId);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Setup the contacts section.\r\n     *\r\n     * @param {Object} root Contacts section container.\r\n     */\r\n    var show = function(root) {\r\n        if (!root.attr('data-contacts-init')) {\r\n            registerEventListeners(root);\r\n            root.attr('data-contacts-init', true);\r\n        }\r\n\r\n        // The root element is already the lazy loaded list root.\r\n        LazyLoadList.show(root, getLoadFunction(initialOffset), render);\r\n    };\r\n\r\n    return {\r\n        show: show,\r\n    };\r\n});\r\n"],"names":["define","$","Notification","PubSub","Templates","MessageRepository","Events","LazyLoadList","SELECTORS","TEMPLATES","findContact","body","userId","find","render","contentContainer","contacts","formattedContacts","map","contact","extend","id","userid","then","html","append","catch","exception","registerEventListeners","root","subscribe","CONTACT_ADDED","profile","listContentContainer","getContentContainer","hideEmptyMessage","showContent","CONTACT_REMOVED","remove","removeContact","length","hideContent","showEmptyMessage","CONTACT_BLOCKED","removeClass","showContactBlocked","CONTACT_UNBLOCKED","addClass","showContactUnblocked","show","offset","attr","listRoot","getContacts","limit","result","pop","setLoadedAll"],"mappings":";;;;;;;AAsBAA,oEACA,CACI,SACA,oBACA,cACA,iBACA,kCACA,qCACA,+CAEJ,SACIC,EACAC,aACAC,OACAC,UACAC,kBACAC,OACAC,kBAMIC,+BACsB,uCADtBA,kBAES,0BAITC,wBACe,4CAUfC,YAAc,SAASC,KAAMC,eACtBD,KAAKE,KAAK,0BAA4BD,OAAS,OAUtDE,OAAS,SAASC,iBAAkBC,cAChCC,kBAAoBD,SAASE,KAAI,SAASC,gBACnClB,EAAEmB,OAAOD,QAAS,CAACE,GAAIF,QAAQG,mBAEnClB,UAAUU,OAAOL,wBAAyB,CAACO,SAAUC,oBACvDM,MAAK,SAASC,aACXT,iBAAiBU,OAAOD,MACjBA,QAEVE,MAAMxB,aAAayB,YAwExBC,uBAAyB,SAASC,MAClC1B,OAAO2B,UAAUxB,OAAOyB,eAAe,SAASC,aACxCC,qBAAuB1B,aAAa2B,oBAAoBL,MAC5Df,OAAOmB,qBAAsB,CAACD,UAC9BzB,aAAa4B,iBAAiBN,MAC9BtB,aAAa6B,YAAYP,SAG7B1B,OAAO2B,UAAUxB,OAAO+B,iBAAiB,SAASzB,SA3ClC,SAASD,KAAMC,QAC/BF,YAAYC,KAAMC,QAAQ0B,SA2CtBC,CAAcV,KAAMjB,QACLiB,KAAKhB,KAAKL,mBAEXgC,SACVjC,aAAakC,YAAYZ,MACzBtB,aAAamC,iBAAiBb,UAItC1B,OAAO2B,UAAUxB,OAAOqC,iBAAiB,SAAS/B,SA3C7B,SAASD,KAAMC,YAChCO,QAAUT,YAAYC,KAAMC,QAC5BO,QAAQqB,QACRrB,QAAQN,KAAKL,gCAAgCoC,YAAY,UAyCzDC,CAAmBhB,KAAMjB,WAG7BT,OAAO2B,UAAUxB,OAAOwC,mBAAmB,SAASlC,SAlC7B,SAASD,KAAMC,YAClCO,QAAUT,YAAYC,KAAMC,QAC5BO,QAAQqB,QACRrB,QAAQN,KAAKL,gCAAgCuC,SAAS,UAgCtDC,CAAqBnB,KAAMjB,kBAmB5B,CACHqC,KAXO,SAASpB,MA/FE,IAASqB,OAgGtBrB,KAAKsB,KAAK,wBACXvB,uBAAuBC,MACvBA,KAAKsB,KAAK,sBAAsB,IAIpC5C,aAAa0C,KAAKpB,MAtGSqB,OAhDX,EAiDT,SAASE,SAAUxC,eACfP,kBAAkBgD,YAAYzC,OAAS0C,IAAYJ,QACrD3B,MAAK,SAASgC,eACJA,UAEVhC,MAAK,SAASP,iBACPA,SAASwB,OAxDjB,IAyDQxB,SAASwC,MAETjD,aAAakD,aAAaL,UAAU,GAEjCpC,YAEVO,MAAK,SAASP,iBACXkC,QAhEJ,IAiEWlC,YAEVU,MAAMxB,aAAayB,aAoF4Bb"}