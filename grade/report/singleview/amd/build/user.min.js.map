{"version":3,"file":"user.min.js","sources":["../src/user.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A small modal to search users within the gradebook.\r\n *\r\n * @module    gradereport_singleview/user\r\n * @copyright 2022 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as FocusLockManager from 'core/local/aria/focuslock';\r\nimport Pending from 'core/pending';\r\nimport * as Templates from 'core/templates';\r\nimport * as Repository from 'core_grades/searchwidget/repository';\r\nimport * as WidgetBase from 'core_grades/searchwidget/basewidget';\r\nimport Url from 'core/url';\r\nimport $ from 'jquery';\r\nimport * as Selectors from 'core_grades/searchwidget/selectors';\r\n\r\n/**\r\n * Our entry point into starting to build the search widget.\r\n * It'll eventually, based upon the listeners, open the search widget and allow filtering.\r\n *\r\n * @method init\r\n */\r\nexport const init = () => {\r\n    if (document.querySelector(Selectors.elements.getSearchWidgetSelector('user'))) {\r\n        const pendingPromise = new Pending();\r\n        registerListenerEvents();\r\n        pendingPromise.resolve();\r\n    }\r\n};\r\n\r\n/**\r\n * Register user search widget related event listeners.\r\n *\r\n * @method registerListenerEvents\r\n */\r\nconst registerListenerEvents = () => {\r\n    let {bodyPromiseResolver, bodyPromise} = WidgetBase.promisesAndResolvers();\r\n    const dropdownMenuContainer = document.querySelector(Selectors.elements.getSearchWidgetDropdownSelector('user'));\r\n    const menuContainer = document.querySelector(Selectors.elements.getSearchWidgetSelector('user'));\r\n    const inputElement = menuContainer.querySelector('input[name=\"userid\"]');\r\n\r\n    // Handle the 'shown.bs.dropdown' event (Fired when the dropdown menu is fully displayed).\r\n    $(menuContainer).on('show.bs.dropdown', async(e) => {\r\n        const courseId = e.relatedTarget.dataset.courseid;\r\n        const groupId = e.relatedTarget.dataset.groupid;\r\n        // Display a loading icon in the dropdown menu container until the body promise is resolved.\r\n        await WidgetBase.showLoader(dropdownMenuContainer);\r\n\r\n        // If an error occurs while fetching the data, display the error within the dropdown menu.\r\n        const data = await Repository.userFetch(courseId, groupId).catch(async(e) => {\r\n            const errorTemplateData = {\r\n                'errormessage': e.message\r\n            };\r\n            bodyPromiseResolver(\r\n                await Templates.render('core_grades/searchwidget/error', errorTemplateData)\r\n            );\r\n        });\r\n\r\n        // Early return if there is no module data.\r\n        if (data === []) {\r\n            return;\r\n        }\r\n\r\n        await WidgetBase.init(\r\n            dropdownMenuContainer,\r\n            bodyPromise,\r\n            data.users,\r\n            searchUsers(),\r\n            null,\r\n            afterSelect\r\n        );\r\n\r\n        // Resolvers for passed functions in the dropdown menu creation.\r\n        bodyPromiseResolver(Templates.render('core_grades/searchwidget/user/usersearch_body', []));\r\n\r\n        // Lock tab control. It has to be locked because the dropdown's role is dialog.\r\n        FocusLockManager.trapFocus(dropdownMenuContainer);\r\n    });\r\n\r\n    // Handle the 'hide.bs.dropdown' event (Fired when the dropdown menu is being closed).\r\n    $(menuContainer).on('hide.bs.dropdown', () => {\r\n        FocusLockManager.untrapFocus();\r\n    });\r\n\r\n    inputElement.addEventListener('change', e => {\r\n        const toggle = menuContainer.querySelector('.dropdown-toggle');\r\n        const courseId = toggle.dataset.courseid;\r\n        const actionUrl = Url.relativeUrl(\r\n            '/grade/report/singleview/index.php',\r\n            {\r\n                id: courseId,\r\n                item: 'user',\r\n                userid: e.target.value\r\n            },\r\n            false\r\n        );\r\n        location.href = actionUrl;\r\n\r\n        e.stopPropagation();\r\n    });\r\n};\r\n\r\n/**\r\n * Define how we want to search and filter users when the user decides to input a search value.\r\n *\r\n * @method searchUsers\r\n * @returns {function(): function(*, *): (*)}\r\n */\r\nconst searchUsers = () => {\r\n    return () => {\r\n        return (users, searchTerm) => {\r\n            if (searchTerm === '') {\r\n                return users;\r\n            }\r\n            searchTerm = searchTerm.toLowerCase();\r\n            const searchResults = [];\r\n            users.forEach((user) => {\r\n                const userName = user.fullname.toLowerCase();\r\n                if (userName.includes(searchTerm)) {\r\n                    searchResults.push(user);\r\n                }\r\n            });\r\n            return searchResults;\r\n        };\r\n    };\r\n};\r\n\r\n/**\r\n * Define the action to be performed when an item is selected by the search widget.\r\n *\r\n * @param {String} selected The selected item's value.\r\n */\r\nconst afterSelect = (selected) => {\r\n    const menuContainer = document.querySelector(Selectors.elements.getSearchWidgetSelector('user'));\r\n    const inputElement = menuContainer.querySelector('input[name=\"userid\"]');\r\n\r\n    $(menuContainer).dropdown('hide'); // Otherwise the dropdown stays open when user choose an option using keyboard.\r\n\r\n    if (inputElement.value != selected) {\r\n        inputElement.value = selected;\r\n        inputElement.dispatchEvent(new Event('change', {bubbles: true}));\r\n    }\r\n};\r\n"],"names":["document","querySelector","Selectors","elements","getSearchWidgetSelector","pendingPromise","Pending","registerListenerEvents","resolve","bodyPromiseResolver","bodyPromise","WidgetBase","promisesAndResolvers","dropdownMenuContainer","getSearchWidgetDropdownSelector","menuContainer","inputElement","on","async","courseId","e","relatedTarget","dataset","courseid","groupId","groupid","showLoader","data","Repository","userFetch","catch","errorTemplateData","message","Templates","render","init","users","searchUsers","afterSelect","FocusLockManager","trapFocus","untrapFocus","addEventListener","actionUrl","Url","relativeUrl","id","item","userid","target","value","location","href","stopPropagation","searchTerm","toLowerCase","searchResults","forEach","user","fullname","includes","push","selected","dropdown","dispatchEvent","Event","bubbles"],"mappings":";;;;;;;ucAsCoB,QACZA,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,SAAU,OACtEC,eAAiB,IAAIC,iBAC3BC,yBACAF,eAAeG,kBASjBD,uBAAyB,SACvBE,oBAACA,oBAADC,YAAsBA,aAAeC,WAAWC,6BAC9CC,sBAAwBb,SAASC,cAAcC,UAAUC,SAASW,gCAAgC,SAClGC,cAAgBf,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,SAClFY,aAAeD,cAAcd,cAAc,4CAG/Cc,eAAeE,GAAG,oBAAoBC,MAAAA,UAC9BC,SAAWC,EAAEC,cAAcC,QAAQC,SACnCC,QAAUJ,EAAEC,cAAcC,QAAQG,cAElCd,WAAWe,WAAWb,6BAGtBc,WAAaC,WAAWC,UAAUV,SAAUK,SAASM,OAAMZ,MAAAA,UACvDa,kBAAoB,cACNX,EAAEY,SAEtBvB,0BACUwB,UAAUC,OAAO,iCAAkCH,uBAK7DJ,OAAS,WAIPhB,WAAWwB,KACbtB,sBACAH,YACAiB,KAAKS,MACLC,cACA,KACAC,aAIJ7B,oBAAoBwB,UAAUC,OAAO,gDAAiD,KAGtFK,iBAAiBC,UAAU3B,+CAI7BE,eAAeE,GAAG,oBAAoB,KACpCsB,iBAAiBE,iBAGrBzB,aAAa0B,iBAAiB,UAAUtB,UAE9BD,SADSJ,cAAcd,cAAc,oBACnBqB,QAAQC,SAC1BoB,UAAYC,aAAIC,YAClB,qCACA,CACIC,GAAI3B,SACJ4B,KAAM,OACNC,OAAQ5B,EAAE6B,OAAOC,QAErB,GAEJC,SAASC,KAAOT,UAEhBvB,EAAEiC,sBAUJhB,YAAc,IACT,IACI,CAACD,MAAOkB,iBACQ,KAAfA,kBACOlB,MAEXkB,WAAaA,WAAWC,oBAClBC,cAAgB,UACtBpB,MAAMqB,SAASC,OACMA,KAAKC,SAASJ,cAClBK,SAASN,aAClBE,cAAcK,KAAKH,SAGpBF,eAUblB,YAAewB,iBACX/C,cAAgBf,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,SAClFY,aAAeD,cAAcd,cAAc,4CAE/Cc,eAAegD,SAAS,QAEtB/C,aAAakC,OAASY,WACtB9C,aAAakC,MAAQY,SACrB9C,aAAagD,cAAc,IAAIC,MAAM,SAAU,CAACC,SAAS"}