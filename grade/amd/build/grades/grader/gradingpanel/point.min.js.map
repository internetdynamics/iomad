{"version":3,"file":"point.min.js","sources":["../../../../src/grades/grader/gradingpanel/point.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Grading panel for simple direct grading.\r\n *\r\n * @module     core_grades/grades/grader/gradingpanel/point\r\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {saveGrade, fetchGrade} from './repository';\r\nimport {compareData} from 'core_grades/grades/grader/gradingpanel/comparison';\r\n// Note: We use jQuery.serializer here until we can rewrite Ajax to use XHR.send()\r\nimport jQuery from 'jquery';\r\nimport {invalidResult} from './normalise';\r\n\r\n/**\r\n * Fetch the current grade for a user.\r\n *\r\n * @param {object} args\r\n * @param {String} args.component\r\n * @param {Number} args.context\r\n * @param {String} args.itemname\r\n * @param {Number} args.userId\r\n * @param {Element} args.rootNode\r\n * @returns {Object}\r\n */\r\nexport const fetchCurrentGrade = (...args) => fetchGrade('point')(...args);\r\n\r\n/**\r\n * Store a new grade for a user.\r\n *\r\n * @param {String} component\r\n * @param {Number} context\r\n * @param {String} itemname\r\n * @param {Number} userId\r\n * @param {Boolean} notifyUser\r\n * @param {Element} rootNode\r\n * @returns {Object}\r\n */\r\nexport const storeCurrentGrade = async(component, context, itemname, userId, notifyUser, rootNode) => {\r\n    const form = rootNode.querySelector('form');\r\n    const grade = form.querySelector('input[name=\"grade\"]');\r\n\r\n    if (!grade.checkValidity() || !grade.value.trim()) {\r\n        return invalidResult;\r\n    }\r\n\r\n    if (compareData(form) === true) {\r\n        return await saveGrade('point')(component, context, itemname, userId, notifyUser, jQuery(form).serialize());\r\n    } else {\r\n        return '';\r\n    }\r\n};\r\n"],"names":["async","component","context","itemname","userId","notifyUser","rootNode","form","querySelector","grade","checkValidity","value","trim","serialize","invalidResult"],"mappings":";;;;;;;6MAwCiC,kBAAa,0BAAW,QAAX,2CAabA,MAAMC,UAAWC,QAASC,SAAUC,OAAQC,WAAYC,kBAC/EC,KAAOD,SAASE,cAAc,QAC9BC,MAAQF,KAAKC,cAAc,8BAE5BC,MAAMC,iBAAoBD,MAAME,MAAMC,QAIjB,KAAtB,2BAAYL,YACC,yBAAU,QAAV,CAAmBN,UAAWC,QAASC,SAAUC,OAAQC,YAAY,mBAAOE,MAAMM,aAExF,GANAC"}