{"version":3,"file":"comparison.min.js","sources":["../../../../src/grades/grader/gradingpanel/comparison.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Compare a given form's values and its previously set data attributes.\r\n *\r\n * @module     core_grades/grades/grader/gradingpanel/comparison\r\n * @copyright  2019 Mathew May <mathew.solutions>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nexport const fillInitialValues = (form) => {\r\n    Array.prototype.forEach.call(form.elements, (input) => {\r\n        if (input.type === 'submit' || input.type === 'button') {\r\n            return;\r\n        } else if (input.type === 'radio' || input.type === 'checkbox') {\r\n            input.dataset.initialValue = JSON.stringify(input.checked);\r\n        } else if (typeof input.value !== 'undefined') {\r\n            input.dataset.initialValue = JSON.stringify(input.value);\r\n        } else if (input.type === 'select-one') {\r\n            Array.prototype.forEach.call(input.options, (option) => {\r\n                option.dataset.initialValue = JSON.stringify(option.selected);\r\n            });\r\n        }\r\n   });\r\n};\r\n\r\n\r\n/**\r\n * Compare the form data with the initial form data from when the form was set up.\r\n *\r\n * If values have changed, return a truthy value.\r\n *\r\n * @param {HTMLElement} form\r\n * @return {Boolean}\r\n */\r\nexport const compareData = (form) => {\r\n    const result = Array.prototype.some.call(form.elements, (input) => {\r\n        if (input.type === 'submit' || input.type === 'button') {\r\n            return false;\r\n        } else if (input.type === 'radio' || input.type === 'checkbox') {\r\n            if (typeof input.dataset.initialValue !== 'undefined') {\r\n                return input.dataset.initialValue !== JSON.stringify(input.checked);\r\n            }\r\n        } else if (typeof input.value !== 'undefined') {\r\n            if (typeof input.dataset.initialValue !== 'undefined') {\r\n                return input.dataset.initialValue !== JSON.stringify(input.value);\r\n            }\r\n        } else if (input.type === 'select-one') {\r\n            return Array.prototype.some.call(input.options, (option) => {\r\n                if (typeof option.dataset.initialValue !== 'undefined') {\r\n                    return option.dataset.initialValue !== JSON.stringify(option.selected);\r\n                }\r\n\r\n                return false;\r\n            });\r\n        }\r\n\r\n        // No value found to check. Assume that there were changes.\r\n        return true;\r\n    });\r\n\r\n    // Fill the initial values again as the form may not be reloaded.\r\n    fillInitialValues(form);\r\n\r\n    return result;\r\n};\r\n"],"names":["fillInitialValues","form","Array","prototype","forEach","call","elements","input","type","dataset","initialValue","JSON","stringify","checked","value","options","option","selected","result","some"],"mappings":";;;;;;;;MAuBaA,kBAAqBC,OAC9BC,MAAMC,UAAUC,QAAQC,KAAKJ,KAAKK,UAAWC,QACtB,WAAfA,MAAMC,MAAoC,WAAfD,MAAMC,OAEX,UAAfD,MAAMC,MAAmC,aAAfD,MAAMC,KACvCD,MAAME,QAAQC,aAAeC,KAAKC,UAAUL,MAAMM,cACpB,IAAhBN,MAAMO,MACpBP,MAAME,QAAQC,aAAeC,KAAKC,UAAUL,MAAMO,OAC5B,eAAfP,MAAMC,MACbN,MAAMC,UAAUC,QAAQC,KAAKE,MAAMQ,SAAUC,SACzCA,OAAOP,QAAQC,aAAeC,KAAKC,UAAUI,OAAOC,oFAexChB,aAClBiB,OAAShB,MAAMC,UAAUgB,KAAKd,KAAKJ,KAAKK,UAAWC,WAClC,WAAfA,MAAMC,MAAoC,WAAfD,MAAMC,YAC1B,EACJ,GAAmB,UAAfD,MAAMC,MAAmC,aAAfD,MAAMC,cACG,IAA/BD,MAAME,QAAQC,oBACdH,MAAME,QAAQC,eAAiBC,KAAKC,UAAUL,MAAMM,cAE5D,QAA2B,IAAhBN,MAAMO,eACsB,IAA/BP,MAAME,QAAQC,oBACdH,MAAME,QAAQC,eAAiBC,KAAKC,UAAUL,MAAMO,YAE5D,GAAmB,eAAfP,MAAMC,YACNN,MAAMC,UAAUgB,KAAKd,KAAKE,MAAMQ,SAAUC,aACF,IAAhCA,OAAOP,QAAQC,cACfM,OAAOP,QAAQC,eAAiBC,KAAKC,UAAUI,OAAOC,mBAQlE,YAIXjB,kBAAkBC,MAEXiB"}