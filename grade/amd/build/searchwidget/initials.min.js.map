{"version":3,"file":"initials.min.js","sources":["../../src/searchwidget/initials.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A small dropdown to filter users within the gradebook.\r\n *\r\n * @module    core_grades/searchwidget/initials\r\n * @copyright 2022 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Pending from 'core/pending';\r\nimport * as Url from 'core/url';\r\nimport CustomEvents from \"core/custom_interaction_events\";\r\nimport $ from 'jquery';\r\n\r\n/**\r\n * Whether the event listener has already been registered for this module.\r\n *\r\n * @type {boolean}\r\n */\r\nlet registered = false;\r\n\r\n// Contain our selectors within this file until they could be of use elsewhere.\r\nconst selectors = {\r\n    pageListItem: 'page-item',\r\n    pageClickableItem: '.page-link',\r\n    activeItem: 'active',\r\n    formDropdown: '.initialsdropdownform',\r\n    parentDomNode: '.initials-selector',\r\n    firstInitial: 'firstinitial',\r\n    lastInitial: 'lastinitial',\r\n    initialBars: '.initialbar', // Both first and last name use this class.\r\n    targetButton: 'initialswidget',\r\n    formItems: {\r\n        type: 'submit',\r\n        save: 'save',\r\n        cancel: 'cancel'\r\n    }\r\n};\r\n\r\n/**\r\n * Our initial hook into the module which will eventually allow us to handle the dropdown initials bar form.\r\n *\r\n * @param {String} callingLink The link to redirect upon form submission.\r\n */\r\nexport const init = (callingLink) => {\r\n    if (registered) {\r\n        return;\r\n    }\r\n    const pendingPromise = new Pending();\r\n    registerListenerEvents(callingLink);\r\n    // BS events always bubble so, we need to listen for the event higher up the chain.\r\n    $(selectors.parentDomNode).on('shown.bs.dropdown', () => {\r\n        document.querySelector(selectors.pageClickableItem).focus({preventScroll: true});\r\n    });\r\n    pendingPromise.resolve();\r\n    registered = true;\r\n};\r\n\r\n/**\r\n * Register event listeners.\r\n *\r\n * @param {String} callingLink The link to redirect upon form submission.\r\n */\r\nconst registerListenerEvents = (callingLink) => {\r\n    const events = [\r\n        'click',\r\n        CustomEvents.events.activate,\r\n        CustomEvents.events.keyboardActivate\r\n    ];\r\n    CustomEvents.define(document, events);\r\n\r\n    // Register events.\r\n    events.forEach((event) => {\r\n        document.addEventListener(event, (e) => {\r\n            // Always fetch the latest information when we click as state is a fickle thing.\r\n            let {firstActive, lastActive, sifirst, silast} = onClickVariables();\r\n            let itemToReset = '';\r\n\r\n            // Prevent the usual form behaviour.\r\n            if (e.target.closest(selectors.formDropdown)) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            // Handle the state of active initials before form submission.\r\n            if (e.target.closest(`${selectors.formDropdown} .${selectors.pageListItem}`)) {\r\n                // Ensure the li items don't cause weird clicking emptying out the form.\r\n                if (e.target.classList.contains(selectors.pageListItem)) {\r\n                    return;\r\n                }\r\n\r\n                const initialsBar = e.target.closest(selectors.initialBars); // Find out which initial bar we are in.\r\n\r\n                // We want to find the current active item in the menu area the user selected.\r\n                // We also want to fetch the raw item out of the array for instant manipulation.\r\n                if (initialsBar.classList.contains(selectors.firstInitial)) {\r\n                    sifirst = e.target;\r\n                    itemToReset = firstActive;\r\n                } else {\r\n                    silast = e.target;\r\n                    itemToReset = lastActive;\r\n                }\r\n                swapActiveItems(itemToReset, e);\r\n            }\r\n\r\n            // Handle form submissions.\r\n            if (e.target.closest(`${selectors.formDropdown}`) && e.target.type === selectors.formItems.type) {\r\n                if (e.target.dataset.action === selectors.formItems.save) {\r\n                    // Ensure we strip out the value (All) as it messes with the PHP side of the initials bar.\r\n                    // Then we will redirect the user back onto the page with new filters applied.\r\n                    window.location = Url.relativeUrl(callingLink, {\r\n                        'id': e.target.closest(selectors.formDropdown).dataset.courseid,\r\n                        'sifirst': sifirst.parentElement.classList.contains('initialbarall') ? '' : sifirst.value,\r\n                        'silast': silast.parentElement.classList.contains('initialbarall') ? '' : silast.value,\r\n                    });\r\n                }\r\n                if (e.target.dataset.action === selectors.formItems.cancel) {\r\n                    $(`.${selectors.targetButton}`).dropdown('toggle');\r\n                }\r\n            }\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * A small abstracted helper function which allows us to ensure we have up-to-date lists of nodes.\r\n *\r\n * @returns {{firstActive: HTMLElement, lastActive: HTMLElement, sifirst: ?String, silast: ?String}}\r\n */\r\nconst onClickVariables = () => {\r\n    // Ensure we have an up-to-date initials bar.\r\n    const firstItems = [...document.querySelectorAll(`.${selectors.firstInitial} li`)];\r\n    const lastItems = [...document.querySelectorAll(`.${selectors.lastInitial} li`)];\r\n    const firstActive = firstItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\r\n    const lastActive = lastItems.filter((item) => item.classList.contains(selectors.activeItem))[0];\r\n    // Ensure we retain both of the selections from a previous instance.\r\n    let sifirst = firstActive.querySelector(selectors.pageClickableItem);\r\n    let silast = lastActive.querySelector(selectors.pageClickableItem);\r\n    return {firstActive, lastActive, sifirst, silast};\r\n};\r\n\r\n/**\r\n * Given we are provided the old li and current click event, swap around the active properties.\r\n *\r\n * @param {HTMLElement} itemToReset\r\n * @param {Event} e\r\n */\r\nconst swapActiveItems = (itemToReset, e) => {\r\n    itemToReset.classList.remove(selectors.activeItem);\r\n    itemToReset.querySelector(selectors.pageClickableItem).ariaCurrent = false;\r\n\r\n    // Set the select item as the current item.\r\n    const itemToSetActive = e.target.parentElement;\r\n    itemToSetActive.classList.add(selectors.activeItem);\r\n    e.target.ariaCurrent = true;\r\n};\r\n"],"names":["registered","selectors","type","save","cancel","callingLink","pendingPromise","Pending","registerListenerEvents","on","document","querySelector","focus","preventScroll","resolve","events","CustomEvents","activate","keyboardActivate","define","forEach","event","addEventListener","e","firstActive","lastActive","sifirst","silast","onClickVariables","itemToReset","target","closest","preventDefault","classList","contains","swapActiveItems","dataset","action","window","location","Url","relativeUrl","courseid","parentElement","value","dropdown","firstItems","querySelectorAll","lastItems","filter","item","remove","ariaCurrent","add"],"mappings":";;;;;;;44BAiCIA,YAAa,QAGXC,uBACY,YADZA,4BAEiB,aAFjBA,qBAGU,SAHVA,uBAIY,wBAJZA,wBAKa,qBALbA,uBAMY,eANZA,sBAOW,cAPXA,sBAQW,cARXA,uBASY,iBATZA,oBAUS,CACPC,KAAM,SACNC,KAAM,OACNC,OAAQ,wBASKC,iBACbL,wBAGEM,eAAiB,IAAIC,iBAC3BC,uBAAuBH,iCAErBJ,yBAAyBQ,GAAG,qBAAqB,KAC/CC,SAASC,cAAcV,6BAA6BW,MAAM,CAACC,eAAe,OAE9EP,eAAeQ,UACfd,YAAa,SAQXQ,uBAA0BH,oBACtBU,OAAS,CACX,QACAC,mCAAaD,OAAOE,SACpBD,mCAAaD,OAAOG,qDAEXC,OAAOT,SAAUK,QAG9BA,OAAOK,SAASC,QACZX,SAASY,iBAAiBD,OAAQE,QAE1BC,YAACA,YAADC,WAAcA,WAAdC,QAA0BA,QAA1BC,OAAmCA,QAAUC,mBAC7CC,YAAc,MAGdN,EAAEO,OAAOC,QAAQ9B,yBACjBsB,EAAES,iBAIFT,EAAEO,OAAOC,kBAAW9B,oCAA2BA,yBAA2B,IAEtEsB,EAAEO,OAAOG,UAAUC,SAASjC,+BAIZsB,EAAEO,OAAOC,QAAQ9B,uBAIrBgC,UAAUC,SAASjC,yBAC/ByB,QAAUH,EAAEO,OACZD,YAAcL,cAEdG,OAASJ,EAAEO,OACXD,YAAcJ,YAElBU,gBAAgBN,YAAaN,GAI7BA,EAAEO,OAAOC,kBAAW9B,0BAA6BsB,EAAEO,OAAO5B,OAASD,oBAAoBC,OACnFqB,EAAEO,OAAOM,QAAQC,SAAWpC,oBAAoBE,OAGhDmC,OAAOC,SAAWC,IAAIC,YAAYpC,YAAa,IACrCkB,EAAEO,OAAOC,QAAQ9B,wBAAwBmC,QAAQM,iBAC5ChB,QAAQiB,cAAcV,UAAUC,SAAS,iBAAmB,GAAKR,QAAQkB,aAC1EjB,OAAOgB,cAAcV,UAAUC,SAAS,iBAAmB,GAAKP,OAAOiB,SAGrFrB,EAAEO,OAAOM,QAAQC,SAAWpC,oBAAoBG,uCAC1CH,yBAA0B4C,SAAS,kBAYvDjB,iBAAmB,WAEfkB,WAAa,IAAIpC,SAASqC,4BAAqB9C,gCAC/C+C,UAAY,IAAItC,SAASqC,4BAAqB9C,+BAC9CuB,YAAcsB,WAAWG,QAAQC,MAASA,KAAKjB,UAAUC,SAASjC,wBAAuB,GACzFwB,WAAauB,UAAUC,QAAQC,MAASA,KAAKjB,UAAUC,SAASjC,wBAAuB,OAEzFyB,QAAUF,YAAYb,cAAcV,6BACpC0B,OAASF,WAAWd,cAAcV,mCAC/B,CAACuB,YAAAA,YAAaC,WAAAA,WAAYC,QAAAA,QAASC,OAAAA,SASxCQ,gBAAkB,CAACN,YAAaN,KAClCM,YAAYI,UAAUkB,OAAOlD,sBAC7B4B,YAAYlB,cAAcV,6BAA6BmD,aAAc,EAG7C7B,EAAEO,OAAOa,cACjBV,UAAUoB,IAAIpD,sBAC9BsB,EAAEO,OAAOsB,aAAc"}