{"version":3,"file":"group.min.js","sources":["../../src/searchwidget/group.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A widget to search groups within the gradebook.\r\n *\r\n * @module    core_grades/searchwidget/group\r\n * @copyright 2022 Mathew May <mathew.solutions>\r\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as FocusLockManager from 'core/local/aria/focuslock';\r\nimport Pending from 'core/pending';\r\nimport * as Templates from 'core/templates';\r\nimport * as Repository from 'core_grades/searchwidget/repository';\r\nimport * as WidgetBase from 'core_grades/searchwidget/basewidget';\r\nimport $ from 'jquery';\r\nimport * as Selectors from 'core_grades/searchwidget/selectors';\r\n\r\n/**\r\n * Whether this module is already initialised.\r\n *\r\n * @type {boolean}\r\n */\r\nlet initialised = false;\r\n\r\n/**\r\n * Our entry point into starting to build the group search widget.\r\n *\r\n * It'll eventually, based upon the listeners, open the search widget and allow filtering.\r\n *\r\n * @method init\r\n */\r\nexport const init = () => {\r\n    if (!initialised && document.querySelector(Selectors.elements.getSearchWidgetSelector('group'))) {\r\n        const pendingPromise = new Pending();\r\n        registerListenerEvents();\r\n        pendingPromise.resolve();\r\n    }\r\n    initialised = true;\r\n};\r\n\r\n/**\r\n * Register event listeners.\r\n *\r\n * @method registerListenerEvents\r\n */\r\nconst registerListenerEvents = () => {\r\n    let {bodyPromiseResolver, bodyPromise} = WidgetBase.promisesAndResolvers();\r\n    const dropdownMenuContainer = document.querySelector(Selectors.elements.getSearchWidgetDropdownSelector('group'));\r\n    const menuContainer = document.querySelector(Selectors.elements.getSearchWidgetSelector('group'));\r\n    const inputElement = menuContainer.querySelector('input[name=\"group\"]');\r\n\r\n    // Handle the 'shown.bs.dropdown' event (Fired when the dropdown menu is fully displayed).\r\n    $(menuContainer).on('show.bs.dropdown', async(e) => {\r\n        const courseID = e.relatedTarget.dataset.courseid;\r\n        // Display a loading icon in the dropdown menu container until the body promise is resolved.\r\n        await WidgetBase.showLoader(dropdownMenuContainer);\r\n\r\n        // If an error occurs while fetching the data, display the error within the dropdown menu.\r\n        const data = await Repository.groupFetch(courseID).catch(async(e) => {\r\n            const errorTemplateData = {\r\n                'errormessage': e.message\r\n            };\r\n            bodyPromiseResolver(\r\n                await Templates.render('core_grades/searchwidget/error', errorTemplateData)\r\n            );\r\n        });\r\n        // Early return if there is no module data.\r\n        if (data === []) {\r\n            return;\r\n        }\r\n        await WidgetBase.init(\r\n            dropdownMenuContainer,\r\n            bodyPromise,\r\n            data.groups,\r\n            searchGroups(),\r\n            null,\r\n            afterSelect\r\n        );\r\n\r\n        // Lock tab control. It has to be locked because the dropdown's role is dialog.\r\n        FocusLockManager.trapFocus(dropdownMenuContainer);\r\n    });\r\n\r\n    // Resolvers for passed functions in the dropdown creation.\r\n    bodyPromiseResolver(Templates.render(\r\n        'core_grades/searchwidget/group/groupsearch_body',\r\n        []\r\n    ));\r\n\r\n    // Handle the 'hide.bs.dropdown' event (Fired when the dropdown menu is being closed).\r\n    $(menuContainer).on('hide.bs.dropdown', () => {\r\n        FocusLockManager.untrapFocus();\r\n    });\r\n\r\n    inputElement.addEventListener('change', e => {\r\n        const toggle = menuContainer.querySelector('.dropdown-toggle');\r\n        const courseId = toggle.dataset.courseid;\r\n        const actionUrl = toggle.dataset.actionBaseUrl ?\r\n            new URL(toggle.dataset.actionBaseUrl.replace(/&amp;/g, \"&\")) :\r\n            new URL(location.href);\r\n        actionUrl.searchParams.set('id', courseId);\r\n        actionUrl.searchParams.set('group', e.target.value);\r\n        actionUrl.searchParams.delete('page');\r\n\r\n        location.href = actionUrl.href;\r\n\r\n        e.stopPropagation();\r\n    });\r\n};\r\n\r\n/**\r\n * Define how we want to search and filter groups when the user decides to input a search value.\r\n *\r\n * @method searchGroups\r\n * @returns {function(): function(*, *): (*)}\r\n */\r\nconst searchGroups = () => {\r\n    return () => {\r\n        return (groups, searchTerm) => {\r\n            if (searchTerm === '') {\r\n                return groups;\r\n            }\r\n            searchTerm = searchTerm.toLowerCase();\r\n            const searchResults = [];\r\n            groups.forEach((group) => {\r\n                const groupName = group.name.toLowerCase();\r\n                if (groupName.includes(searchTerm)) {\r\n                    searchResults.push(group);\r\n                }\r\n            });\r\n            return searchResults;\r\n        };\r\n    };\r\n};\r\n\r\n/**\r\n * Define the action to be performed when an item is selected by the search widget.\r\n *\r\n * @param {String} selected The selected item's value.\r\n */\r\nconst afterSelect = (selected) => {\r\n    const menuContainer = document.querySelector(Selectors.elements.getSearchWidgetSelector('group'));\r\n    const inputElement = menuContainer.querySelector('input[name=\"group\"]');\r\n\r\n    $(menuContainer).dropdown('hide'); // Otherwise the dropdown stays open when user choose an option using keyboard.\r\n\r\n    if (inputElement.value != selected) {\r\n        inputElement.value = selected;\r\n        inputElement.dispatchEvent(new Event('change', {bubbles: true}));\r\n    }\r\n};\r\n"],"names":["initialised","document","querySelector","Selectors","elements","getSearchWidgetSelector","pendingPromise","Pending","registerListenerEvents","resolve","bodyPromiseResolver","bodyPromise","WidgetBase","promisesAndResolvers","dropdownMenuContainer","getSearchWidgetDropdownSelector","menuContainer","inputElement","on","async","courseID","e","relatedTarget","dataset","courseid","showLoader","data","Repository","groupFetch","catch","errorTemplateData","message","Templates","render","init","groups","searchGroups","afterSelect","FocusLockManager","trapFocus","untrapFocus","addEventListener","toggle","courseId","actionUrl","actionBaseUrl","URL","replace","location","href","searchParams","set","target","value","delete","stopPropagation","searchTerm","toLowerCase","searchResults","forEach","group","name","includes","push","selected","dropdown","dispatchEvent","Event","bubbles"],"mappings":";;;;;;;2ZAoCIA,aAAc,gBASE,SACXA,aAAeC,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,UAAW,OACvFC,eAAiB,IAAIC,iBAC3BC,yBACAF,eAAeG,UAEnBT,aAAc,SAQZQ,uBAAyB,SACvBE,oBAACA,oBAADC,YAAsBA,aAAeC,WAAWC,6BAC9CC,sBAAwBb,SAASC,cAAcC,UAAUC,SAASW,gCAAgC,UAClGC,cAAgBf,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,UAClFY,aAAeD,cAAcd,cAAc,2CAG/Cc,eAAeE,GAAG,oBAAoBC,MAAAA,UAC9BC,SAAWC,EAAEC,cAAcC,QAAQC,eAEnCZ,WAAWa,WAAWX,6BAGtBY,WAAaC,WAAWC,WAAWR,UAAUS,OAAMV,MAAAA,UAC/CW,kBAAoB,cACNT,EAAEU,SAEtBrB,0BACUsB,UAAUC,OAAO,iCAAkCH,uBAI7DJ,OAAS,WAGPd,WAAWsB,KACbpB,sBACAH,YACAe,KAAKS,OACLC,eACA,KACAC,aAIJC,iBAAiBC,UAAUzB,2BAI/BJ,oBAAoBsB,UAAUC,OAC1B,kDACA,yBAIFjB,eAAeE,GAAG,oBAAoB,KACpCoB,iBAAiBE,iBAGrBvB,aAAawB,iBAAiB,UAAUpB,UAC9BqB,OAAS1B,cAAcd,cAAc,oBACrCyC,SAAWD,OAAOnB,QAAQC,SAC1BoB,UAAYF,OAAOnB,QAAQsB,cAC7B,IAAIC,IAAIJ,OAAOnB,QAAQsB,cAAcE,QAAQ,SAAU,MACvD,IAAID,IAAIE,SAASC,MACrBL,UAAUM,aAAaC,IAAI,KAAMR,UACjCC,UAAUM,aAAaC,IAAI,QAAS9B,EAAE+B,OAAOC,OAC7CT,UAAUM,aAAaI,OAAO,QAE9BN,SAASC,KAAOL,UAAUK,KAE1B5B,EAAEkC,sBAUJnB,aAAe,IACV,IACI,CAACD,OAAQqB,iBACO,KAAfA,kBACOrB,OAEXqB,WAAaA,WAAWC,oBAClBC,cAAgB,UACtBvB,OAAOwB,SAASC,QACMA,MAAMC,KAAKJ,cACfK,SAASN,aACnBE,cAAcK,KAAKH,UAGpBF,eAUbrB,YAAe2B,iBACXhD,cAAgBf,SAASC,cAAcC,UAAUC,SAASC,wBAAwB,UAClFY,aAAeD,cAAcd,cAAc,2CAE/Cc,eAAeiD,SAAS,QAEtBhD,aAAaoC,OAASW,WACtB/C,aAAaoC,MAAQW,SACrB/C,aAAaiD,cAAc,IAAIC,MAAM,SAAU,CAACC,SAAS"}