{"version":3,"file":"validation.min.js","sources":["../src/validation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript to handle survey validation.\r\n *\r\n * @module     mod_survey/validation\r\n * @copyright  2017 Dan Poltawski <dan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.3\r\n */\r\ndefine(['jquery', 'core/str', 'core/modal_factory', 'core/notification'], function($, Str, ModalFactory, Notification) {\r\n    return {\r\n        /**\r\n         * Prevents form submission until all radio buttons are chosen, displays\r\n         * modal error if any choices are missing.\r\n         *\r\n         * @param {String} formid HTML id of form\r\n         */\r\n        ensureRadiosChosen: function(formid) {\r\n            // Prepare modal for display in case of problems.\r\n            var modalPromise = Str.get_strings([\r\n                {key: 'error', component: 'moodle'},\r\n                {key: 'questionsnotanswered', component: 'survey'},\r\n            ]).then(function(strings) {\r\n                return ModalFactory.create({\r\n                    type: ModalFactory.types.CANCEL,\r\n                    title: strings[0],\r\n                    body: strings[1],\r\n                });\r\n            }).catch(Notification.exception);\r\n\r\n            var form = $('#' + formid);\r\n            form.submit(function(e) {\r\n                // Look for unanswered questions..\r\n                if (form.find('input:radio[data-survey-default=\"true\"]:checked').length !== 0) {\r\n                    e.preventDefault();\r\n                    // Display the modal error.\r\n                    return modalPromise.then(function(modal) {\r\n                        modal.show();\r\n                        return false;\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Str","ModalFactory","Notification","ensureRadiosChosen","formid","modalPromise","get_strings","key","component","then","strings","create","type","types","CANCEL","title","body","catch","exception","form","submit","e","find","length","preventDefault","modal","show"],"mappings":";;;;;;;;AAuBAA,+BAAO,CAAC,SAAU,WAAY,qBAAsB,sBAAsB,SAASC,EAAGC,IAAKC,aAAcC,oBAC9F,CAOHC,mBAAoB,SAASC,YAErBC,aAAeL,IAAIM,YAAY,CAC/B,CAACC,IAAK,QAASC,UAAW,UAC1B,CAACD,IAAK,uBAAwBC,UAAW,YAC1CC,MAAK,SAASC,gBACNT,aAAaU,OAAO,CACvBC,KAAMX,aAAaY,MAAMC,OACzBC,MAAOL,QAAQ,GACfM,KAAMN,QAAQ,QAEnBO,MAAMf,aAAagB,WAElBC,KAAOpB,EAAE,IAAMK,QACnBe,KAAKC,QAAO,SAASC,UAE2D,IAAxEF,KAAKG,KAAK,mDAAmDC,SAC7DF,EAAEG,iBAEKnB,aAAaI,MAAK,SAASgB,cAC9BA,MAAMC,QACC"}