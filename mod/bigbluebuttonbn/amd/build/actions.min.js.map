{"version":3,"file":"actions.min.js","sources":["../src/actions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n/**\r\n * JS actions.\r\n *\r\n * @module      mod_bigbluebuttonbn/actions\r\n * @copyright   2021 Blindside Networks Inc\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {endMeeting as requestEndMeeting} from './repository';\r\nimport {\r\n    exception as displayException,\r\n    saveCancel,\r\n} from 'core/notification';\r\nimport {notifySessionEnded} from './events';\r\nimport {get_string as getString} from 'core/str';\r\n\r\nconst confirmedPromise = (title, question, saveLabel) => new Promise(resolve => {\r\n    saveCancel(title, question, saveLabel, resolve);\r\n});\r\n\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', e => {\r\n        const actionButton = e.target.closest('.bbb-btn-action[data-action=\"end\"]');\r\n        if (!actionButton) {\r\n            return;\r\n        }\r\n\r\n        e.preventDefault();\r\n\r\n        const bbbId = actionButton.dataset.bbbId;\r\n        const groupId = actionButton.dataset.groupId ? actionButton.dataset.groupId : 0;\r\n\r\n        confirmedPromise(\r\n            getString('end_session_confirm_title', 'mod_bigbluebuttonbn'),\r\n            getString('end_session_confirm', 'mod_bigbluebuttonbn'),\r\n            getString('yes', 'moodle')\r\n        )\r\n        .then(() => requestEndMeeting(bbbId, groupId))\r\n        .then(() => {\r\n            notifySessionEnded(bbbId, groupId);\r\n\r\n            return;\r\n        })\r\n        .catch(displayException);\r\n    });\r\n};\r\n\r\nlet listening = false;\r\nif (!listening) {\r\n    registerEventListeners();\r\n    listening = true;\r\n}\r\n"],"names":["listening","document","addEventListener","e","actionButton","target","closest","preventDefault","bbbId","dataset","groupId","title","question","saveLabel","Promise","resolve","then","catch","displayException","registerEventListeners"],"mappings":"sJA6DIA,WAAY,EACXA,YA5B0B,MAC3BC,SAASC,iBAAiB,SAASC,UACzBC,aAAeD,EAAEE,OAAOC,QAAQ,0CACjCF,oBAILD,EAAEI,uBAEIC,MAAQJ,aAAaK,QAAQD,MAC7BE,QAAUN,aAAaK,QAAQC,QAAUN,aAAaK,QAAQC,QAAU,EAd7D,IAACC,MAAOC,SAAUC,WAAjBF,OAiBd,mBAAU,4BAA6B,uBAjBlBC,UAkBrB,mBAAU,sBAAuB,uBAlBFC,WAmB/B,mBAAU,MAAO,UAnB4B,IAAIC,SAAQC,uCACtDJ,MAAOC,SAAUC,UAAWE,aAoBlCC,MAAK,KAAM,0BAAkBR,MAAOE,WACpCM,MAAK,oCACiBR,MAAOE,YAI7BO,MAAMC,6BAMXC,GACAnB,WAAY"}