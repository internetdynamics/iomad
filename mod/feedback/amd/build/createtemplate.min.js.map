{"version":3,"file":"createtemplate.min.js","sources":["../src/createtemplate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for saving a new template.\r\n *\r\n * @module      mod_feedback/createtemplate\r\n * @copyright   2021 Peter Dias\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport {get_string as getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\n\r\nconst selectors = {\r\n    modaltrigger: '[data-action=\"createtemplate\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    const trigger = document.querySelector(selectors.modaltrigger);\r\n\r\n    trigger.addEventListener('click', event => {\r\n        event.preventDefault();\r\n        const ele = event.currentTarget;\r\n\r\n        const modalForm = new ModalForm({\r\n            modalConfig: {\r\n                title: getString('save_as_new_template', 'mod_feedback'),\r\n            },\r\n            formClass: 'mod_feedback\\\\form\\\\create_template_form',\r\n            args: {\r\n                id: ele.dataset.dataid\r\n            },\r\n            saveButtonText: getString('save', 'core')\r\n        });\r\n\r\n        // Show a toast notification when the form is submitted.\r\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\r\n            if (event.detail.result) {\r\n                getString('template_saved', 'feedback').then(addToast).catch();\r\n            } else {\r\n                getString('saving_failed', 'feedback').then(string => {\r\n                    return Notification.addNotification({\r\n                        type: 'error',\r\n                        message: string\r\n                    });\r\n                }).catch();\r\n            }\r\n        });\r\n\r\n        modalForm.show();\r\n    });\r\n};\r\n"],"names":["selectors","document","querySelector","addEventListener","event","preventDefault","ele","currentTarget","modalForm","ModalForm","modalConfig","title","formClass","args","id","dataset","dataid","saveButtonText","events","FORM_SUBMITTED","detail","result","then","addToast","catch","string","Notification","addNotification","type","message","show"],"mappings":";;;;;;;0LA4BMA,uBACY,+CAME,KACAC,SAASC,cAAcF,wBAE/BG,iBAAiB,SAASC,QAC9BA,MAAMC,uBACAC,IAAMF,MAAMG,cAEZC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,uBAAwB,iBAE7CC,UAAW,2CACXC,KAAM,CACFC,GAAIR,IAAIS,QAAQC,QAEpBC,gBAAgB,mBAAU,OAAQ,UAItCT,UAAUL,iBAAiBK,UAAUU,OAAOC,gBAAgBf,QACpDA,MAAMgB,OAAOC,2BACH,iBAAkB,YAAYC,KAAKC,YAAUC,4BAE7C,gBAAiB,YAAYF,MAAKG,QACjCC,sBAAaC,gBAAgB,CAChCC,KAAM,QACNC,QAASJ,WAEdD,WAIXhB,UAAUsB"}