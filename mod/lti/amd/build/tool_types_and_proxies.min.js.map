{"version":3,"file":"tool_types_and_proxies.min.js","sources":["../src/tool_types_and_proxies.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Provides an interface for external tools in the Moodle server.\r\n *\r\n * @module     mod_lti/tool_types_and_proxies\r\n * @class      tool_types_and_proxies\r\n * @copyright  2020 Andrew Madden <andrewmadden@catalyst-au.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      4.0\r\n */\r\nimport ajax from 'core/ajax';\r\n\r\n/**\r\n * Get a list of LTI tool types and tool proxies from Moodle for the given\r\n * search args.\r\n *\r\n * See also:\r\n * mod/lti/classes/external.php get_tool_types_and_proxies()\r\n *\r\n * @method query\r\n * @public\r\n * @param {Object} args Search parameters\r\n * @return {Promise} Promise that will be resolved when the ajax call returns.\r\n */\r\nexport const query = (args) => {\r\n    const request = {\r\n        methodname: 'mod_lti_get_tool_types_and_proxies',\r\n        args: args || {}\r\n    };\r\n\r\n    return ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Get a count of LTI tool types and tool proxies from Moodle for the given\r\n * search args.\r\n *\r\n * See also:\r\n * mod/lti/classes/external.php get_tool_types_and_proxies_count()\r\n *\r\n * @method count\r\n * @public\r\n * @param {Object} args Search parameters\r\n * @return {Promise} Promise that will be resolved when the ajax call returns.\r\n */\r\nexport const count = (args) => {\r\n    const request = {\r\n        methodname: 'mod_lti_get_tool_types_and_proxies_count',\r\n        args: args || {}\r\n    };\r\n\r\n    return ajax.call([request])[0];\r\n};\r\n"],"names":["args","request","methodname","ajax","call"],"mappings":";;;;;;;;;qKAsCsBA,aACZC,QAAU,CACZC,WAAY,qCACZF,KAAMA,MAAQ,WAGXG,cAAKC,KAAK,CAACH,UAAU,mBAeVD,aACZC,QAAU,CACZC,WAAY,2CACZF,KAAMA,MAAQ,WAGXG,cAAKC,KAAK,CAACH,UAAU"}