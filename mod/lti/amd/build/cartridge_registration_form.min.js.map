{"version":3,"file":"cartridge_registration_form.min.js","sources":["../src/cartridge_registration_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Encapsules the behavior for creating a tool type from a cartridge URL\r\n * in Moodle. Manages the UI while operations are occuring.\r\n *\r\n * See template: mod_lti/cartridge_registration_form\r\n *\r\n * @module     mod_lti/cartridge_registration_form\r\n * @copyright  2015 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/notification', 'mod_lti/tool_type', 'mod_lti/events', 'mod_lti/keys', 'core/str'],\r\n        function($, ajax, notification, toolType, ltiEvents, KEYS, str) {\r\n\r\n    var SELECTORS = {\r\n        CARTRIDGE_URL: '#cartridge-url',\r\n        CONSUMER_KEY: '#registration-key',\r\n        SHARED_SECRET: '#registration-secret',\r\n        REGISTRATION_FORM: '#cartridge-registration-form',\r\n        REGISTRATION_SUBMIT_BUTTON: '#cartridge-registration-submit',\r\n        REGISTRATION_CANCEL_BUTTON: '#cartridge-registration-cancel',\r\n    };\r\n\r\n    /**\r\n     * Return the URL the user entered for the cartridge.\r\n     *\r\n     * @method getCartridgeURL\r\n     * @private\r\n     * @return {String}\r\n     */\r\n    var getCartridgeURL = function() {\r\n        return $(SELECTORS.REGISTRATION_FORM).attr('data-cartridge-url');\r\n    };\r\n\r\n    /**\r\n     * Return the submit button element.\r\n     *\r\n     * @method getSubmitButton\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getSubmitButton = function() {\r\n        return $(SELECTORS.REGISTRATION_SUBMIT_BUTTON);\r\n    };\r\n\r\n    /**\r\n     * Return the cancel button element.\r\n     *\r\n     * @method getCancelButton\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getCancelButton = function() {\r\n        return $(SELECTORS.REGISTRATION_CANCEL_BUTTON);\r\n    };\r\n\r\n    /**\r\n     * Return the value that the user entered for the consumer key.\r\n     *\r\n     * @method getConsumerKey\r\n     * @private\r\n     * @return {String} the value entered for consumer key.\r\n     */\r\n    var getConsumerKey = function() {\r\n        return $(SELECTORS.CONSUMER_KEY).val();\r\n    };\r\n\r\n    /**\r\n     * Return the value that the user entered for the shared secret.\r\n     *\r\n     * @method getSharedSecret\r\n     * @private\r\n     * @return {String} the value entered for shared secret\r\n     */\r\n    var getSharedSecret = function() {\r\n        return $(SELECTORS.SHARED_SECRET).val();\r\n    };\r\n\r\n    /**\r\n     * Trigger a visual loading indicator.\r\n     *\r\n     * @method startLoading\r\n     * @private\r\n     */\r\n    var startLoading = function() {\r\n        getSubmitButton().addClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Stop the visual loading indicator.\r\n     *\r\n     * @method stopLoading\r\n     * @private\r\n     */\r\n    var stopLoading = function() {\r\n        getSubmitButton().removeClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Check if the page is currently loading.\r\n     *\r\n     * @method isLoading\r\n     * @private\r\n     * @return {Boolean}\r\n     */\r\n    var isLoading = function() {\r\n        return getSubmitButton().hasClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Create a tool type from the cartridge URL that the user input. This will\r\n     * send an ajax request to the Moodle server to create the Type. The request will\r\n     * include the consumer key and secret, if any.\r\n     *\r\n     * On success the page will be re-rendered to take the user back to the original\r\n     * page with the list of tools and an alert notifying them of success.\r\n     *\r\n     * @method submitCartridgeURL\r\n     * @private\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var submitCartridgeURL = function() {\r\n        if (isLoading()) {\r\n            return false;\r\n        }\r\n\r\n        var url = getCartridgeURL();\r\n        // No URL? Do nothing.\r\n        if (url === \"\") {\r\n            return false;\r\n        }\r\n\r\n        startLoading();\r\n        var consumerKey = getConsumerKey();\r\n        var sharedSecret = getSharedSecret();\r\n        var promise = toolType.create({cartridgeurl: url, key: consumerKey, secret: sharedSecret});\r\n\r\n        promise.done(function() {\r\n            str.get_string('successfullycreatedtooltype', 'mod_lti').done(function(s) {\r\n                $(document).trigger(ltiEvents.NEW_TOOL_TYPE);\r\n                $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\r\n                $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, {\r\n                    message: s\r\n                });\r\n            }).fail(notification.exception);\r\n        }).fail(function() {\r\n            str.get_string('failedtocreatetooltype', 'mod_lti').done(function(s) {\r\n                $(document).trigger(ltiEvents.NEW_TOOL_TYPE);\r\n                $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\r\n                $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, {\r\n                    message: s,\r\n                    error: true\r\n                });\r\n            }).fail(notification.exception);\r\n        }).always(function() {\r\n          stopLoading();\r\n        });\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Sets up the listeners for user interaction on the page.\r\n     *\r\n     * @method registerEventListeners\r\n     * @private\r\n     */\r\n    var registerEventListeners = function() {\r\n        var form = $(SELECTORS.REGISTRATION_FORM);\r\n        form.submit(function(e) {\r\n            e.preventDefault();\r\n            submitCartridgeURL();\r\n        });\r\n\r\n        var cancelButton = getCancelButton();\r\n        cancelButton.click(function(e) {\r\n            e.preventDefault();\r\n            $(document).trigger(ltiEvents.STOP_CARTRIDGE_REGISTRATION);\r\n        });\r\n        cancelButton.keypress(function(e) {\r\n            if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\r\n                if (e.keyCode == KEYS.ENTER || e.keyCode == KEYS.SPACE) {\r\n                    e.preventDefault();\r\n                    cancelButton.click();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    return /** @alias module:mod_lti/cartridge_registration_form */ {\r\n\r\n        /**\r\n         * Initialise this module.\r\n         */\r\n        init: function() {\r\n            registerEventListeners();\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","ajax","notification","toolType","ltiEvents","KEYS","str","SELECTORS","getSubmitButton","submitCartridgeURL","hasClass","url","attr","addClass","consumerKey","val","sharedSecret","promise","create","cartridgeurl","key","secret","done","get_string","s","document","trigger","NEW_TOOL_TYPE","STOP_CARTRIDGE_REGISTRATION","REGISTRATION_FEEDBACK","message","fail","exception","error","always","removeClass","registerEventListeners","submit","e","preventDefault","cancelButton","click","keypress","metaKey","shiftKey","altKey","ctrlKey","keyCode","ENTER","SPACE","init"],"mappings":";;;;;;;;;;;AA0BAA,6CAAO,CAAC,SAAU,YAAa,oBAAqB,oBAAqB,iBAAkB,eAAgB,aACnG,SAASC,EAAGC,KAAMC,aAAcC,SAAUC,UAAWC,KAAMC,SAE3DC,uBAEc,oBAFdA,wBAGe,uBAHfA,4BAImB,+BAJnBA,qCAK4B,iCAL5BA,qCAM4B,iCAqB5BC,gBAAkB,kBACXR,EAAEO,uCA+ETE,mBAAqB,cAfdD,kBAAkBE,SAAS,kBAiBvB,MAGPC,IA/FGX,EAAEO,6BAA6BK,KAAK,yBAiG/B,KAARD,WACO,EA5CXH,kBAAkBK,SAAS,eAgDvBC,YArEGd,EAAEO,wBAAwBQ,MAsE7BC,aA3DGhB,EAAEO,yBAAyBQ,MA4D9BE,QAAUd,SAASe,OAAO,CAACC,aAAcR,IAAKS,IAAKN,YAAaO,OAAQL,sBAE5EC,QAAQK,MAAK,WACThB,IAAIiB,WAAW,8BAA+B,WAAWD,MAAK,SAASE,GACnExB,EAAEyB,UAAUC,QAAQtB,UAAUuB,eAC9B3B,EAAEyB,UAAUC,QAAQtB,UAAUwB,6BAC9B5B,EAAEyB,UAAUC,QAAQtB,UAAUyB,sBAAuB,CACjDC,QAASN,OAEdO,KAAK7B,aAAa8B,cACtBD,MAAK,WACJzB,IAAIiB,WAAW,yBAA0B,WAAWD,MAAK,SAASE,GAC9DxB,EAAEyB,UAAUC,QAAQtB,UAAUuB,eAC9B3B,EAAEyB,UAAUC,QAAQtB,UAAUwB,6BAC9B5B,EAAEyB,UAAUC,QAAQtB,UAAUyB,sBAAuB,CACjDC,QAASN,EACTS,OAAO,OAEZF,KAAK7B,aAAa8B,cACtBE,QAAO,WA3DV1B,kBAAkB2B,YAAY,cA+DvBlB,SASPmB,uBAAyB,WACdpC,EAAEO,6BACR8B,QAAO,SAASC,GACjBA,EAAEC,iBACF9B,4BAGA+B,aAzHGxC,EAAEO,sCA0HTiC,aAAaC,OAAM,SAASH,GACxBA,EAAEC,iBACFvC,EAAEyB,UAAUC,QAAQtB,UAAUwB,gCAElCY,aAAaE,UAAS,SAASJ,GACtBA,EAAEK,SAAYL,EAAEM,UAAaN,EAAEO,QAAWP,EAAEQ,SACzCR,EAAES,SAAW1C,KAAK2C,OAASV,EAAES,SAAW1C,KAAK4C,QAC7CX,EAAEC,iBACFC,aAAaC,mBAMmC,CAK5DS,KAAM,WACFd"}