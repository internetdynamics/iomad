{"version":3,"file":"external_registration.min.js","sources":["../src/external_registration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Encapsules the behavior for creating a tool type and tool proxy from a\r\n * registration url in Moodle.\r\n *\r\n * Manages the UI while operations are occuring, including rendering external\r\n * registration page within the iframe.\r\n *\r\n * See template: mod_lti/external_registration\r\n *\r\n * @module     mod_lti/external_registration\r\n * @copyright  2015 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.1\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/notification', 'core/templates', 'mod_lti/events',\r\n        'mod_lti/tool_proxy', 'mod_lti/tool_type', 'mod_lti/keys', 'core/str'],\r\n        function($, ajax, notification, templates, ltiEvents, toolProxy, toolType, KEYS, str) {\r\n\r\n    var SELECTORS = {\r\n        EXTERNAL_REGISTRATION_CONTAINER: '#external-registration-page-container',\r\n        EXTERNAL_REGISTRATION_TEMPLATE_CONTAINER: '#external-registration-template-container',\r\n        EXTERNAL_REGISTRATION_CANCEL_BUTTON: '#cancel-external-registration',\r\n        TOOL_TYPE_CAPABILITIES_CONTAINER: '#tool-type-capabilities-container',\r\n        TOOL_TYPE_CAPABILITIES_TEMPLATE_CONTAINER: '#tool-type-capabilities-template-container',\r\n        CAPABILITIES_AGREE_CONTAINER: '.capabilities-container',\r\n    };\r\n\r\n    /**\r\n     * Return the external registration cancel button element. This button is\r\n     * the cancel button that appears while the iframe is rendered.\r\n     *\r\n     * @method getExternalRegistrationCancelButton\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getExternalRegistrationCancelButton = function() {\r\n        return $(SELECTORS.EXTERNAL_REGISTRATION_CANCEL_BUTTON);\r\n    };\r\n\r\n    /**\r\n     * Return the container that holds all elements for the external registration, including\r\n     * the cancel button and the iframe.\r\n     *\r\n     * @method getExternalRegistrationContainer\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getExternalRegistrationContainer = function() {\r\n        return $(SELECTORS.EXTERNAL_REGISTRATION_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Return the container that holds the external registration page template. It should\r\n     * be the iframe.\r\n     *\r\n     * @method getExternalRegistrationTemplateContainer\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getExternalRegistrationTemplateContainer = function() {\r\n        return $(SELECTORS.EXTERNAL_REGISTRATION_TEMPLATE_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Return the container that holds the elements for displaying the list of capabilities\r\n     * that this tool type requires. This container wraps the loading indicator and the template\r\n     * container.\r\n     *\r\n     * @method getToolTypeCapabilitiesContainer\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getToolTypeCapabilitiesContainer = function() {\r\n        return $(SELECTORS.TOOL_TYPE_CAPABILITIES_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Return the container that holds the template that lists the capabilities that the\r\n     * tool type will require.\r\n     *\r\n     * @method getToolTypeCapabilitiesTemplateContainer\r\n     * @private\r\n     * @return {JQuery} jQuery object\r\n     */\r\n    var getToolTypeCapabilitiesTemplateContainer = function() {\r\n        return $(SELECTORS.TOOL_TYPE_CAPABILITIES_TEMPLATE_CONTAINER);\r\n    };\r\n\r\n    /**\r\n     * Triggers a visual indicator to show that the capabilities section is loading.\r\n     *\r\n     * @method startLoadingCapabilitiesContainer\r\n     * @private\r\n     */\r\n    var startLoadingCapabilitiesContainer = function() {\r\n        getToolTypeCapabilitiesContainer().addClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Removes the visual indicator that shows the capabilities section is loading.\r\n     *\r\n     * @method stopLoadingCapabilitiesContainer\r\n     * @private\r\n     */\r\n    var stopLoadingCapabilitiesContainer = function() {\r\n        getToolTypeCapabilitiesContainer().removeClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Adds a visual indicator that shows the cancel button is loading.\r\n     *\r\n     * @method startLoadingCancel\r\n     * @private\r\n     */\r\n    var startLoadingCancel = function() {\r\n        getExternalRegistrationCancelButton().addClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Adds a visual indicator that shows the cancel button is loading.\r\n     *\r\n     * @method startLoadingCancel\r\n     * @private\r\n     */\r\n    var stopLoadingCancel = function() {\r\n        getExternalRegistrationCancelButton().removeClass('loading');\r\n    };\r\n\r\n    /**\r\n     * Stops displaying the tool type capabilities container.\r\n     *\r\n     * @method hideToolTypeCapabilitiesContainer\r\n     * @private\r\n     */\r\n    var hideToolTypeCapabilitiesContainer = function() {\r\n        getToolTypeCapabilitiesContainer().addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Displays the tool type capabilities container.\r\n     *\r\n     * @method showToolTypeCapabilitiesContainer\r\n     * @private\r\n     */\r\n    var showToolTypeCapabilitiesContainer = function() {\r\n        getToolTypeCapabilitiesContainer().removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Stops displaying the external registration content.\r\n     *\r\n     * @method hideExternalRegistrationContent\r\n     * @private\r\n     */\r\n    var hideExternalRegistrationContent = function() {\r\n        getExternalRegistrationContainer().addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Displays the external registration content.\r\n     *\r\n     * @method showExternalRegistrationContent\r\n     * @private\r\n     */\r\n    var showExternalRegistrationContent = function() {\r\n        getExternalRegistrationContainer().removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Save the given tool proxy id on the DOM.\r\n     *\r\n     * @method setToolProxyId\r\n     * @private\r\n     * @param {Integer} id Tool proxy ID\r\n     */\r\n    var setToolProxyId = function(id) {\r\n        var button = getExternalRegistrationCancelButton();\r\n        button.attr('data-tool-proxy-id', id);\r\n    };\r\n\r\n    /**\r\n     * Return the saved tool proxy id.\r\n     *\r\n     * @method getToolProxyId\r\n     * @private\r\n     * @return {String} Tool proxy ID\r\n     */\r\n    var getToolProxyId = function() {\r\n        var button = getExternalRegistrationCancelButton();\r\n        return button.attr('data-tool-proxy-id');\r\n    };\r\n\r\n    /**\r\n     * Remove the saved tool proxy id.\r\n     *\r\n     * @method clearToolProxyId\r\n     * @private\r\n     */\r\n    var clearToolProxyId = function() {\r\n        var button = getExternalRegistrationCancelButton();\r\n        button.removeAttr('data-tool-proxy-id');\r\n    };\r\n\r\n    /**\r\n     * Returns true if a tool proxy id has been recorded.\r\n     *\r\n     * @method hasToolProxyId\r\n     * @private\r\n     * @return {Boolean}\r\n     */\r\n    var hasToolProxyId = function() {\r\n        return getToolProxyId() ? true : false;\r\n    };\r\n\r\n    /**\r\n     * Checks if this process has created a tool proxy within\r\n     * Moodle yet.\r\n     *\r\n     * @method hasCreatedToolProxy\r\n     * @private\r\n     * @return {Boolean}\r\n     */\r\n    var hasCreatedToolProxy = function() {\r\n        var button = getExternalRegistrationCancelButton();\r\n        return button.attr('data-tool-proxy-new') && hasToolProxyId();\r\n    };\r\n\r\n    /**\r\n     * Records that this process has created a tool proxy.\r\n     *\r\n     * @method setProxyAsNew\r\n     * @private\r\n     * @return {Boolean}\r\n     */\r\n    var setProxyAsNew = function() {\r\n        var button = getExternalRegistrationCancelButton();\r\n        return button.attr('data-tool-proxy-new', \"new\");\r\n    };\r\n\r\n    /**\r\n     * Records that this process has not created a tool proxy.\r\n     *\r\n     * @method setProxyAsOld\r\n     * @private\r\n     * @return {Boolean}\r\n     */\r\n    var setProxyAsOld = function() {\r\n        var button = getExternalRegistrationCancelButton();\r\n        return button.removeAttr('data-tool-proxy-new');\r\n    };\r\n\r\n    /**\r\n     * Gets the external registration request required to be sent to the external\r\n     * registration page using a form.\r\n     *\r\n     * See mod_lti/tool_proxy_registration_form template.\r\n     *\r\n     * @method getRegistrationRequest\r\n     * @private\r\n     * @param {Integer} id Tool Proxy ID\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var getRegistrationRequest = function(id) {\r\n        var request = {\r\n            methodname: 'mod_lti_get_tool_proxy_registration_request',\r\n            args: {\r\n                id: id\r\n            }\r\n        };\r\n\r\n        return ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Cancel an in progress external registration. This will perform any necessary\r\n     * clean up of tool proxies and return the page section back to the home section.\r\n     *\r\n     * @method cancelRegistration\r\n     * @private\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var cancelRegistration = function() {\r\n        startLoadingCancel();\r\n        var promise = $.Deferred();\r\n\r\n        // If we've created a proxy as part of this process then\r\n        // we need to delete it to clean up the data in the back end.\r\n        if (hasCreatedToolProxy()) {\r\n            var id = getToolProxyId();\r\n            toolProxy.delete(id).done(function() {\r\n                promise.resolve();\r\n            }).fail(function(failure) {\r\n                promise.reject(failure);\r\n            });\r\n        } else {\r\n            promise.resolve();\r\n        }\r\n\r\n        promise.done(function() {\r\n            // Return to the original page.\r\n            finishExternalRegistration();\r\n            stopLoadingCancel();\r\n        }).fail(function(failure) {\r\n            notification.exception(failure);\r\n            finishExternalRegistration();\r\n            stopLoadingCancel();\r\n            str.get_string('failedtodeletetoolproxy', 'mod_lti').done(function(s) {\r\n                var feedback = {\r\n                    message: s,\r\n                    error: true\r\n                };\r\n                $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, feedback);\r\n            }).fail(notification.exception);\r\n        });\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Load the external registration template and render it in the DOM and display it.\r\n     *\r\n     * @method renderExternalRegistrationWindow\r\n     * @private\r\n     * @param {Object} registrationRequest\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var renderExternalRegistrationWindow = function(registrationRequest) {\r\n        var promise = templates.render('mod_lti/tool_proxy_registration_form', registrationRequest);\r\n\r\n        promise.done(function(html, js) {\r\n            // Show the external registration page in an iframe.\r\n            var container = getExternalRegistrationTemplateContainer();\r\n            container.append(html);\r\n            templates.runTemplateJS(js);\r\n\r\n            container.find('form').submit();\r\n            showExternalRegistrationContent();\r\n        }).fail(notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Send a request to Moodle server to set the state of the tool type to configured (active).\r\n     *\r\n     * @method setTypeStatusActive\r\n     * @private\r\n     * @param {Object} typeData A set of data representing a type, as returned by a request to get a type\r\n     *               from the Moodle server.\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var setTypeStatusActive = function(typeData) {\r\n        return toolType.update({\r\n            id: typeData.id,\r\n            state: toolType.constants.state.configured\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render and display an agreement page for the user to acknowledge the list of capabilities\r\n     * (groups of data) that the external tool requires in order to work. If the user agrees then\r\n     * we will activate the tool so that it is immediately available. If they don't agree then\r\n     * the tool remains in a pending state within Moodle until agreement is given.\r\n     *\r\n     * @method promptForToolTypeCapabilitiesAgreement\r\n     * @private\r\n     * @param {Object} typeData A set of data representing a type, as returned by a request to get a type\r\n     *               from the Moodle server.\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var promptForToolTypeCapabilitiesAgreement = function(typeData) {\r\n        var promise = $.Deferred();\r\n\r\n        templates.render('mod_lti/tool_type_capabilities_agree', typeData).done(function(html, js) {\r\n            var container = getToolTypeCapabilitiesTemplateContainer();\r\n\r\n            hideExternalRegistrationContent();\r\n            showToolTypeCapabilitiesContainer();\r\n\r\n            templates.replaceNodeContents(container, html, js);\r\n\r\n            var choiceContainer = container.find(SELECTORS.CAPABILITIES_AGREE_CONTAINER);\r\n\r\n            // The user agrees to allow the tool to use the groups of data so we can go\r\n            // ahead and activate it for them so that it can be used straight away.\r\n            choiceContainer.on(ltiEvents.CAPABILITIES_AGREE, function() {\r\n                startLoadingCapabilitiesContainer();\r\n                setTypeStatusActive(typeData).always(function() {\r\n                    stopLoadingCapabilitiesContainer();\r\n                    container.empty();\r\n                    promise.resolve();\r\n                });\r\n            });\r\n\r\n            // The user declines to let the tool use the data. In this case we leave\r\n            // the tool as pending and they can delete it using the main screen if they\r\n            // wish.\r\n            choiceContainer.on(ltiEvents.CAPABILITIES_DECLINE, function() {\r\n                container.empty();\r\n                promise.resolve();\r\n            });\r\n        }).fail(promise.reject);\r\n\r\n        promise.done(function() {\r\n            hideToolTypeCapabilitiesContainer();\r\n        }).fail(notification.exception);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Send a request to the Moodle server to create a tool proxy using the registration URL the user\r\n     * has provided. The proxy is required for the external registration page to work correctly.\r\n     *\r\n     * After the proxy is created the external registration page is rendered within an iframe for the user\r\n     * to complete the registration in the external page.\r\n     *\r\n     * If the tool proxy creation fails then we redirect the page section back to the home section and\r\n     * display the error, rather than rendering the external registration page.\r\n     *\r\n     * @method createAndRegisterToolProxy\r\n     * @private\r\n     * @param {String} url Tool registration URL to register\r\n     * @return {Promise} jQuery Deferred object\r\n     */\r\n    var createAndRegisterToolProxy = function(url) {\r\n        var promise = $.Deferred();\r\n\r\n        if (!url || url === \"\") {\r\n            // No URL has been input so do nothing.\r\n            promise.resolve();\r\n        } else {\r\n            // A tool proxy needs to exist before the external page is rendered because\r\n            // the external page sends requests back to Moodle for information that is stored\r\n            // in the proxy.\r\n            toolProxy.create({regurl: url})\r\n                .done(function(result) {\r\n                        // Note that it's a new proxy so we will always clean it up.\r\n                        setProxyAsNew();\r\n                        promise = registerProxy(result.id);\r\n                    })\r\n                .fail(function(exception) {\r\n                        // Clean up.\r\n                        cancelRegistration();\r\n                        // Let the user know what the error is.\r\n                        var feedback = {\r\n                            message: exception.message,\r\n                            error: true\r\n                        };\r\n                        $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, feedback);\r\n                        promise.reject(exception);\r\n                    });\r\n        }\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Loads the window to register a proxy, given an ID.\r\n     *\r\n     * @method registerProxy\r\n     * @private\r\n     * @param {Integer} id Proxy id to register\r\n     * @return {Promise} jQuery Deferred object to fail or resolve\r\n     */\r\n    var registerProxy = function(id) {\r\n        var promise = $.Deferred();\r\n        // Save the id on the DOM to cleanup later.\r\n        setToolProxyId(id);\r\n\r\n        // There is a specific set of data needed to send to the external registration page\r\n        // in a form, so let's get it from our server.\r\n        getRegistrationRequest(id)\r\n            .done(function(registrationRequest) {\r\n                    renderExternalRegistrationWindow(registrationRequest)\r\n                        .done(function() {\r\n                                promise.resolve();\r\n                            })\r\n                        .fail(promise.fail);\r\n                })\r\n            .fail(promise.fail);\r\n\r\n        return promise;\r\n    };\r\n\r\n    /**\r\n     * Complete the registration process, clean up any left over data and\r\n     * trigger the appropriate events.\r\n     *\r\n     * @method finishExternalRegistration\r\n     * @private\r\n     */\r\n    var finishExternalRegistration = function() {\r\n        if (hasToolProxyId()) {\r\n            clearToolProxyId();\r\n        }\r\n        setProxyAsOld(false);\r\n\r\n        hideExternalRegistrationContent();\r\n        var container = getExternalRegistrationTemplateContainer();\r\n        container.empty();\r\n\r\n        $(document).trigger(ltiEvents.STOP_EXTERNAL_REGISTRATION);\r\n    };\r\n\r\n    /**\r\n     * Sets up the listeners for user interaction on the page.\r\n     *\r\n     * @method registerEventListeners\r\n     * @private\r\n     */\r\n    var registerEventListeners = function() {\r\n\r\n        $(document).on(ltiEvents.START_EXTERNAL_REGISTRATION, function(event, data) {\r\n                if (!data) {\r\n                    return;\r\n                }\r\n                if (data.url) {\r\n                    createAndRegisterToolProxy(data.url);\r\n                }\r\n                if (data.proxyid) {\r\n                    registerProxy(data.proxyid);\r\n                }\r\n            });\r\n\r\n        var cancelExternalRegistrationButton = getExternalRegistrationCancelButton();\r\n        cancelExternalRegistrationButton.click(function(e) {\r\n            e.preventDefault();\r\n            cancelRegistration();\r\n        });\r\n        cancelExternalRegistrationButton.keypress(function(e) {\r\n            if (!e.metaKey && !e.shiftKey && !e.altKey && !e.ctrlKey) {\r\n                if (e.keyCode == KEYS.ENTER || e.keyCode == KEYS.SPACE) {\r\n                    e.preventDefault();\r\n                    cancelRegistration();\r\n                }\r\n            }\r\n        });\r\n\r\n        // This is gross but necessary due to isolated jQuery scopes between\r\n        // child iframe and parent windows. There is no other way to communicate.\r\n        //\r\n        // This function gets called by the moodle page that received the redirect\r\n        // from the external registration page and handles the external page's returned\r\n        // parameters.\r\n        //\r\n        // See AMD module mod_lti/external_registration_return.\r\n        window.triggerExternalRegistrationComplete = function(data) {\r\n            var promise = $.Deferred();\r\n            var feedback = {\r\n                message: \"\",\r\n                error: false\r\n            };\r\n\r\n            if (data.status == \"success\") {\r\n                str.get_string('successfullycreatedtooltype', 'mod_lti').done(function(s) {\r\n                    feedback.message = s;\r\n                }).fail(notification.exception);\r\n\r\n                // Trigger appropriate events when we've completed the necessary requests.\r\n                promise.done(function() {\r\n                    finishExternalRegistration();\r\n                    $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, feedback);\r\n                    $(document).trigger(ltiEvents.NEW_TOOL_TYPE);\r\n                }).fail(notification.exception);\r\n\r\n                // We should have created a tool proxy by this point.\r\n                if (hasCreatedToolProxy()) {\r\n                    var proxyId = getToolProxyId();\r\n\r\n                    // We need the list of types that are linked to this proxy. We're assuming it'll\r\n                    // only be one because this process creates a one-to-one type->proxy.\r\n                    toolType.getFromToolProxyId(proxyId).done(function(types) {\r\n                        if (types && types.length) {\r\n                            // There should only be one result.\r\n                            var typeData = types[0];\r\n\r\n                            // Check if the external tool required access to any Moodle data (users, courses etc).\r\n                            if (typeData.hascapabilitygroups) {\r\n                                // If it did then we ask the user to agree to those groups before the type is\r\n                                // activated (i.e. can be used in Moodle).\r\n                                promptForToolTypeCapabilitiesAgreement(typeData).always(function() {\r\n                                    promise.resolve();\r\n                                });\r\n                            } else {\r\n                                promise.resolve();\r\n                            }\r\n                        } else {\r\n                            promise.resolve();\r\n                        }\r\n                    }).fail(function() {\r\n                        promise.resolve();\r\n                    });\r\n                }\r\n            } else {\r\n                // Anything other than success is failure.\r\n                feedback.message = data.error;\r\n                feedback.error = true;\r\n\r\n                // Cancel registration to clean up any proxies and tools that were\r\n                // created.\r\n                promise.done(function() {\r\n                    cancelRegistration().always(function() {\r\n                        $(document).trigger(ltiEvents.REGISTRATION_FEEDBACK, feedback);\r\n                    });\r\n                }).fail(notification.exception);\r\n\r\n                promise.resolve();\r\n            }\r\n\r\n            return promise;\r\n        };\r\n    };\r\n\r\n    return {\r\n\r\n        /**\r\n         * Initialise this module.\r\n         */\r\n        init: function() {\r\n            registerEventListeners();\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","ajax","notification","templates","ltiEvents","toolProxy","toolType","KEYS","str","SELECTORS","getExternalRegistrationCancelButton","getExternalRegistrationContainer","getExternalRegistrationTemplateContainer","getToolTypeCapabilitiesContainer","stopLoadingCancel","removeClass","hideExternalRegistrationContent","addClass","getToolProxyId","attr","hasToolProxyId","hasCreatedToolProxy","cancelRegistration","promise","Deferred","id","delete","done","resolve","fail","failure","reject","finishExternalRegistration","exception","get_string","s","feedback","message","error","document","trigger","REGISTRATION_FEEDBACK","renderExternalRegistrationWindow","registrationRequest","render","html","js","container","append","runTemplateJS","find","submit","promptForToolTypeCapabilitiesAgreement","typeData","replaceNodeContents","choiceContainer","on","CAPABILITIES_AGREE","update","state","constants","configured","setTypeStatusActive","always","empty","CAPABILITIES_DECLINE","createAndRegisterToolProxy","url","create","regurl","result","registerProxy","setToolProxyId","request","methodname","args","call","getRegistrationRequest","removeAttr","STOP_EXTERNAL_REGISTRATION","init","START_EXTERNAL_REGISTRATION","event","data","proxyid","cancelExternalRegistrationButton","click","e","preventDefault","keypress","metaKey","shiftKey","altKey","ctrlKey","keyCode","ENTER","SPACE","window","triggerExternalRegistrationComplete","status","NEW_TOOL_TYPE","proxyId","getFromToolProxyId","types","length","hascapabilitygroups","registerEventListeners"],"mappings":"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"}