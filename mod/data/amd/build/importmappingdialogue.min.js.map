{"version":3,"file":"importmappingdialogue.min.js","sources":["../src/importmappingdialogue.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for deleting a database as a preset.\r\n *\r\n * @module      mod_data/importmappingdialogue\r\n * @copyright   2022 Amaia Anabitarte <amaia@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Notification from 'core/notification';\r\nimport Ajax from 'core/ajax';\r\nimport Url from 'core/url';\r\nimport Templates from 'core/templates';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport {get_string as getString} from 'core/str';\r\n\r\n// Load global strings.\r\nprefetchStrings('mod_data', ['mapping:dialogtitle:usepreset']);\r\n\r\nconst selectors = {\r\n    selectPreset: '[data-action=\"selectpreset\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    registerEventListeners();\r\n};\r\n\r\n/**\r\n * Register events.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('click', (event) => {\r\n        const preset = event.target.closest(selectors.selectPreset);\r\n        if (preset) {\r\n            event.preventDefault();\r\n            showMappingDialogue(preset);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * Show the confirmation modal for uploading a preset.\r\n *\r\n * @param {HTMLElement} usepreset the preset to import.\r\n */\r\nconst showMappingDialogue = (usepreset) => {\r\n    const presetName = usepreset.dataset.presetname;\r\n    const cmId = usepreset.dataset.cmid;\r\n\r\n    getMappingInformation(cmId, presetName).then((result) => {\r\n        if (result.data && result.data.needsmapping) {\r\n            buildModal({\r\n                title: getString('mapping:dialogtitle:usepreset', 'mod_data', result.data.presetname),\r\n                body: Templates.render('mod_data/fields_mapping_body', result.data),\r\n                footer: Templates.render('mod_data/fields_mapping_footer', getMappingButtons(cmId, presetName)),\r\n                large: true,\r\n            });\r\n        } else {\r\n            window.location.href = Url.relativeUrl(\r\n                'mod/data/field.php',\r\n                {\r\n                    id: cmId,\r\n                    mode: 'usepreset',\r\n                    fullname: presetName,\r\n                },\r\n                false\r\n            );\r\n        }\r\n        return true;\r\n    }).catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Given an object we want to build a modal ready to show\r\n *\r\n * @method buildModal\r\n * @param {Object} params the modal params\r\n * @param {Promise} params.title\r\n * @param {Promise} params.body\r\n * @param {Promise} params.footer\r\n * @return {Object} The modal ready to display immediately and render body in later.\r\n */\r\nconst buildModal = (params) => {\r\n    return ModalFactory.create({\r\n        ...params,\r\n        type: ModalFactory.types.DEFAULT,\r\n    }).then(modal => {\r\n        modal.show();\r\n        modal.showFooter();\r\n        modal.registerCloseOnCancel();\r\n        return modal;\r\n    }).catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Add buttons to render on mapping modal.\r\n *\r\n * @param {int} cmId The id of the current database activity.\r\n * @param {string} presetName The preset name to delete.\r\n * @return {array} Same data with buttons.\r\n */\r\nconst getMappingButtons = (cmId, presetName) => {\r\n    const data = {};\r\n\r\n    data.mapfieldsbutton = Url.relativeUrl(\r\n        'mod/data/field.php',\r\n        {\r\n            id: cmId,\r\n            fullname: presetName,\r\n            mode: 'usepreset',\r\n            action: 'select',\r\n        },\r\n        false\r\n    );\r\n\r\n    data.applybutton = Url.relativeUrl(\r\n        'mod/data/field.php',\r\n        {\r\n            id: cmId,\r\n            fullname: presetName,\r\n            mode: 'usepreset',\r\n            action: 'notmapping'\r\n        },\r\n        false\r\n    );\r\n\r\n    return data;\r\n};\r\n\r\n/**\r\n * Check whether we should show the mapping dialogue or not.\r\n *\r\n * @param {int} cmId The id of the current database activity.\r\n * @param {string} presetName The preset name to delete.\r\n * @return {promise} Resolved with the result and warnings of deleting a preset.\r\n */\r\nconst getMappingInformation = (cmId, presetName) => {\r\n    const request = {\r\n        methodname: 'mod_data_get_mapping_information',\r\n        args: {\r\n            cmid: cmId,\r\n            importedpreset: presetName,\r\n        }\r\n    };\r\n    return Ajax.call([request])[0];\r\n};\r\n"],"names":["selectors","registerEventListeners","document","addEventListener","event","preset","target","closest","preventDefault","showMappingDialogue","usepreset","presetName","dataset","presetname","cmId","cmid","getMappingInformation","then","result","data","needsmapping","buildModal","title","body","Templates","render","footer","getMappingButtons","large","window","location","href","Url","relativeUrl","id","mode","fullname","catch","Notification","exception","params","ModalFactory","create","type","types","DEFAULT","modal","show","showFooter","registerCloseOnCancel","mapfieldsbutton","action","applybutton","request","methodname","args","importedpreset","Ajax","call"],"mappings":";;;;;;;8UAgCgB,WAAY,CAAC,wCAEvBA,uBACY,6CAME,KAChBC,gCAMEA,uBAAyB,KAC3BC,SAASC,iBAAiB,SAAUC,cAC1BC,OAASD,MAAME,OAAOC,QAAQP,wBAChCK,SACAD,MAAMI,iBACNC,oBAAoBJ,aAU1BI,oBAAuBC,kBACnBC,WAAaD,UAAUE,QAAQC,WAC/BC,KAAOJ,UAAUE,QAAQG,KAE/BC,sBAAsBF,KAAMH,YAAYM,MAAMC,SACtCA,OAAOC,MAAQD,OAAOC,KAAKC,aAC3BC,WAAW,CACPC,OAAO,mBAAU,gCAAiC,WAAYJ,OAAOC,KAAKN,YAC1EU,KAAMC,mBAAUC,OAAO,+BAAgCP,OAAOC,MAC9DO,OAAQF,mBAAUC,OAAO,iCAAkCE,kBAAkBb,KAAMH,aACnFiB,OAAO,IAGXC,OAAOC,SAASC,KAAOC,aAAIC,YACvB,qBACA,CACIC,GAAIpB,KACJqB,KAAM,YACNC,SAAUzB,aAEd,IAGD,KACR0B,MAAMC,sBAAaC,YAapBlB,WAAcmB,QACTC,uBAAaC,OAAO,IACpBF,OACHG,KAAMF,uBAAaG,MAAMC,UAC1B5B,MAAK6B,QACJA,MAAMC,OACND,MAAME,aACNF,MAAMG,wBACCH,SACRT,MAAMC,sBAAaC,WAUpBZ,kBAAoB,CAACb,KAAMH,oBACvBQ,KAAO,UAEbA,KAAK+B,gBAAkBlB,aAAIC,YACvB,qBACA,CACIC,GAAIpB,KACJsB,SAAUzB,WACVwB,KAAM,YACNgB,OAAQ,WAEZ,GAGJhC,KAAKiC,YAAcpB,aAAIC,YACnB,qBACA,CACIC,GAAIpB,KACJsB,SAAUzB,WACVwB,KAAM,YACNgB,OAAQ,eAEZ,GAGGhC,MAULH,sBAAwB,CAACF,KAAMH,oBAC3B0C,QAAU,CACZC,WAAY,mCACZC,KAAM,CACFxC,KAAMD,KACN0C,eAAgB7C,oBAGjB8C,cAAKC,KAAK,CAACL,UAAU"}