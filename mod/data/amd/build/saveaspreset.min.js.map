{"version":3,"file":"saveaspreset.min.js","sources":["../src/saveaspreset.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for saving a database as a preset.\r\n *\r\n * @module      mod_data/saveaspreset\r\n * @copyright   2021 Mihail Geshoski <mihail@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport {get_string as getString} from 'core/str';\r\n\r\nconst selectors = {\r\n    saveAsPresetButton: '[data-action=\"saveaspreset\"]',\r\n};\r\n\r\n/**\r\n * Initialize module.\r\n */\r\nexport const init = () => {\r\n\r\n    document.addEventListener('click', (event) => {\r\n        const saveAsPresetButton = event.target.closest(selectors.saveAsPresetButton);\r\n\r\n        if (!saveAsPresetButton) {\r\n            return;\r\n        }\r\n\r\n        event.preventDefault();\r\n        const modalForm = new ModalForm({\r\n            modalConfig: {\r\n                title: getString('savedataaspreset', 'mod_data'),\r\n            },\r\n            formClass: 'mod_data\\\\form\\\\save_as_preset',\r\n            args: {d: saveAsPresetButton.dataset.dataid},\r\n            saveButtonText: getString('save'),\r\n            returnFocus: saveAsPresetButton,\r\n        });\r\n\r\n        // Show a toast notification when the form is submitted.\r\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\r\n            if (event.detail.result) {\r\n                window.location.reload();\r\n            } else {\r\n                Notification.addNotification({\r\n                    type: 'error',\r\n                    message:  event.detail.errors.join('<br>')\r\n                });\r\n            }\r\n        });\r\n\r\n        modalForm.show();\r\n    });\r\n};\r\n"],"names":["selectors","document","addEventListener","event","saveAsPresetButton","target","closest","preventDefault","modalForm","ModalForm","modalConfig","title","formClass","args","d","dataset","dataid","saveButtonText","returnFocus","events","FORM_SUBMITTED","detail","result","window","location","reload","addNotification","type","message","errors","join","show"],"mappings":";;;;;;;0LA2BMA,6BACkB,6CAMJ,KAEhBC,SAASC,iBAAiB,SAAUC,cAC1BC,mBAAqBD,MAAME,OAAOC,QAAQN,kCAE3CI,0BAILD,MAAMI,uBACAC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,mBAAoB,aAEzCC,UAAW,iCACXC,KAAM,CAACC,EAAGV,mBAAmBW,QAAQC,QACrCC,gBAAgB,mBAAU,QAC1BC,YAAad,qBAIjBI,UAAUN,iBAAiBM,UAAUW,OAAOC,gBAAgBjB,QACpDA,MAAMkB,OAAOC,OACbC,OAAOC,SAASC,+BAEHC,gBAAgB,CACzBC,KAAM,QACNC,QAAUzB,MAAMkB,OAAOQ,OAAOC,KAAK,aAK/CtB,UAAUuB"}