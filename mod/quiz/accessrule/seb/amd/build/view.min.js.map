{"version":3,"file":"view.min.js","sources":["../src/view.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Manage the quiz views.\r\n *\r\n * @module     quizaccess_seb/view\r\n * @author     Andrew Madden <andrewmadden@catalyst-au.net>\r\n * @copyright  2021 Catalyst IT\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Notification from \"core/notification\";\r\nimport * as Templates from \"core/templates\";\r\nimport * as Str from \"core/str\";\r\nimport * as ModalFactory from \"core/modal_factory\";\r\n\r\n/** @var SELECTOR List of CSS selectors. */\r\nconst SELECTOR = {\r\n    MAIN: '#region-main',\r\n    LOADING: '.seb-loading',\r\n};\r\n\r\n/** @var Template List of mustache templates. */\r\nconst TEMPLATE = {\r\n    LOADING: 'quizaccess_seb/loading',\r\n};\r\n\r\n/**\r\n * Manages view when access has been granted.\r\n */\r\nexport const allowAccess = () => {\r\n    window.location.reload();\r\n};\r\n\r\n/**\r\n * Add an alert to page to inform that Safe Exam Browser access is being checked.\r\n *\r\n * @return {Promise}\r\n */\r\nexport const addLoadingAlert = () => {\r\n    return Templates.render(TEMPLATE.LOADING, {}).then((html, js) => {\r\n        const alertRegion = window.document.querySelector(SELECTOR.MAIN);\r\n        return Templates.prependNodeContents(alertRegion, html, js);\r\n    }).catch(Notification.exception);\r\n};\r\n\r\n/**\r\n * Remove the Safe Exam Browser access check alert from the page.\r\n */\r\nexport const clearLoadingAlert = () => {\r\n    const alert = window.document.querySelector(SELECTOR.LOADING);\r\n    if (alert) {\r\n        Templates.replaceNode(alert, '', '');\r\n    }\r\n};\r\n\r\n/**\r\n * Display validation failed modal.\r\n */\r\nexport const showValidationFailedModal = () => {\r\n    ModalFactory.create({\r\n        type: ModalFactory.types.ALERT,\r\n        title: Str.get_string('sebkeysvalidationfailed', 'quizaccess_seb'),\r\n        body: Str.get_string('invalidkeys', 'quizaccess_seb'),\r\n        large: false,\r\n    }).then((modal) => {\r\n        modal.show();\r\n    }).fail(Notification.exception);\r\n};\r\n"],"names":["SELECTOR","TEMPLATE","window","location","reload","Templates","render","then","html","js","alertRegion","document","querySelector","prependNodeContents","catch","Notification","exception","alert","replaceNode","ModalFactory","create","type","types","ALERT","title","Str","get_string","body","large","modal","show","fail"],"mappings":";;;;;;;;kzCA8BMA,cACI,eADJA,iBAEO,eAIPC,iBACO,8CAMc,KACvBC,OAAOC,SAASC,mCAQW,IACpBC,UAAUC,OAAOL,iBAAkB,IAAIM,MAAK,CAACC,KAAMC,YAChDC,YAAcR,OAAOS,SAASC,cAAcZ,sBAC3CK,UAAUQ,oBAAoBH,YAAaF,KAAMC,OACzDK,MAAMC,sBAAaC,sCAMO,WACvBC,MAAQf,OAAOS,SAASC,cAAcZ,kBACxCiB,OACAZ,UAAUa,YAAYD,MAAO,GAAI,wCAOA,KACrCE,aAAaC,OAAO,CAChBC,KAAMF,aAAaG,MAAMC,MACzBC,MAAOC,IAAIC,WAAW,0BAA2B,kBACjDC,KAAMF,IAAIC,WAAW,cAAe,kBACpCE,OAAO,IACRrB,MAAMsB,QACLA,MAAMC,UACPC,KAAKhB,sBAAaC"}