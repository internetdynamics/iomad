{"version":3,"file":"modal_add_random_question.min.js","sources":["../src/modal_add_random_question.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Contain the logic for the add random question modal.\r\n *\r\n * @module     mod_quiz/modal_add_random_question\r\n * @copyright  2018 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/notification',\r\n    'core/modal',\r\n    'core/modal_events',\r\n    'core/modal_registry',\r\n    'core/fragment',\r\n    'core/templates',\r\n    'core_form/changechecker',\r\n],\r\nfunction(\r\n    $,\r\n    Notification,\r\n    Modal,\r\n    ModalEvents,\r\n    ModalRegistry,\r\n    Fragment,\r\n    Templates,\r\n    FormChangeChecker,\r\n) {\r\n\r\n    var registered = false;\r\n    var SELECTORS = {\r\n        EXISTING_CATEGORY_CONTAINER: '[data-region=\"existing-category-container\"]',\r\n        EXISTING_CATEGORY_FORM_ELEMENT: '#id_existingcategoryheader',\r\n        NEW_CATEGORY_CONTAINER: '[data-region=\"new-category-container\"]',\r\n        NEW_CATEGORY_FORM_ELEMENT: '#id_newcategoryheader',\r\n        TAB_CONTENT: '[data-region=\"tab-content\"]',\r\n        ADD_ON_PAGE_FORM_ELEMENT: '[name=\"addonpage\"]',\r\n        SUBMIT_BUTTON_ELEMENT: 'input[type=\"submit\"]',\r\n        CANCEL_BUTTON_ELEMENT: 'input[type=\"submit\"][name=\"cancel\"]',\r\n        FORM_HEADER: 'legend',\r\n        BUTTON_CONTAINER: '.fitem'\r\n    };\r\n\r\n    /**\r\n     * Constructor for the Modal.\r\n     *\r\n     * @param {object} root The root jQuery element for the modal\r\n     */\r\n    var ModalAddRandomQuestion = function(root) {\r\n        Modal.call(this, root);\r\n        this.contextId = null;\r\n        this.addOnPageId = null;\r\n        this.category = null;\r\n        this.returnUrl = null;\r\n        this.cmid = null;\r\n        this.loadedForm = false;\r\n    };\r\n\r\n    ModalAddRandomQuestion.TYPE = 'mod_quiz-quiz-add-random-question';\r\n    ModalAddRandomQuestion.prototype = Object.create(Modal.prototype);\r\n    ModalAddRandomQuestion.prototype.constructor = ModalAddRandomQuestion;\r\n\r\n    /**\r\n     * Save the Moodle context id that the question bank is being\r\n     * rendered in.\r\n     *\r\n     * @method setContextId\r\n     * @param {int} id\r\n     */\r\n    ModalAddRandomQuestion.prototype.setContextId = function(id) {\r\n        this.contextId = id;\r\n    };\r\n\r\n    /**\r\n     * Retrieve the saved Moodle context id.\r\n     *\r\n     * @method getContextId\r\n     * @return {int}\r\n     */\r\n    ModalAddRandomQuestion.prototype.getContextId = function() {\r\n        return this.contextId;\r\n    };\r\n\r\n    /**\r\n     * Set the id of the page that the question should be added to\r\n     * when the user clicks the add to quiz link.\r\n     *\r\n     * @method setAddOnPageId\r\n     * @param {int} id\r\n     */\r\n    ModalAddRandomQuestion.prototype.setAddOnPageId = function(id) {\r\n        this.addOnPageId = id;\r\n        this.getBody().find(SELECTORS.ADD_ON_PAGE_FORM_ELEMENT).val(id);\r\n    };\r\n\r\n    /**\r\n     * Returns the saved page id for the question to be added to.\r\n     *\r\n     * @method getAddOnPageId\r\n     * @return {int}\r\n     */\r\n    ModalAddRandomQuestion.prototype.getAddOnPageId = function() {\r\n        return this.addOnPageId;\r\n    };\r\n\r\n    /**\r\n     * Set the category for this form. The category is a comma separated\r\n     * category id and category context id.\r\n     *\r\n     * @method setCategory\r\n     * @param {string} category\r\n     */\r\n    ModalAddRandomQuestion.prototype.setCategory = function(category) {\r\n        this.category = category;\r\n    };\r\n\r\n    /**\r\n     * Returns the saved category.\r\n     *\r\n     * @method getCategory\r\n     * @return {string}\r\n     */\r\n    ModalAddRandomQuestion.prototype.getCategory = function() {\r\n        return this.category;\r\n    };\r\n\r\n    /**\r\n     * Set the return URL for the form.\r\n     *\r\n     * @method setReturnUrl\r\n     * @param {string} url\r\n     */\r\n    ModalAddRandomQuestion.prototype.setReturnUrl = function(url) {\r\n        this.returnUrl = url;\r\n    };\r\n\r\n    /**\r\n     * Returns the return URL for the form.\r\n     *\r\n     * @method getReturnUrl\r\n     * @return {string}\r\n     */\r\n    ModalAddRandomQuestion.prototype.getReturnUrl = function() {\r\n        return this.returnUrl;\r\n    };\r\n\r\n    /**\r\n     * Set the course module id for the form.\r\n     *\r\n     * @method setCMID\r\n     * @param {int} id\r\n     */\r\n    ModalAddRandomQuestion.prototype.setCMID = function(id) {\r\n        this.cmid = id;\r\n    };\r\n\r\n    /**\r\n     * Returns the course module id for the form.\r\n     *\r\n     * @method getCMID\r\n     * @return {int}\r\n     */\r\n    ModalAddRandomQuestion.prototype.getCMID = function() {\r\n        return this.cmid;\r\n    };\r\n\r\n    /**\r\n     * Moves a given form element inside (a child of) a given tab element.\r\n     *\r\n     * Hides the 'legend' (e.g. header) element of the form element because the\r\n     * tab has the name.\r\n     *\r\n     * Moves the submit button into a footer element at the bottom of the form\r\n     * element for styling purposes.\r\n     *\r\n     * @method moveFormElementIntoTab\r\n     * @param  {jquery} formElement The form element to move into the tab.\r\n     * @param  {jquey} tabElement The tab element for the form element to move into.\r\n     */\r\n    ModalAddRandomQuestion.prototype.moveFormElementIntoTab = function(formElement, tabElement) {\r\n        var submitButtons = formElement.find(SELECTORS.SUBMIT_BUTTON_ELEMENT);\r\n        var footer = $('<div class=\"modal-footer mt-1\" data-region=\"footer\"></div>');\r\n        // Hide the header because the tabs show us which part of the form we're\r\n        // looking at.\r\n        formElement.find(SELECTORS.FORM_HEADER).addClass('hidden');\r\n        // Move the element inside a tab.\r\n        formElement.wrap(tabElement);\r\n        // Remove the buttons container element.\r\n        submitButtons.closest(SELECTORS.BUTTON_CONTAINER).remove();\r\n        // Put the button inside a footer.\r\n        submitButtons.appendTo(footer);\r\n        // Add the footer to the end of the category form element.\r\n        footer.appendTo(formElement);\r\n    };\r\n\r\n    /**\r\n     * Empty the tab content container and move all tabs from the form into the\r\n     * tab container element.\r\n     *\r\n     * @method moveTabsIntoTabContent\r\n     * @param  {jquery} form The form element.\r\n     */\r\n    ModalAddRandomQuestion.prototype.moveTabsIntoTabContent = function(form) {\r\n        // Empty it to remove the loading icon.\r\n        var tabContent = this.getBody().find(SELECTORS.TAB_CONTENT).empty();\r\n        // Make sure all tabs are inside the tab content element.\r\n        form.find('[role=\"tabpanel\"]').wrapAll(tabContent);\r\n    };\r\n\r\n    /**\r\n     * Make sure all of the tabs have a cancel button in their fotter to sit along\r\n     * side the submit button.\r\n     *\r\n     * @method moveCancelButtonToTabs\r\n     * @param  {jquey} form The form element.\r\n     */\r\n    ModalAddRandomQuestion.prototype.moveCancelButtonToTabs = function(form) {\r\n        var cancelButton = form.find(SELECTORS.CANCEL_BUTTON_ELEMENT).addClass('ml-1');\r\n        var tabFooters = form.find('[data-region=\"footer\"]');\r\n        // Remove the buttons container element.\r\n        cancelButton.closest(SELECTORS.BUTTON_CONTAINER).remove();\r\n        cancelButton.clone().appendTo(tabFooters);\r\n    };\r\n\r\n    /**\r\n     * Load the add random question form in a fragement and perform some transformation\r\n     * on the HTML to convert it into tabs for rendering in the modal.\r\n     *\r\n     * @method loadForm\r\n     * @return {promise} Resolved with form HTML and JS.\r\n     */\r\n    ModalAddRandomQuestion.prototype.loadForm = function() {\r\n        return Fragment.loadFragment(\r\n            'mod_quiz',\r\n            'add_random_question_form',\r\n            this.getContextId(),\r\n            {\r\n                addonpage: this.getAddOnPageId(),\r\n                cat: this.getCategory(),\r\n                returnurl: this.getReturnUrl(),\r\n                cmid: this.getCMID()\r\n            }\r\n        )\r\n        .then(function(html, js) {\r\n            var form = $(html);\r\n            var existingCategoryFormElement = form.find(SELECTORS.EXISTING_CATEGORY_FORM_ELEMENT);\r\n            var existingCategoryTab = this.getBody().find(SELECTORS.EXISTING_CATEGORY_CONTAINER);\r\n            var newCategoryFormElement = form.find(SELECTORS.NEW_CATEGORY_FORM_ELEMENT);\r\n            var newCategoryTab = this.getBody().find(SELECTORS.NEW_CATEGORY_CONTAINER);\r\n\r\n            // Transform the form into tabs for better rendering in the modal.\r\n            this.moveFormElementIntoTab(existingCategoryFormElement, existingCategoryTab);\r\n            this.moveFormElementIntoTab(newCategoryFormElement, newCategoryTab);\r\n            this.moveTabsIntoTabContent(form);\r\n            this.moveCancelButtonToTabs(form);\r\n\r\n            Templates.replaceNode(this.getBody().find(SELECTORS.TAB_CONTENT), form, js);\r\n            return;\r\n        }.bind(this))\r\n        .then(function() {\r\n            // Make sure the form change checker is disabled otherwise it'll stop the user from navigating away from the\r\n            // page once the modal is hidden.\r\n            FormChangeChecker.disableAllChecks();\r\n            return;\r\n        })\r\n        .fail(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Override the modal show function to load the form when this modal is first\r\n     * shown.\r\n     *\r\n     * @method show\r\n     */\r\n    ModalAddRandomQuestion.prototype.show = function() {\r\n        Modal.prototype.show.call(this);\r\n\r\n        if (!this.loadedForm) {\r\n            this.loadForm();\r\n            this.loadedForm = true;\r\n        }\r\n    };\r\n\r\n    // Automatically register with the modal registry the first time this module is\r\n    // imported so that you can create modals of this type using the modal factory.\r\n    if (!registered) {\r\n        ModalRegistry.register(\r\n            ModalAddRandomQuestion.TYPE,\r\n            ModalAddRandomQuestion,\r\n            'mod_quiz/modal_add_random_question'\r\n        );\r\n\r\n        registered = true;\r\n    }\r\n\r\n    return ModalAddRandomQuestion;\r\n});\r\n"],"names":["define","$","Notification","Modal","ModalEvents","ModalRegistry","Fragment","Templates","FormChangeChecker","registered","SELECTORS","ModalAddRandomQuestion","root","call","this","contextId","addOnPageId","category","returnUrl","cmid","loadedForm","TYPE","prototype","Object","create","constructor","setContextId","id","getContextId","setAddOnPageId","getBody","find","val","getAddOnPageId","setCategory","getCategory","setReturnUrl","url","getReturnUrl","setCMID","getCMID","moveFormElementIntoTab","formElement","tabElement","submitButtons","footer","addClass","wrap","closest","remove","appendTo","moveTabsIntoTabContent","form","tabContent","empty","wrapAll","moveCancelButtonToTabs","cancelButton","tabFooters","clone","loadForm","loadFragment","addonpage","cat","returnurl","then","html","js","existingCategoryFormElement","existingCategoryTab","newCategoryFormElement","newCategoryTab","replaceNode","bind","disableAllChecks","fail","exception","show","register"],"mappings":"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"}