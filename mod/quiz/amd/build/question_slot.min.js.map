{"version":3,"file":"question_slot.min.js","sources":["../src/question_slot.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Render the question slot template for each question in the quiz edit view.\r\n *\r\n * @module     mod_quiz/question_slot\r\n * @copyright  2021 Catalyst IT Australia Pty Ltd\r\n * @author     Guillermo Gomez Arias <guillermogomez@catalyst-au.net>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {call as fetchMany} from 'core/ajax';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * Set the question version for the slot.\r\n *\r\n * @param {Number} slotId\r\n * @param {Number} newVersion\r\n * @return {Array} The modified question version\r\n */\r\nconst setQuestionVersion = (slotId, newVersion) => fetchMany([{\r\n    methodname: 'mod_quiz_set_question_version',\r\n    args: {\r\n        slotid: slotId,\r\n        newversion: newVersion,\r\n    }\r\n}])[0];\r\n\r\n/**\r\n * Replace the container with a new version.\r\n */\r\nconst registerEventListeners = () => {\r\n    document.addEventListener('change', e => {\r\n        if (!e.target.matches('[data-action=\"mod_quiz-select_slot\"][data-slot-id]')) {\r\n            return;\r\n        }\r\n\r\n        const slotId = e.target.dataset.slotId;\r\n        const newVersion = parseInt(e.target.value);\r\n\r\n        setQuestionVersion(slotId, newVersion)\r\n            .then(() => {\r\n                location.reload();\r\n                return;\r\n            })\r\n            .catch(Notification.exception);\r\n    });\r\n};\r\n\r\n/** @property {Boolean} eventsRegistered If the event has been registered or not */\r\nlet eventsRegistered = false;\r\n\r\n/**\r\n * Entrypoint of the js.\r\n */\r\nexport const init = () => {\r\n    if (eventsRegistered) {\r\n        return;\r\n    }\r\n\r\n    registerEventListeners();\r\n};\r\n"],"names":["registerEventListeners","document","addEventListener","e","target","matches","slotId","newVersion","methodname","args","slotid","newversion","setQuestionVersion","dataset","parseInt","value","then","location","reload","catch","Notification","exception"],"mappings":";;;;;;;;4JA6CMA,uBAAyB,KAC3BC,SAASC,iBAAiB,UAAUC,QAC3BA,EAAEC,OAAOC,QAAQ,6DAbH,EAACC,OAAQC,cAAe,cAAU,CAAC,CAC1DC,WAAY,gCACZC,KAAM,CACFC,OAAQJ,OACRK,WAAYJ,eAEhB,GAcIK,CAHeT,EAAEC,OAAOS,QAAQP,OACbQ,SAASX,EAAEC,OAAOW,QAGhCC,MAAK,KACFC,SAASC,YAGZC,MAAMC,sBAAaC,6BAUZ,KAKhBrB"}