{"version":3,"file":"repository.min.js","sources":["../src/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Forum repository class to encapsulate all of the AJAX requests that subscribe or unsubscribe\r\n * can be sent for forum.\r\n *\r\n * @module     mod_forum/repository\r\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['core/ajax'], function(Ajax) {\r\n    /**\r\n     * Set the subscription state for a discussion in a forum.\r\n     *\r\n     * @param {number} forumId ID of the forum the discussion belongs to\r\n     * @param {number} discussionId ID of the discussion with the subscription state\r\n     * @param {boolean} targetState Set the subscribed state. True == subscribed; false == unsubscribed.\r\n     * @return {object} jQuery promise\r\n     */\r\n    var setDiscussionSubscriptionState = function(forumId, discussionId, targetState) {\r\n        var request = {\r\n            methodname: 'mod_forum_set_subscription_state',\r\n            args: {\r\n                forumid: forumId,\r\n                discussionid: discussionId,\r\n                targetstate: targetState\r\n            }\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    var addDiscussionPost = function(postid, subject, message, messageformat, isprivatereply, topreferredformat) {\r\n        var request = {\r\n            methodname: 'mod_forum_add_discussion_post',\r\n            args: {\r\n                postid: postid,\r\n                message: message,\r\n                messageformat: messageformat,\r\n                subject: subject,\r\n                options: [{\r\n                    name: \"private\",\r\n                    value: isprivatereply,\r\n                }, {\r\n                    name: \"topreferredformat\",\r\n                    value: topreferredformat,\r\n                }]\r\n            }\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Set the favourite state for a discussion in a forum.\r\n     *\r\n     * @param {number} forumId ID of the forum the discussion belongs to\r\n     * @param {number} discussionId ID of the discussion with the subscription state\r\n     * @param {null|date} targetState Set the favourite state. True == favourited; false == unfavourited.\r\n     * @return {object} jQuery promise\r\n     */\r\n    var setFavouriteDiscussionState = function(forumId, discussionId, targetState) {\r\n        var request = {\r\n            methodname: 'mod_forum_toggle_favourite_state',\r\n            args: {\r\n                discussionid: discussionId,\r\n                targetstate: targetState\r\n            }\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    var setDiscussionLockState = function(forumId, discussionId, targetState) {\r\n        var request = {\r\n            methodname: 'mod_forum_set_lock_state',\r\n            args: {\r\n                forumid: forumId,\r\n                discussionid: discussionId,\r\n                targetstate: targetState}\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Set the pinned state for the discussion provided.\r\n     *\r\n     * @param {number} forumid\r\n     * @param {number} discussionid\r\n     * @param {boolean} targetstate\r\n     * @return {*|Promise}\r\n     */\r\n    var setPinDiscussionState = function(forumid, discussionid, targetstate) {\r\n        var request = {\r\n            methodname: 'mod_forum_set_pin_state',\r\n            args: {\r\n                discussionid: discussionid,\r\n                targetstate: targetstate\r\n            }\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Get the discussions for the user and cmid provided.\r\n     *\r\n     * @param {number} userid\r\n     * @param {number} cmid\r\n     * @param {string} sortby\r\n     * @param {string} sortdirection\r\n     * @return {*|Promise}\r\n     */\r\n    var getDiscussionByUserID = function(userid, cmid, sortby = 'modified', sortdirection = 'DESC') {\r\n        var request = {\r\n            methodname: 'mod_forum_get_discussion_posts_by_userid',\r\n            args: {\r\n                userid: userid,\r\n                cmid: cmid,\r\n                sortby: sortby,\r\n                sortdirection: sortdirection,\r\n            },\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    /**\r\n     * Get the posts for the discussion ID provided.\r\n     *\r\n     * @param {number} discussionId\r\n     * @param {String} sortby\r\n     * @param {String} sortdirection\r\n     * @return {*|Promise}\r\n     */\r\n    var getDiscussionPosts = function(discussionId, sortby = 'created', sortdirection = 'ASC') {\r\n        var request = {\r\n            methodname: 'mod_forum_get_discussion_posts',\r\n            args: {\r\n                discussionid: discussionId,\r\n                sortby: sortby,\r\n                sortdirection: sortdirection,\r\n            },\r\n        };\r\n        return Ajax.call([request])[0];\r\n    };\r\n\r\n    return {\r\n        setDiscussionSubscriptionState: setDiscussionSubscriptionState,\r\n        addDiscussionPost: addDiscussionPost,\r\n        setDiscussionLockState: setDiscussionLockState,\r\n        setFavouriteDiscussionState: setFavouriteDiscussionState,\r\n        setPinDiscussionState: setPinDiscussionState,\r\n        getDiscussionByUserID: getDiscussionByUserID,\r\n        getDiscussionPosts: getDiscussionPosts,\r\n    };\r\n});\r\n"],"names":["define","Ajax","setDiscussionSubscriptionState","forumId","discussionId","targetState","request","methodname","args","forumid","discussionid","targetstate","call","addDiscussionPost","postid","subject","message","messageformat","isprivatereply","topreferredformat","options","name","value","setDiscussionLockState","setFavouriteDiscussionState","setPinDiscussionState","getDiscussionByUserID","userid","cmid","sortby","sortdirection","getDiscussionPosts"],"mappings":";;;;;;;;AAuBAA,8BAAO,CAAC,cAAc,SAASC,YAoIpB,CACHC,+BA5HiC,SAASC,QAASC,aAAcC,iBAC7DC,QAAU,CACVC,WAAY,mCACZC,KAAM,CACFC,QAASN,QACTO,aAAcN,aACdO,YAAaN,qBAGdJ,KAAKW,KAAK,CAACN,UAAU,IAoH5BO,kBAjHoB,SAASC,OAAQC,QAASC,QAASC,cAAeC,eAAgBC,uBAClFb,QAAU,CACVC,WAAY,gCACZC,KAAM,CACFM,OAAQA,OACRE,QAASA,QACTC,cAAeA,cACfF,QAASA,QACTK,QAAS,CAAC,CACNC,KAAM,UACNC,MAAOJ,gBACR,CACCG,KAAM,oBACNC,MAAOH,6BAIZlB,KAAKW,KAAK,CAACN,UAAU,IAiG5BiB,uBA3EyB,SAASpB,QAASC,aAAcC,iBACrDC,QAAU,CACVC,WAAY,2BACZC,KAAM,CACFC,QAASN,QACTO,aAAcN,aACdO,YAAaN,qBAEdJ,KAAKW,KAAK,CAACN,UAAU,IAoE5BkB,4BAvF8B,SAASrB,QAASC,aAAcC,iBAC1DC,QAAU,CACVC,WAAY,mCACZC,KAAM,CACFE,aAAcN,aACdO,YAAaN,qBAGdJ,KAAKW,KAAK,CAACN,UAAU,IAgF5BmB,sBA1DwB,SAAShB,QAASC,aAAcC,iBACpDL,QAAU,CACVC,WAAY,0BACZC,KAAM,CACFE,aAAcA,aACdC,YAAaA,qBAGdV,KAAKW,KAAK,CAACN,UAAU,IAmD5BoB,sBAvCwB,SAASC,OAAQC,UAAMC,8DAAS,WAAYC,qEAAgB,WAChFxB,QAAU,CACVC,WAAY,2CACZC,KAAM,CACFmB,OAAQA,OACRC,KAAMA,KACNC,OAAQA,OACRC,cAAeA,uBAGhB7B,KAAKW,KAAK,CAACN,UAAU,IA8B5ByB,mBAnBqB,SAAS3B,kBAAcyB,8DAAS,UAAWC,qEAAgB,UAC5ExB,QAAU,CACVC,WAAY,iCACZC,KAAM,CACFE,aAAcN,aACdyB,OAAQA,OACRC,cAAeA,uBAGhB7B,KAAKW,KAAK,CAACN,UAAU"}