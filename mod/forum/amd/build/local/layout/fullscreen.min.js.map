{"version":3,"file":"fullscreen.min.js","sources":["../../../src/local/layout/fullscreen.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Full screen window layout.\r\n *\r\n * @module mod_forum/local/layout/fullscreen\r\n * @copyright  2019 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {addIconToContainer} from 'core/loadingicon';\r\nimport {addToastRegion} from 'core/toast';\r\nimport * as FocusLockManager from 'core/local/aria/focuslock';\r\n\r\n/**\r\n * Get the composed layout.\r\n *\r\n * @method\r\n * @param {string} templateName\r\n * @param {object} context\r\n * @returns {LayoutHelper}\r\n */\r\n\r\nexport const createLayout = ({\r\n    fullscreen = true,\r\n    showLoader = false,\r\n    focusOnClose = null,\r\n} = {}) => {\r\n    const container = document.createElement('div');\r\n    document.body.append(container);\r\n    container.classList.add('layout');\r\n    container.classList.add('fullscreen');\r\n    container.setAttribute('role', 'application');\r\n    addToastRegion(container);\r\n\r\n    // Lock scrolling on the document body.\r\n    lockBodyScroll();\r\n\r\n    // Lock tab control.\r\n    FocusLockManager.trapFocus(container);\r\n\r\n    const helpers = getLayoutHelpers(container, FocusLockManager, focusOnClose);\r\n\r\n    if (showLoader) {\r\n        helpers.showLoadingIcon();\r\n    }\r\n\r\n    if (fullscreen) {\r\n        helpers.requestFullscreen();\r\n    }\r\n\r\n    return helpers;\r\n};\r\n\r\n/**\r\n * LayoutHelper A helper object containing functions for managing the current fullscreen layout\r\n *\r\n * @typedef {object}\r\n * @property {Function} close A function to close the fullscreen layout\r\n * @property {Function} toggleFullscreen A function to toggle the fullscreen from active to disabled and back\r\n * @property {Function} requestFullscreen Make a request to the browser to make the window full screen.\r\n * Note: This must be called in response to a direct user action\r\n * @property {Function} exitFullscreen Exit the fullscreen mode\r\n * @property {Function} getContainer Get the container of the fullscreen layout\r\n * @property {Function} setContent Set the content of the fullscreen layout\r\n * @property {Function} showLoadingIcon Display the loading icon\r\n * @property {Function} hideLoadingIcon Hide the loading icon\r\n */\r\n\r\n/**\r\n * Get the layout helpers.\r\n *\r\n * @method\r\n * @private\r\n * @param {HTMLElement} layoutNode\r\n * @param {FocusLockManager} FocusLockManager\r\n * @param {Boolean} focusOnClose\r\n * @returns {LayoutHelper}\r\n */\r\nconst getLayoutHelpers = (layoutNode, FocusLockManager, focusOnClose) => {\r\n    const contentNode = document.createElement('div');\r\n    layoutNode.append(contentNode);\r\n\r\n    const loadingNode = document.createElement('div');\r\n    layoutNode.append(loadingNode);\r\n\r\n    /**\r\n     * Close and destroy the window container.\r\n     */\r\n    const close = () => {\r\n        exitFullscreen();\r\n        unlockBodyScroll();\r\n        FocusLockManager.untrapFocus();\r\n\r\n        layoutNode.remove();\r\n\r\n        if (focusOnClose) {\r\n            try {\r\n                focusOnClose.focus();\r\n            } catch (e) {\r\n                // eslint-disable-line\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Attempt to make the conatiner full screen.\r\n     */\r\n    const requestFullscreen = () => {\r\n        if (layoutNode.requestFullscreen) {\r\n            layoutNode.requestFullscreen();\r\n        } else if (layoutNode.msRequestFullscreen) {\r\n            layoutNode.msRequestFullscreen();\r\n        } else if (layoutNode.mozRequestFullscreen) {\r\n            layoutNode.mozRequestFullscreen();\r\n        } else if (layoutNode.webkitRequestFullscreen) {\r\n            layoutNode.webkitRequestFullscreen();\r\n        } else {\r\n            // Not supported.\r\n            // Hack to make this act like full-screen as much as possible.\r\n            layoutNode.setTop(0);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Exit full screen but do not close the container fully.\r\n     */\r\n    const exitFullscreen = () => {\r\n        if (document.exitRequestFullScreen) {\r\n            if (document.fullScreenElement !== layoutNode) {\r\n                return;\r\n            }\r\n            document.exitRequestFullScreen();\r\n        } else if (document.msExitFullscreen) {\r\n            if (document.msFullscreenElement !== layoutNode) {\r\n                return;\r\n            }\r\n            document.msExitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n            if (document.mozFullScreenElement !== layoutNode) {\r\n                return;\r\n            }\r\n            document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n            if (document.webkitFullscreenElement !== layoutNode) {\r\n                return;\r\n            }\r\n            document.webkitExitFullscreen();\r\n        }\r\n    };\r\n\r\n    const toggleFullscreen = () => {\r\n        if (document.exitRequestFullScreen) {\r\n            if (document.fullScreenElement === layoutNode) {\r\n                exitFullscreen();\r\n            } else {\r\n                requestFullscreen();\r\n            }\r\n        } else if (document.msExitFullscreen) {\r\n            if (document.msFullscreenElement === layoutNode) {\r\n                exitFullscreen();\r\n            } else {\r\n                requestFullscreen();\r\n            }\r\n        } else if (document.mozCancelFullScreen) {\r\n            if (document.mozFullScreenElement === layoutNode) {\r\n                exitFullscreen();\r\n            } else {\r\n                requestFullscreen();\r\n            }\r\n        } else if (document.webkitExitFullscreen) {\r\n            if (document.webkitFullscreenElement === layoutNode) {\r\n                exitFullscreen();\r\n            } else {\r\n                requestFullscreen();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Get the Node which is fullscreen.\r\n     *\r\n     * @return {Element}\r\n     */\r\n    const getContainer = () => {\r\n        return contentNode;\r\n    };\r\n\r\n    const setContent = (content) => {\r\n        hideLoadingIcon();\r\n\r\n        // Note: It would be better to use replaceWith, but this is not compatible with IE.\r\n        let child = contentNode.lastElementChild;\r\n        while (child) {\r\n            contentNode.removeChild(child);\r\n            child = contentNode.lastElementChild;\r\n        }\r\n        contentNode.append(content);\r\n    };\r\n\r\n    const showLoadingIcon = () => {\r\n        addIconToContainer(loadingNode);\r\n    };\r\n\r\n    const hideLoadingIcon = () => {\r\n        // Hide the loading container.\r\n        let child = loadingNode.lastElementChild;\r\n        while (child) {\r\n            loadingNode.removeChild(child);\r\n            child = loadingNode.lastElementChild;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @return {Object}\r\n     */\r\n    return {\r\n        close,\r\n\r\n        toggleFullscreen,\r\n        requestFullscreen,\r\n        exitFullscreen,\r\n\r\n        getContainer,\r\n        setContent,\r\n\r\n        showLoadingIcon,\r\n        hideLoadingIcon,\r\n    };\r\n};\r\n\r\nconst lockBodyScroll = () => {\r\n    document.querySelector('body').classList.add('overflow-hidden');\r\n};\r\n\r\nconst unlockBodyScroll = () => {\r\n    document.querySelector('body').classList.remove('overflow-hidden');\r\n};\r\n"],"names":["fullscreen","showLoader","focusOnClose","container","document","createElement","body","append","classList","add","setAttribute","lockBodyScroll","FocusLockManager","trapFocus","helpers","getLayoutHelpers","showLoadingIcon","requestFullscreen","layoutNode","contentNode","loadingNode","msRequestFullscreen","mozRequestFullscreen","webkitRequestFullscreen","setTop","exitFullscreen","exitRequestFullScreen","fullScreenElement","msExitFullscreen","msFullscreenElement","mozCancelFullScreen","mozFullScreenElement","webkitExitFullscreen","webkitFullscreenElement","hideLoadingIcon","child","lastElementChild","removeChild","close","unlockBodyScroll","untrapFocus","remove","focus","e","toggleFullscreen","getContainer","setContent","content","querySelector"],"mappings":";;;;;;;8CAoC4B,eAACA,WACzBA,YAAa,EADYC,WAEzBA,YAAa,EAFYC,aAGzBA,aAAe,6DACf,SACMC,UAAYC,SAASC,cAAc,OACzCD,SAASE,KAAKC,OAAOJ,WACrBA,UAAUK,UAAUC,IAAI,UACxBN,UAAUK,UAAUC,IAAI,cACxBN,UAAUO,aAAa,OAAQ,yCAChBP,WAGfQ,iBAGAC,iBAAiBC,UAAUV,iBAErBW,QAAUC,iBAAiBZ,UAAWS,iBAAkBV,qBAE1DD,YACAa,QAAQE,kBAGRhB,YACAc,QAAQG,oBAGLH,eA4BLC,iBAAmB,CAACG,WAAYN,iBAAkBV,sBAC9CiB,YAAcf,SAASC,cAAc,OAC3Ca,WAAWX,OAAOY,mBAEZC,YAAchB,SAASC,cAAc,OAC3Ca,WAAWX,OAAOa,mBAwBZH,kBAAoB,KAClBC,WAAWD,kBACXC,WAAWD,oBACJC,WAAWG,oBAClBH,WAAWG,sBACJH,WAAWI,qBAClBJ,WAAWI,uBACJJ,WAAWK,wBAClBL,WAAWK,0BAIXL,WAAWM,OAAO,IAOpBC,eAAiB,QACfrB,SAASsB,sBAAuB,IAC5BtB,SAASuB,oBAAsBT,kBAGnCd,SAASsB,6BACN,GAAItB,SAASwB,iBAAkB,IAC9BxB,SAASyB,sBAAwBX,kBAGrCd,SAASwB,wBACN,GAAIxB,SAAS0B,oBAAqB,IACjC1B,SAAS2B,uBAAyBb,kBAGtCd,SAAS0B,2BACN,GAAI1B,SAAS4B,qBAAsB,IAClC5B,SAAS6B,0BAA4Bf,kBAGzCd,SAAS4B,yBAyDXE,gBAAkB,SAEhBC,MAAQf,YAAYgB,sBACjBD,OACHf,YAAYiB,YAAYF,OACxBA,MAAQf,YAAYgB,wBAOrB,CACHE,MAhIU,QACVb,iBACAc,mBACA3B,iBAAiB4B,cAEjBtB,WAAWuB,SAEPvC,iBAEIA,aAAawC,QACf,MAAOC,MAwHbC,iBApEqB,KACjBxC,SAASsB,sBACLtB,SAASuB,oBAAsBT,WAC/BO,iBAEAR,oBAEGb,SAASwB,iBACZxB,SAASyB,sBAAwBX,WACjCO,iBAEAR,oBAEGb,SAAS0B,oBACZ1B,SAAS2B,uBAAyBb,WAClCO,iBAEAR,oBAEGb,SAAS4B,uBACZ5B,SAAS6B,0BAA4Bf,WACrCO,iBAEAR,sBA8CRA,kBAAAA,kBACAQ,eAAAA,eAEAoB,aAvCiB,IACV1B,YAuCP2B,WApCgBC,UAChBb,sBAGIC,MAAQhB,YAAYiB,sBACjBD,OACHhB,YAAYkB,YAAYF,OACxBA,MAAQhB,YAAYiB,iBAExBjB,YAAYZ,OAAOwC,UA6BnB/B,gBA1BoB,yCACDI,cA0BnBc,gBAAAA,kBAIFvB,eAAiB,KACnBP,SAAS4C,cAAc,QAAQxC,UAAUC,IAAI,oBAG3C8B,iBAAmB,KACrBnC,SAAS4C,cAAc,QAAQxC,UAAUiC,OAAO"}