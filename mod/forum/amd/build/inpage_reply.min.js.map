{"version":3,"file":"inpage_reply.min.js","sources":["../src/inpage_reply.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module handles the in page replying to forum posts.\r\n *\r\n * @module     mod_forum/inpage_reply\r\n * @copyright  2019 Peter Dias\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/templates',\r\n    'core/notification',\r\n    'mod_forum/repository',\r\n    'mod_forum/selectors',\r\n    'core_form/changechecker',\r\n], function(\r\n    $,\r\n    Templates,\r\n    Notification,\r\n    Repository,\r\n    Selectors,\r\n    FormChangeChecker\r\n) {\r\n\r\n    var DISPLAYCONSTANTS = {\r\n        NESTED_V2: 4,\r\n        THREADED: 2,\r\n        NESTED: 3,\r\n        FLAT_OLDEST_FIRST: 1,\r\n        FLAT_NEWEST_FIRST: -1\r\n    };\r\n\r\n    var EVENTS = {\r\n        POST_CREATED: 'mod_forum-post-created'\r\n    };\r\n\r\n     /**\r\n      * Moodle formats taken from the FORMAT_* constants declared in lib/weblib.php.\r\n      * @type {Object}\r\n      */\r\n    var CONTENT_FORMATS = {\r\n        MOODLE: 0\r\n    };\r\n    /**\r\n     * Show the loading icon for the submit button.\r\n     *\r\n     * @param {Object} button The submit button element\r\n     */\r\n    var showSubmitButtonLoadingIcon = function(button) {\r\n        var textContainer = button.find(Selectors.post.inpageSubmitBtnText);\r\n        var loadingIconContainer = button.find(Selectors.post.loadingIconContainer);\r\n        var width = button.outerWidth();\r\n        // Fix the width so that the button size doesn't change when we show the loading icon.\r\n        button.css('width', width);\r\n        textContainer.addClass('hidden');\r\n        loadingIconContainer.removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Hide the loading icon for the submit button.\r\n     *\r\n     * @param {Object} button The submit button element\r\n     */\r\n    var hideSubmitButtonLoadingIcon = function(button) {\r\n        var textContainer = button.find(Selectors.post.inpageSubmitBtnText);\r\n        var loadingIconContainer = button.find(Selectors.post.loadingIconContainer);\r\n        // Reset the width back to it's default.\r\n        button.css('width', '');\r\n        textContainer.removeClass('hidden');\r\n        loadingIconContainer.addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Register the event listeners for the submit button of the in page reply.\r\n     *\r\n     * @param {Object} root The discussion container element.\r\n     */\r\n    var registerEventListeners = function(root) {\r\n        root.on('click', Selectors.post.inpageSubmitBtn, function(e) {\r\n            e.preventDefault();\r\n            var submitButton = $(e.currentTarget);\r\n            var allButtons = submitButton.parent().find(Selectors.post.inpageReplyButton);\r\n            var form = submitButton.parents(Selectors.post.inpageReplyForm).get(0);\r\n            var message = form.elements.post.value.trim();\r\n            // For now, we consider the inline reply post written using the FORMAT_MOODLE (because a textarea is displayed).\r\n            // In the future, other formats should be supported, letting users to use their preferred editor and format.\r\n            var messageformat = CONTENT_FORMATS.MOODLE;\r\n            // The message post will be converted from messageformat to FORMAT_HTML.\r\n            var topreferredformat = true;\r\n            var postid = form.elements.reply.value;\r\n            var subject = form.elements.subject.value;\r\n            var currentRoot = submitButton.closest(Selectors.post.post);\r\n            var isprivatereply = form.elements.privatereply != undefined ? form.elements.privatereply.checked : false;\r\n            var modeSelector = root.find(Selectors.post.modeSelect);\r\n            var mode = modeSelector.length ? parseInt(modeSelector.get(0).value) : null;\r\n            var newid;\r\n\r\n            if (message.length) {\r\n                showSubmitButtonLoadingIcon(submitButton);\r\n                allButtons.prop('disabled', true);\r\n\r\n                Repository.addDiscussionPost(postid, subject, message, messageformat, isprivatereply, topreferredformat)\r\n                    .then(function(context) {\r\n                        var message = context.messages.reduce(function(carry, message) {\r\n                            if (message.type == 'success') {\r\n                                carry += '<p>' + message.message + '</p>';\r\n                            }\r\n                            return carry;\r\n                        }, '');\r\n                        Notification.addNotification({\r\n                            message: message,\r\n                            type: \"success\"\r\n                        });\r\n\r\n                        return context;\r\n                    })\r\n                    .then(function(context) {\r\n                        form.reset();\r\n                        var post = context.post;\r\n                        newid = post.id;\r\n\r\n                        switch (mode) {\r\n                            case DISPLAYCONSTANTS.NESTED_V2:\r\n                                var capabilities = post.capabilities;\r\n                                var currentAuthorName = currentRoot.children()\r\n                                                                   .not(Selectors.post.repliesContainer)\r\n                                                                   .find(Selectors.post.authorName)\r\n                                                                   .text();\r\n                                post.parentauthorname = currentAuthorName;\r\n                                post.showactionmenu = capabilities.view ||\r\n                                                      capabilities.controlreadstatus ||\r\n                                                      capabilities.edit ||\r\n                                                      capabilities.split ||\r\n                                                      capabilities.delete ||\r\n                                                      capabilities.export ||\r\n                                                      post.urls.viewparent;\r\n                                return Templates.render('mod_forum/forum_discussion_nested_v2_post_reply', post);\r\n                            case DISPLAYCONSTANTS.THREADED:\r\n                                return Templates.render('mod_forum/forum_discussion_threaded_post', post);\r\n                            case DISPLAYCONSTANTS.NESTED:\r\n                                return Templates.render('mod_forum/forum_discussion_nested_post', post);\r\n                            default:\r\n                                return Templates.render('mod_forum/forum_discussion_post', post);\r\n                        }\r\n                    })\r\n                    .then(function(html, js) {\r\n                        var repliesnode = currentRoot.find(Selectors.post.repliesContainer).first();\r\n\r\n                        if (mode == DISPLAYCONSTANTS.FLAT_NEWEST_FIRST) {\r\n                            return Templates.prependNodeContents(repliesnode, html, js);\r\n                        } else {\r\n                            return Templates.appendNodeContents(repliesnode, html, js);\r\n                        }\r\n                    })\r\n                    .then(function() {\r\n                        submitButton.trigger(EVENTS.POST_CREATED, newid);\r\n                        hideSubmitButtonLoadingIcon(submitButton);\r\n                        allButtons.prop('disabled', false);\r\n\r\n                        // Tell formchangechecker we submitted the form.\r\n                        FormChangeChecker.resetFormDirtyState(submitButton[0]);\r\n\r\n                        return currentRoot.find(Selectors.post.inpageReplyContent).hide();\r\n                    })\r\n                    .then(function() {\r\n                        location.href = \"#p\" + newid;\r\n\r\n                        // Reload the page, say if threshold is being set by user those would get reflected through the templates.\r\n                        location.reload();\r\n                    })\r\n                    .catch(function(error) {\r\n                        hideSubmitButtonLoadingIcon(submitButton);\r\n                        allButtons.prop('disabled', false);\r\n                        return Notification.exception(error);\r\n                    });\r\n            }\r\n        });\r\n    };\r\n\r\n    return {\r\n        init: function(root) {\r\n            registerEventListeners(root);\r\n        },\r\n        CONTENT_FORMATS: CONTENT_FORMATS,\r\n        EVENTS: EVENTS\r\n    };\r\n});\r\n"],"names":["define","$","Templates","Notification","Repository","Selectors","FormChangeChecker","DISPLAYCONSTANTS","EVENTS","POST_CREATED","CONTENT_FORMATS","MOODLE","hideSubmitButtonLoadingIcon","button","textContainer","find","post","inpageSubmitBtnText","loadingIconContainer","css","removeClass","addClass","registerEventListeners","root","on","inpageSubmitBtn","e","preventDefault","newid","width","submitButton","currentTarget","allButtons","parent","inpageReplyButton","form","parents","inpageReplyForm","get","message","elements","value","trim","messageformat","postid","reply","subject","currentRoot","closest","isprivatereply","undefined","privatereply","checked","modeSelector","modeSelect","mode","length","parseInt","outerWidth","prop","addDiscussionPost","then","context","messages","reduce","carry","type","addNotification","reset","id","capabilities","currentAuthorName","children","not","repliesContainer","authorName","text","parentauthorname","showactionmenu","view","controlreadstatus","edit","split","delete","export","urls","viewparent","render","html","js","repliesnode","first","prependNodeContents","appendNodeContents","trigger","resetFormDirtyState","inpageReplyContent","hide","location","href","reload","catch","error","exception","init"],"mappings":"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"}