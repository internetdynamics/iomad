{"version":3,"file":"discussion_nested_v2.min.js","sources":["../src/discussion_nested_v2.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module for viewing a discussion in nested v2 view.\r\n *\r\n * @module mod_forum/discussion_nested_v2\r\n * @copyright  2019 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport $ from 'jquery';\r\nimport AutoRows from 'core/auto_rows';\r\nimport CustomEvents from 'core/custom_interaction_events';\r\nimport * as FormChangeChecker from 'core_form/changechecker';\r\nimport Notification from 'core/notification';\r\nimport Templates from 'core/templates';\r\nimport Discussion from 'mod_forum/discussion';\r\nimport InPageReply from 'mod_forum/inpage_reply';\r\nimport LockToggle from 'mod_forum/lock_toggle';\r\nimport FavouriteToggle from 'mod_forum/favourite_toggle';\r\nimport Pin from 'mod_forum/pin_toggle';\r\nimport Selectors from 'mod_forum/selectors';\r\nimport Subscribe from 'mod_forum/subscription_toggle';\r\n\r\nconst ANIMATION_DURATION = 150;\r\n\r\n/**\r\n * Get the closest post container element from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContainer = (element) => {\r\n    return element.closest(Selectors.post.post);\r\n};\r\n\r\n/**\r\n * Get the closest post container element from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @param {Number} id Id of the post to find.\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContainerById = (element, id) => {\r\n    return element.find(`${Selectors.post.post}[data-post-id=${id}]`);\r\n};\r\n\r\n/**\r\n * Get the parent post container elements from the given element.\r\n *\r\n * @param {Object} element jQuery element to search from\r\n * @return {Object} jQuery element\r\n */\r\nconst getParentPostContainers = (element) => {\r\n    return element.parents(Selectors.post.post);\r\n};\r\n\r\n/**\r\n * Get the post content container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getPostContentContainer = (postContainer) => {\r\n    return postContainer.children().not(Selectors.post.repliesContainer).find(Selectors.post.forumCoreContent);\r\n};\r\n\r\n/**\r\n * Get the in page reply container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyContainer = (postContainer) => {\r\n    return postContainer.children().filter(Selectors.post.inpageReplyContainer);\r\n};\r\n\r\n/**\r\n * Get the in page reply form element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyForm = (postContainer) => {\r\n    return getInPageReplyContainer(postContainer).find(Selectors.post.inpageReplyContent);\r\n};\r\n\r\n/**\r\n * Get the in page reply create (reply) button element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getInPageReplyCreateButton = (postContainer) => {\r\n    return getPostContentContainer(postContainer).find(Selectors.post.inpageReplyCreateButton);\r\n};\r\n\r\n/**\r\n * Get the replies visibility toggle container (show/hide replies button container) element\r\n * from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getRepliesVisibilityToggleContainer = (postContainer) => {\r\n    return postContainer.children(Selectors.post.repliesVisibilityToggleContainer);\r\n};\r\n\r\n/**\r\n * Get the replies container element from the post container element.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery element\r\n */\r\nconst getRepliesContainer = (postContainer) => {\r\n    return postContainer.children(Selectors.post.repliesContainer);\r\n};\r\n\r\n/**\r\n * Check if the post has any replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Bool}\r\n */\r\nconst hasReplies = (postContainer) => {\r\n    return getRepliesContainer(postContainer).children().length > 0;\r\n};\r\n\r\n/**\r\n * Get the show replies button element from the replies visibility toggle container element.\r\n *\r\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\r\n * @return {Object} jQuery element\r\n */\r\nconst getShowRepliesButton = (replyVisibilityToggleContainer) => {\r\n    return replyVisibilityToggleContainer.find(Selectors.post.showReplies);\r\n};\r\n\r\n/**\r\n * Get the hide replies button element from the replies visibility toggle container element.\r\n *\r\n * @param {Object} replyVisibilityToggleContainer jQuery element for the toggle container\r\n * @return {Object} jQuery element\r\n */\r\nconst getHideRepliesButton = (replyVisibilityToggleContainer) => {\r\n    return replyVisibilityToggleContainer.find(Selectors.post.hideReplies);\r\n};\r\n\r\n/**\r\n * Check if the replies are visible.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Bool}\r\n */\r\nconst repliesVisible = (postContainer) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    return repliesContainer.is(':visible');\r\n};\r\n\r\n/**\r\n * Show the post replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\r\n */\r\nconst showReplies = (postContainer, postIdToSee = null) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\r\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\r\n\r\n    showButton.addClass('hidden');\r\n    hideButton.removeClass('hidden');\r\n\r\n    repliesContainer.slideDown({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false,\r\n        complete: () => {\r\n            if (postIdToSee) {\r\n                const postContainerToSee = getPostContainerById(repliesContainer, postIdToSee);\r\n                if (postContainerToSee.length) {\r\n                    postContainerToSee[0].scrollIntoView();\r\n                }\r\n            }\r\n        }\r\n    }).css('display', 'none').fadeIn(ANIMATION_DURATION);\r\n};\r\n\r\n/**\r\n * Hide the post replies.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n */\r\nconst hideReplies = (postContainer) => {\r\n    const repliesContainer = getRepliesContainer(postContainer);\r\n    const replyVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n    const showButton = getShowRepliesButton(replyVisibilityToggleContainer);\r\n    const hideButton = getHideRepliesButton(replyVisibilityToggleContainer);\r\n\r\n    showButton.removeClass('hidden');\r\n    hideButton.addClass('hidden');\r\n\r\n    repliesContainer.slideUp({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false\r\n    }).fadeOut(ANIMATION_DURATION);\r\n};\r\n\r\n/** Variable to hold the showInPageReplyForm function after it's built. */\r\nlet showInPageReplyForm = null;\r\n\r\n/**\r\n * Build the showInPageReplyForm function with the given additional template context.\r\n *\r\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template.\r\n * @return {Function}\r\n */\r\nconst buildShowInPageReplyFormFunction = (additionalTemplateContext) => {\r\n    /**\r\n     * Show the in page reply form in the given in page reply container. The form\r\n     * display will be animated.\r\n     *\r\n     * @param {Object} postContainer jQuery element for the post container\r\n     */\r\n    return async(postContainer) => {\r\n\r\n        const inPageReplyContainer = getInPageReplyContainer(postContainer);\r\n        const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n        const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\r\n\r\n        if (!hasInPageReplyForm(inPageReplyContainer)) {\r\n            try {\r\n                const html = await renderInPageReplyTemplate(additionalTemplateContext, inPageReplyCreateButton, postContainer);\r\n                Templates.appendNodeContents(inPageReplyContainer, html, '');\r\n            } catch (e) {\r\n                Notification.exception(e);\r\n            }\r\n\r\n            FormChangeChecker.watchForm(postContainer[0].querySelector('form'));\r\n        }\r\n\r\n        inPageReplyCreateButton.fadeOut(ANIMATION_DURATION, () => {\r\n            const inPageReplyForm = getInPageReplyForm(postContainer);\r\n            inPageReplyForm.slideDown({\r\n                duration: ANIMATION_DURATION,\r\n                queue: false,\r\n                complete: () => {\r\n                    inPageReplyForm.find('textarea').focus();\r\n                }\r\n            }).css('display', 'none').fadeIn(ANIMATION_DURATION);\r\n\r\n            if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\r\n                repliesVisibilityToggleContainer.fadeIn(ANIMATION_DURATION);\r\n                hideReplies(postContainer);\r\n            }\r\n        });\r\n    };\r\n};\r\n\r\n/**\r\n * Hide the in page reply form in the given in page reply container. The form\r\n * display will be animated.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @param {Number|null} postIdToSee Id of the post to scroll into view (if any)\r\n */\r\nconst hideInPageReplyForm = (postContainer, postIdToSee = null) => {\r\n    const inPageReplyForm = getInPageReplyForm(postContainer);\r\n    const inPageReplyCreateButton = getInPageReplyCreateButton(postContainer);\r\n    const repliesVisibilityToggleContainer = getRepliesVisibilityToggleContainer(postContainer);\r\n\r\n    if (repliesVisibilityToggleContainer.length && hasReplies(postContainer)) {\r\n        repliesVisibilityToggleContainer.fadeOut(ANIMATION_DURATION);\r\n        if (!repliesVisible(postContainer)) {\r\n            showReplies(postContainer, postIdToSee);\r\n        }\r\n    }\r\n\r\n    inPageReplyForm.slideUp({\r\n        duration: ANIMATION_DURATION,\r\n        queue: false,\r\n        complete: () => {\r\n            inPageReplyCreateButton.fadeIn(ANIMATION_DURATION);\r\n        }\r\n    }).fadeOut(200);\r\n};\r\n\r\n/**\r\n * Check if the in page reply container contains the in page reply form.\r\n *\r\n * @param {Object} inPageReplyContainer jQuery element for the in page reply container\r\n * @return {Bool}\r\n */\r\nconst hasInPageReplyForm = (inPageReplyContainer) => {\r\n    return inPageReplyContainer.find(Selectors.post.inpageReplyContent).length > 0;\r\n};\r\n\r\n/**\r\n * Render the template to generate the in page reply form HTML.\r\n *\r\n * @param {Object} additionalTemplateContext Additional render context for the in page reply template\r\n * @param {Object} button jQuery element for the reply button that was clicked\r\n * @param {Object} postContainer jQuery element for the post container\r\n * @return {Object} jQuery promise\r\n */\r\nconst renderInPageReplyTemplate = (additionalTemplateContext, button, postContainer) => {\r\n    const postContentContainer = getPostContentContainer(postContainer);\r\n    const currentSubject = postContentContainer.find(Selectors.post.forumSubject).text();\r\n    const currentAuthorName = postContentContainer.find(Selectors.post.authorName).text();\r\n    const context = {\r\n        postid: postContainer.data('post-id'),\r\n        \"reply_url\": button.attr('data-href'),\r\n        sesskey: M.cfg.sesskey,\r\n        parentsubject: currentSubject,\r\n        parentauthorname: currentAuthorName,\r\n        canreplyprivately: button.data('can-reply-privately'),\r\n        postformat: InPageReply.CONTENT_FORMATS.MOODLE,\r\n        ...additionalTemplateContext\r\n    };\r\n\r\n    return Templates.render('mod_forum/inpage_reply_v2', context);\r\n};\r\n\r\n/**\r\n * Increment the total reply count in the show/hide replies buttons for the post.\r\n *\r\n * @param {Object} postContainer jQuery element for the post container\r\n */\r\nconst incrementTotalReplyCount = (postContainer) => {\r\n    getRepliesVisibilityToggleContainer(postContainer).find(Selectors.post.replyCount).each((index, element) => {\r\n        const currentCount = parseInt(element.innerText, 10);\r\n        element.innerText = currentCount + 1;\r\n    });\r\n};\r\n\r\n/**\r\n * Create all of the event listeners for the discussion.\r\n *\r\n * @param {Object} root jQuery element for the discussion container\r\n */\r\nconst registerEventListeners = (root) => {\r\n    CustomEvents.define(root, [CustomEvents.events.activate]);\r\n    // Auto expanding text area for in page reply.\r\n    AutoRows.init(root);\r\n\r\n    // Reply button is clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCreateButton, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.currentTarget));\r\n        showInPageReplyForm(postContainer);\r\n    });\r\n\r\n    // Cancel in page reply button.\r\n    root.on(CustomEvents.events.activate, Selectors.post.inpageReplyCancelButton, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.currentTarget));\r\n        hideInPageReplyForm(postContainer);\r\n    });\r\n\r\n    // Show replies button clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.showReplies, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.target));\r\n        showReplies(postContainer);\r\n    });\r\n\r\n    // Hide replies button clicked.\r\n    root.on(CustomEvents.events.activate, Selectors.post.hideReplies, (e, data) => {\r\n        data.originalEvent.preventDefault();\r\n        const postContainer = getPostContainer($(e.target));\r\n        hideReplies(postContainer);\r\n    });\r\n\r\n    // Post created with in page reply.\r\n    root.on(InPageReply.EVENTS.POST_CREATED, Selectors.post.inpageSubmitBtn, (e, newPostId) => {\r\n        const currentTarget = $(e.currentTarget);\r\n        const postContainer = getPostContainer(currentTarget);\r\n        const postContainers = getParentPostContainers(currentTarget);\r\n        hideInPageReplyForm(postContainer, newPostId);\r\n\r\n        postContainers.each((index, container) => {\r\n            incrementTotalReplyCount($(container));\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Initialise the javascript for the discussion in nested v2 display mode.\r\n *\r\n * @param {Object} root jQuery element for the discussion container\r\n * @param {Object} context Additional render context for the in page reply template\r\n */\r\nexport const init = (root, context) => {\r\n    // Build the showInPageReplyForm function with the additional render context.\r\n    showInPageReplyForm = buildShowInPageReplyFormFunction(context);\r\n    // Add discussion event listeners.\r\n    registerEventListeners(root);\r\n    // Initialise default discussion javascript (keyboard nav etc).\r\n    Discussion.init(root);\r\n    // Add in page reply javascript.\r\n    InPageReply.init(root);\r\n\r\n    // Initialise the settings menu javascript.\r\n    const discussionToolsContainer = root.find(Selectors.discussion.tools);\r\n    LockToggle.init(discussionToolsContainer, false);\r\n    FavouriteToggle.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.userstate.favourited ? 0 : 1;\r\n        return toggleElement.data('targetstate', newTargetState);\r\n    });\r\n    Pin.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.pinned ? 0 : 1;\r\n        return toggleElement.data('targetstate', newTargetState);\r\n    });\r\n    Subscribe.init(discussionToolsContainer, false, (toggleElement, response) => {\r\n        const newTargetState = response.userstate.subscribed ? 0 : 1;\r\n        toggleElement.data('targetstate', newTargetState);\r\n    });\r\n};\r\n"],"names":["getPostContainer","element","closest","Selectors","post","getPostContainerById","id","find","getPostContentContainer","postContainer","children","not","repliesContainer","forumCoreContent","getInPageReplyContainer","filter","inpageReplyContainer","getInPageReplyForm","inpageReplyContent","getInPageReplyCreateButton","inpageReplyCreateButton","getRepliesVisibilityToggleContainer","repliesVisibilityToggleContainer","getRepliesContainer","hasReplies","length","getShowRepliesButton","replyVisibilityToggleContainer","showReplies","getHideRepliesButton","hideReplies","repliesVisible","is","postIdToSee","showButton","hideButton","addClass","removeClass","slideDown","duration","queue","complete","postContainerToSee","scrollIntoView","css","fadeIn","slideUp","fadeOut","showInPageReplyForm","hideInPageReplyForm","inPageReplyForm","inPageReplyCreateButton","hasInPageReplyForm","inPageReplyContainer","renderInPageReplyTemplate","additionalTemplateContext","button","postContentContainer","currentSubject","forumSubject","text","currentAuthorName","authorName","context","postid","data","attr","sesskey","M","cfg","parentsubject","parentauthorname","canreplyprivately","postformat","InPageReply","CONTENT_FORMATS","MOODLE","Templates","render","registerEventListeners","root","define","CustomEvents","events","activate","init","on","e","originalEvent","preventDefault","currentTarget","inpageReplyCancelButton","target","EVENTS","POST_CREATED","inpageSubmitBtn","newPostId","postContainers","parents","each","index","container","replyCount","currentCount","parseInt","innerText","incrementTotalReplyCount","async","html","appendNodeContents","exception","FormChangeChecker","watchForm","querySelector","focus","discussionToolsContainer","discussion","tools","toggleElement","response","newTargetState","userstate","favourited","pinned","subscribed"],"mappings":"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"}