{"version":3,"file":"gateways_modal.min.js","sources":["../src/gateways_modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module is responsible for PayPal content in the gateways modal.\r\n *\r\n * @module     paygw_paypal/gateways_modal\r\n * @copyright  2020 Shamim Rezaie <shamim@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Repository from './repository';\r\nimport Templates from 'core/templates';\r\nimport Truncate from 'core/truncate';\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\nimport {get_string as getString} from 'core/str';\r\n\r\n/**\r\n * Creates and shows a modal that contains a placeholder.\r\n *\r\n * @returns {Promise<Modal>}\r\n */\r\nconst showModalWithPlaceholder = async() => {\r\n    const modal = await ModalFactory.create({\r\n        body: await Templates.render('paygw_paypal/paypal_button_placeholder', {})\r\n    });\r\n    modal.show();\r\n    return modal;\r\n};\r\n\r\n/**\r\n * Process the payment.\r\n *\r\n * @param {string} component Name of the component that the itemId belongs to\r\n * @param {string} paymentArea The area of the component that the itemId belongs to\r\n * @param {number} itemId An internal identifier that is used by the component\r\n * @param {string} description Description of the payment\r\n * @returns {Promise<string>}\r\n */\r\nexport const process = (component, paymentArea, itemId, description) => {\r\n    return Promise.all([\r\n        showModalWithPlaceholder(),\r\n        Repository.getConfigForJs(component, paymentArea, itemId),\r\n    ])\r\n    .then(([modal, paypalConfig]) => {\r\n        modal.getRoot().on(ModalEvents.hidden, () => {\r\n            // Destroy when hidden.\r\n            modal.destroy();\r\n        });\r\n\r\n        return Promise.all([\r\n            modal,\r\n            paypalConfig,\r\n            switchSdk(paypalConfig.clientid, paypalConfig.currency),\r\n        ]);\r\n    })\r\n    .then(([modal, paypalConfig]) => {\r\n        // We have to clear the body. The render method in paypal.Buttons will render everything.\r\n        modal.setBody('');\r\n\r\n        return new Promise(resolve => {\r\n            window.paypal.Buttons({\r\n                // Set up the transaction.\r\n                createOrder: function(data, actions) {\r\n                    return actions.order.create({\r\n                        purchase_units: [{ // eslint-disable-line\r\n                            amount: {\r\n                                currency_code: paypalConfig.currency_code, // eslint-disable-line\r\n                                value: paypalConfig.cost,\r\n                            },\r\n                            description: Truncate.truncate(description, {length: 127, stripTags: true}),\r\n                        }],\r\n                        application_context: { // eslint-disable-line\r\n                            shipping_preference: 'NO_SHIPPING', // eslint-disable-line\r\n                            brand_name: Truncate.truncate(paypalConfig.brandname, {length: 127, stripTags: true}), // eslint-disable-line\r\n                        },\r\n                    });\r\n                },\r\n                // Finalise the transaction.\r\n                onApprove: function(data) {\r\n                    modal.getRoot().on(ModalEvents.outsideClick, (e) => {\r\n                        // Prevent closing the modal when clicking outside of it.\r\n                        e.preventDefault();\r\n                    });\r\n\r\n                    modal.setBody(getString('authorising', 'paygw_paypal'));\r\n\r\n                    Repository.markTransactionComplete(component, paymentArea, itemId, data.orderID)\r\n                    .then(res => {\r\n                        modal.hide();\r\n                        return res;\r\n                    })\r\n                    .then(resolve);\r\n                }\r\n            }).render(modal.getBody()[0]);\r\n        });\r\n    })\r\n    .then(res => {\r\n        if (res.success) {\r\n            return Promise.resolve(res.message);\r\n        }\r\n\r\n        return Promise.reject(res.message);\r\n    });\r\n};\r\n\r\n/**\r\n * Unloads the previously loaded PayPal JavaScript SDK, and loads a new one.\r\n *\r\n * @param {string} clientId PayPal client ID\r\n * @param {string} currency The currency\r\n * @returns {Promise}\r\n */\r\nconst switchSdk = (clientId, currency) => {\r\n    const sdkUrl = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=${currency}`;\r\n\r\n    // Check to see if this file has already been loaded. If so just go straight to the func.\r\n    if (switchSdk.currentlyloaded === sdkUrl) {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    // PayPal can only work with one currency at the same time. We have to unload the previously loaded script\r\n    // if it was loaded for a different currency. Weird way indeed, but the only way.\r\n    // See: https://github.com/paypal/paypal-checkout-components/issues/1180\r\n    if (switchSdk.currentlyloaded) {\r\n        const suspectedScript = document.querySelector(`script[src=\"${switchSdk.currentlyloaded}\"]`);\r\n        if (suspectedScript) {\r\n            suspectedScript.parentNode.removeChild(suspectedScript);\r\n        }\r\n    }\r\n\r\n    const script = document.createElement('script');\r\n\r\n    return new Promise(resolve => {\r\n        if (script.readyState) {\r\n            script.onreadystatechange = function() {\r\n                if (this.readyState == 'complete' || this.readyState == 'loaded') {\r\n                    this.onreadystatechange = null;\r\n                    resolve();\r\n                }\r\n            };\r\n        } else {\r\n            script.onload = function() {\r\n                resolve();\r\n            };\r\n        }\r\n\r\n        script.setAttribute('src', sdkUrl);\r\n        document.head.appendChild(script);\r\n\r\n        switchSdk.currentlyloaded = sdkUrl;\r\n    });\r\n};\r\n\r\n/**\r\n * Holds the full url of loaded PayPal JavaScript SDK.\r\n *\r\n * @static\r\n * @type {string}\r\n */\r\nswitchSdk.currentlyloaded = '';\r\n"],"names":["showModalWithPlaceholder","async","modal","ModalFactory","create","body","Templates","render","show","component","paymentArea","itemId","description","Promise","all","Repository","getConfigForJs","then","_ref","paypalConfig","getRoot","on","ModalEvents","hidden","destroy","switchSdk","clientid","currency","_ref2","setBody","resolve","window","paypal","Buttons","createOrder","data","actions","order","purchase_units","amount","currency_code","value","cost","Truncate","truncate","length","stripTags","application_context","shipping_preference","brand_name","brandname","onApprove","outsideClick","e","preventDefault","markTransactionComplete","orderID","res","hide","getBody","success","message","reject","clientId","sdkUrl","currentlyloaded","suspectedScript","document","querySelector","parentNode","removeChild","script","createElement","readyState","onreadystatechange","this","onload","setAttribute","head","appendChild"],"mappings":";;;;;;;4NAmCMA,yBAA2BC,gBACvBC,YAAcC,uBAAaC,OAAO,CACpCC,WAAYC,mBAAUC,OAAO,yCAA0C,aAE3EL,MAAMM,OACCN,wBAYY,CAACO,UAAWC,YAAaC,OAAQC,cAC7CC,QAAQC,IAAI,CACfd,2BACAe,WAAWC,eAAeP,UAAWC,YAAaC,UAErDM,MAAKC,WAAEhB,MAAOiB,0BACXjB,MAAMkB,UAAUC,GAAGC,sBAAYC,QAAQ,KAEnCrB,MAAMsB,aAGHX,QAAQC,IAAI,CACfZ,MACAiB,aACAM,UAAUN,aAAaO,SAAUP,aAAaQ,eAGrDV,MAAKW,YAAE1B,MAAOiB,2BAEXjB,MAAM2B,QAAQ,IAEP,IAAIhB,SAAQiB,UACfC,OAAOC,OAAOC,QAAQ,CAElBC,YAAa,SAASC,KAAMC,gBACjBA,QAAQC,MAAMjC,OAAO,CACxBkC,eAAgB,CAAC,CACbC,OAAQ,CACJC,cAAerB,aAAaqB,cAC5BC,MAAOtB,aAAauB,MAExB9B,YAAa+B,kBAASC,SAAShC,YAAa,CAACiC,OAAQ,IAAKC,WAAW,MAEzEC,oBAAqB,CACjBC,oBAAqB,cACrBC,WAAYN,kBAASC,SAASzB,aAAa+B,UAAW,CAACL,OAAQ,IAAKC,WAAW,QAK3FK,UAAW,SAAShB,MAChBjC,MAAMkB,UAAUC,GAAGC,sBAAY8B,cAAeC,IAE1CA,EAAEC,oBAGNpD,MAAM2B,SAAQ,mBAAU,cAAe,iBAEvCd,WAAWwC,wBAAwB9C,UAAWC,YAAaC,OAAQwB,KAAKqB,SACvEvC,MAAKwC,MACFvD,MAAMwD,OACCD,OAEVxC,KAAKa,YAEXvB,OAAOL,MAAMyD,UAAU,UAGjC1C,MAAKwC,KACEA,IAAIG,QACG/C,QAAQiB,QAAQ2B,IAAII,SAGxBhD,QAAQiD,OAAOL,IAAII,iBAW5BpC,UAAY,CAACsC,SAAUpC,kBACnBqC,yDAAoDD,8BAAqBpC,aAG3EF,UAAUwC,kBAAoBD,cACvBnD,QAAQiB,aAMfL,UAAUwC,gBAAiB,OACrBC,gBAAkBC,SAASC,oCAA6B3C,UAAUwC,uBACpEC,iBACAA,gBAAgBG,WAAWC,YAAYJ,uBAIzCK,OAASJ,SAASK,cAAc,iBAE/B,IAAI3D,SAAQiB,UACXyC,OAAOE,WACPF,OAAOG,mBAAqB,WACD,YAAnBC,KAAKF,YAA+C,UAAnBE,KAAKF,kBACjCC,mBAAqB,KAC1B5C,YAIRyC,OAAOK,OAAS,WACZ9C,WAIRyC,OAAOM,aAAa,MAAOb,QAC3BG,SAASW,KAAKC,YAAYR,QAE1B9C,UAAUwC,gBAAkBD,WAUpCvC,UAAUwC,gBAAkB"}