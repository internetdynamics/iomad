{"version":3,"file":"recommendations.min.js","sources":["../src/recommendations.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module to handle toggling activity chooser recommendations.\r\n *\r\n * @module     core_course/recommendations\r\n * @copyright  2020 Adrian Greeve <adrian@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\nimport Notification from 'core/notification';\r\n\r\n/**\r\n * Do an ajax call to toggle the recommendation\r\n *\r\n * @param  {object} e The event\r\n * @return {void}\r\n */\r\nconst toggleRecommendation = (e) => {\r\n    let data = {\r\n        methodname: 'core_course_toggle_activity_recommendation',\r\n        args: {\r\n            area: e.currentTarget.dataset.area,\r\n            id: e.currentTarget.dataset.id\r\n        }\r\n    };\r\n    Ajax.call([data])[0].fail(Notification.exception);\r\n};\r\n\r\n/**\r\n * Initialisation function\r\n *\r\n * @return {void}\r\n */\r\nexport const init = () => {\r\n    const checkboxelements = document.querySelectorAll(\"[data-area]\");\r\n    checkboxelements.forEach((checkbox) => {\r\n        checkbox.addEventListener('change', toggleRecommendation);\r\n    });\r\n};\r\n"],"names":["toggleRecommendation","e","data","methodname","args","area","currentTarget","dataset","id","call","fail","Notification","exception","document","querySelectorAll","forEach","checkbox","addEventListener"],"mappings":";;;;;;;gLAgCMA,qBAAwBC,QACtBC,KAAO,CACPC,WAAY,6CACZC,KAAM,CACFC,KAAMJ,EAAEK,cAAcC,QAAQF,KAC9BG,GAAIP,EAAEK,cAAcC,QAAQC,mBAG/BC,KAAK,CAACP,OAAO,GAAGQ,KAAKC,sBAAaC,0BAQvB,KACSC,SAASC,iBAAiB,eAClCC,SAASC,WACtBA,SAASC,iBAAiB,SAAUjB"}