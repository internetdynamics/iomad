{"version":3,"file":"section.min.js","sources":["../../../src/local/content/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Course section format component.\r\n *\r\n * @module     core_courseformat/local/content/section\r\n * @class      core_courseformat/local/content/section\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Header from 'core_courseformat/local/content/section/header';\r\nimport DndSection from 'core_courseformat/local/courseeditor/dndsection';\r\nimport Templates from 'core/templates';\r\n\r\nexport default class extends DndSection {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'content_section';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            SECTION_ITEM: `[data-for='section_title']`,\r\n            CM: `[data-for=\"cmitem\"]`,\r\n            SECTIONINFO: `[data-for=\"sectioninfo\"]`,\r\n            SECTIONBADGES: `[data-region=\"sectionbadges\"]`,\r\n            SHOWSECTION: `[data-action=\"sectionShow\"]`,\r\n            HIDESECTION: `[data-action=\"sectionHide\"]`,\r\n            ACTIONTEXT: `.menu-action-text`,\r\n            ICON: `.icon`,\r\n        };\r\n        // Most classes will be loaded later by DndCmItem.\r\n        this.classes = {\r\n            LOCKED: 'editinprogress',\r\n            HASDESCRIPTION: 'description',\r\n            HIDE: 'd-none',\r\n            HIDDEN: 'hidden',\r\n            CURRENT: 'current',\r\n        };\r\n\r\n        // We need our id to watch specific events.\r\n        this.id = this.element.dataset.id;\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     *\r\n     * @param {Object} state the initial state\r\n     */\r\n    stateReady(state) {\r\n        this.configState(state);\r\n        // Drag and drop is only available for components compatible course formats.\r\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\r\n            // Section zero and other formats sections may not have a title to drag.\r\n            const sectionItem = this.getElement(this.selectors.SECTION_ITEM);\r\n            if (sectionItem) {\r\n                // Init the inner dragable element.\r\n                const headerComponent = new Header({\r\n                    ...this,\r\n                    element: sectionItem,\r\n                    fullregion: this.element,\r\n                });\r\n                this.configDragDrop(headerComponent);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `section[${this.id}]:updated`, handler: this._refreshSection},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Validate if the drop data can be dropped over the component.\r\n     *\r\n     * @param {Object} dropdata the exported drop data.\r\n     * @returns {boolean}\r\n     */\r\n    validateDropData(dropdata) {\r\n        // If the format uses one section per page sections dropping in the content is ignored.\r\n       if (dropdata?.type === 'section' && this.reactive.sectionReturn != 0) {\r\n            return false;\r\n        }\r\n        return super.validateDropData(dropdata);\r\n    }\r\n\r\n    /**\r\n     * Get the last CM element of that section.\r\n     *\r\n     * @returns {element|null}\r\n     */\r\n    getLastCm() {\r\n        const cms = this.getElements(this.selectors.CM);\r\n        // DndUpload may add extra elements so :last-child selector cannot be used.\r\n        if (!cms || cms.length === 0) {\r\n            return null;\r\n        }\r\n        return cms[cms.length - 1];\r\n    }\r\n\r\n    /**\r\n     * Update a content section using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    _refreshSection({element}) {\r\n        // Update classes.\r\n        this.element.classList.toggle(this.classes.DRAGGING, element.dragging ?? false);\r\n        this.element.classList.toggle(this.classes.LOCKED, element.locked ?? false);\r\n        this.element.classList.toggle(this.classes.HIDDEN, !element.visible ?? false);\r\n        this.element.classList.toggle(this.classes.CURRENT, element.current ?? false);\r\n        this.locked = element.locked;\r\n        // The description box classes depends on the section state.\r\n        const sectioninfo = this.getElement(this.selectors.SECTIONINFO);\r\n        if (sectioninfo) {\r\n            sectioninfo.classList.toggle(this.classes.HASDESCRIPTION, element.hasrestrictions);\r\n        }\r\n        // Update section badges and menus.\r\n        this._updateBadges(element);\r\n        this._updateActionsMenu(element);\r\n    }\r\n\r\n    /**\r\n     * Update a section badges using the state information.\r\n     *\r\n     * @param {object} section the section state.\r\n     */\r\n    _updateBadges(section) {\r\n        const current = this.getElement(`${this.selectors.SECTIONBADGES} [data-type='iscurrent']`);\r\n        current?.classList.toggle(this.classes.HIDE, !section.current);\r\n\r\n        const hiddenFromStudents = this.getElement(`${this.selectors.SECTIONBADGES} [data-type='hiddenfromstudents']`);\r\n        hiddenFromStudents?.classList.toggle(this.classes.HIDE, section.visible);\r\n    }\r\n\r\n    /**\r\n     * Update a section action menus.\r\n     *\r\n     * @param {object} section the section state.\r\n     */\r\n    async _updateActionsMenu(section) {\r\n        let selector;\r\n        let newAction;\r\n        if (section.visible) {\r\n            selector = this.selectors.SHOWSECTION;\r\n            newAction = 'sectionHide';\r\n        } else {\r\n            selector = this.selectors.HIDESECTION;\r\n            newAction = 'sectionShow';\r\n        }\r\n        // Find the affected action.\r\n        const affectedAction = this.getElement(selector);\r\n        if (!affectedAction) {\r\n            return;\r\n        }\r\n        // Change action.\r\n        affectedAction.dataset.action = newAction;\r\n        // Change text.\r\n        const actionText = affectedAction.querySelector(this.selectors.ACTIONTEXT);\r\n        if (affectedAction.dataset?.swapname && actionText) {\r\n            const oldText = actionText?.innerText;\r\n            actionText.innerText = affectedAction.dataset.swapname;\r\n            affectedAction.dataset.swapname = oldText;\r\n        }\r\n        // Change icon.\r\n        const icon = affectedAction.querySelector(this.selectors.ICON);\r\n        if (affectedAction.dataset?.swapicon && icon) {\r\n            const newIcon = affectedAction.dataset.swapicon;\r\n            if (newIcon) {\r\n                const pixHtml = await Templates.renderPix(newIcon, 'core');\r\n                Templates.replaceNode(icon, pixHtml, '');\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"names":["DndSection","create","name","selectors","SECTION_ITEM","CM","SECTIONINFO","SECTIONBADGES","SHOWSECTION","HIDESECTION","ACTIONTEXT","ICON","classes","LOCKED","HASDESCRIPTION","HIDE","HIDDEN","CURRENT","id","this","element","dataset","stateReady","state","configState","reactive","isEditing","supportComponents","sectionItem","getElement","headerComponent","Header","fullregion","configDragDrop","getWatchers","watch","handler","_refreshSection","validateDropData","dropdata","type","sectionReturn","super","getLastCm","cms","getElements","length","classList","toggle","DRAGGING","dragging","locked","visible","current","sectioninfo","hasrestrictions","_updateBadges","_updateActionsMenu","section","hiddenFromStudents","selector","newAction","affectedAction","action","actionText","querySelector","swapname","oldText","innerText","icon","swapicon","newIcon","pixHtml","Templates","renderPix","replaceNode"],"mappings":";;;;;;;;kPA4B6BA,oBAKzBC,cAESC,KAAO,uBAEPC,UAAY,CACbC,0CACAC,yBACAC,uCACAC,8CACAC,0CACAC,0CACAC,+BACAC,mBAGCC,QAAU,CACXC,OAAQ,iBACRC,eAAgB,cAChBC,KAAM,SACNC,OAAQ,SACRC,QAAS,gBAIRC,GAAKC,KAAKC,QAAQC,QAAQH,GAQnCI,WAAWC,eACFC,YAAYD,OAEbJ,KAAKM,SAASC,WAAaP,KAAKM,SAASE,kBAAmB,OAEtDC,YAAcT,KAAKU,WAAWV,KAAKhB,UAAUC,iBAC/CwB,YAAa,OAEPE,gBAAkB,IAAIC,gBAAO,IAC5BZ,KACHC,QAASQ,YACTI,WAAYb,KAAKC,eAEhBa,eAAeH,mBAUhCI,oBACW,CACH,CAACC,wBAAkBhB,KAAKD,gBAAekB,QAASjB,KAAKkB,kBAU7DC,iBAAiBC,iBAES,aAAnBA,MAAAA,gBAAAA,SAAUC,OAAqD,GAA/BrB,KAAKM,SAASgB,gBAG1CC,MAAMJ,iBAAiBC,UAQlCI,kBACUC,IAAMzB,KAAK0B,YAAY1B,KAAKhB,UAAUE,WAEvCuC,KAAsB,IAAfA,IAAIE,OAGTF,IAAIA,IAAIE,OAAS,GAFb,KAWfT,kGAAgBjB,QAACA,mBAERA,QAAQ2B,UAAUC,OAAO7B,KAAKP,QAAQqC,mCAAU7B,QAAQ8B,+DACxD9B,QAAQ2B,UAAUC,OAAO7B,KAAKP,QAAQC,+BAAQO,QAAQ+B,yDACtD/B,QAAQ2B,UAAUC,OAAO7B,KAAKP,QAAQI,iCAASI,QAAQgC,4DACvDhC,QAAQ2B,UAAUC,OAAO7B,KAAKP,QAAQK,iCAASG,QAAQiC,4DACvDF,OAAS/B,QAAQ+B,aAEhBG,YAAcnC,KAAKU,WAAWV,KAAKhB,UAAUG,aAC/CgD,aACAA,YAAYP,UAAUC,OAAO7B,KAAKP,QAAQE,eAAgBM,QAAQmC,sBAGjEC,cAAcpC,cACdqC,mBAAmBrC,SAQ5BoC,cAAcE,eACJL,QAAUlC,KAAKU,qBAAcV,KAAKhB,UAAUI,2CAClD8C,MAAAA,SAAAA,QAASN,UAAUC,OAAO7B,KAAKP,QAAQG,MAAO2C,QAAQL,eAEhDM,mBAAqBxC,KAAKU,qBAAcV,KAAKhB,UAAUI,oDAC7DoD,MAAAA,oBAAAA,mBAAoBZ,UAAUC,OAAO7B,KAAKP,QAAQG,KAAM2C,QAAQN,kCAQ3CM,8DACjBE,SACAC,UACAH,QAAQN,SACRQ,SAAWzC,KAAKhB,UAAUK,YAC1BqD,UAAY,gBAEZD,SAAWzC,KAAKhB,UAAUM,YAC1BoD,UAAY,qBAGVC,eAAiB3C,KAAKU,WAAW+B,cAClCE,sBAILA,eAAezC,QAAQ0C,OAASF,gBAE1BG,WAAaF,eAAeG,cAAc9C,KAAKhB,UAAUO,6CAC3DoD,eAAezC,gEAAS6C,UAAYF,WAAY,OAC1CG,QAAUH,MAAAA,kBAAAA,WAAYI,UAC5BJ,WAAWI,UAAYN,eAAezC,QAAQ6C,SAC9CJ,eAAezC,QAAQ6C,SAAWC,cAGhCE,KAAOP,eAAeG,cAAc9C,KAAKhB,UAAUQ,wCACrDmD,eAAezC,kEAASiD,UAAYD,KAAM,OACpCE,QAAUT,eAAezC,QAAQiD,YACnCC,QAAS,OACHC,cAAgBC,mBAAUC,UAAUH,QAAS,2BACzCI,YAAYN,KAAMG,QAAS"}