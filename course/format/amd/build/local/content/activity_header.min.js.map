{"version":3,"file":"activity_header.min.js","sources":["../../../src/local/content/activity_header.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The activity header component.\r\n *\r\n * @module     core_courseformat/local/content/activity_header\r\n * @class      core_courseformat/local/content/activity_header\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\r\nimport * as CourseEvents from 'core_course/events';\r\n\r\n// Global page selectors.\r\nconst SELECTORS = {\r\n    ACTIVITY_HEADER: `[data-for='page-activity-header']`,\r\n};\r\n\r\nexport default class Component extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'activity_header';\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance form the mustache template.\r\n     *\r\n     * @param {string} target optional altentative DOM main element CSS selector\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        const elementselector = (target) ? target : SELECTORS.ACTIVITY_HEADER;\r\n        return new Component({\r\n            element: document.querySelector(elementselector),\r\n            reactive: getCurrentCourseEditor(),\r\n            selectors\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     */\r\n    stateReady() {\r\n        // Capture completion events.\r\n        this.addEventListener(\r\n            this.element,\r\n            CourseEvents.manualCompletionToggled,\r\n            this._completionHandler\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Activity manual completion listener.\r\n     *\r\n     * @param {Event} event the custom event\r\n     * @param {object} event.detail the event details\r\n     */\r\n    _completionHandler({detail}) {\r\n        if (detail === undefined) {\r\n            return;\r\n        }\r\n        this.reactive.dispatch('cmCompletion', [detail.cmid], detail.completed);\r\n    }\r\n}\r\n"],"names":["SELECTORS","Component","BaseComponent","create","name","target","selectors","elementselector","element","document","querySelector","reactive","stateReady","addEventListener","this","CourseEvents","manualCompletionToggled","_completionHandler","detail","undefined","dispatch","cmid","completed"],"mappings":";;;;;;;;0BA6BMA,oEAIeC,kBAAkBC,wBAKnCC,cAESC,KAAO,8BAUJC,OAAQC,iBACVC,gBAAmBF,QAAmBL,iCACrC,IAAIC,UAAU,CACjBO,QAASC,SAASC,cAAcH,iBAChCI,UAAU,0CACVL,UAAAA,YAORM,kBAESC,iBACDC,KAAKN,QACLO,aAAaC,wBACbF,KAAKG,oBAUbA,6BAAmBC,OAACA,kBACDC,IAAXD,aAGCP,SAASS,SAAS,eAAgB,CAACF,OAAOG,MAAOH,OAAOI"}