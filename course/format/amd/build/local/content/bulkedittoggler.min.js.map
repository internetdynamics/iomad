{"version":3,"file":"bulkedittoggler.min.js","sources":["../../../src/local/content/bulkedittoggler.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * The bulk editor toggler button control.\r\n *\r\n * @module     core_courseformat/local/content/bulkedittoggler\r\n * @class      core_courseformat/local/content/bulkedittoggler\r\n * @copyright  2023 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\r\nimport Pending from 'core/pending';\r\n\r\nexport default class Component extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'bulk_editor_toogler';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            BODY: `body`,\r\n            SELECTABLE: `[data-bulkcheckbox][data-is-selectable]`,\r\n        };\r\n        // Component css classes.\r\n        this.classes = {\r\n            HIDDEN: `d-none`,\r\n            BULK: `bulkenabled`,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Static method to create a component instance from the mustache template.\r\n     *\r\n     * @param {string} target optional altentative DOM main element CSS selector\r\n     * @param {object} selectors optional css selector overrides\r\n     * @return {Component}\r\n     */\r\n    static init(target, selectors) {\r\n        return new this({\r\n            element: document.querySelector(target),\r\n            reactive: getCurrentCourseEditor(),\r\n            selectors\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Initial state ready method.\r\n     */\r\n    stateReady() {\r\n        // Capture completion events.\r\n        this.addEventListener(\r\n            this.element,\r\n            'click',\r\n            this._enableBulk\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `bulk.enabled:updated`, handler: this._refreshToggler},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Update a content section using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details (state.bulk in this case).\r\n     */\r\n    _refreshToggler({element}) {\r\n        this.element.classList.toggle(this.classes.HIDDEN, element.enabled ?? false);\r\n        document.querySelector(this.selectors.BODY)?.classList.toggle(this.classes.BULK, element.enabled);\r\n    }\r\n\r\n    /**\r\n     * Dispatch the enable bulk mutation.\r\n     *\r\n     * The enable bulk button is outside of the course content main div.\r\n     * Because content/actions captures click events only in the course\r\n     * content, this button needs to trigger the enable bulk mutation\r\n     * by itself.\r\n     */\r\n    _enableBulk() {\r\n        const pendingToggle = new Pending(`courseformat/content:bulktoggle_on`);\r\n        this.reactive.dispatch('bulkEnable', true);\r\n        // Wait for a while and focus on the first checkbox.\r\n        setTimeout(() => {\r\n            document.querySelector(this.selectors.SELECTABLE)?.focus();\r\n            pendingToggle.resolve();\r\n        }, 150);\r\n    }\r\n}\r\n"],"names":["Component","BaseComponent","create","name","selectors","BODY","SELECTABLE","classes","HIDDEN","BULK","target","this","element","document","querySelector","reactive","stateReady","addEventListener","_enableBulk","getWatchers","watch","handler","_refreshToggler","classList","toggle","enabled","pendingToggle","Pending","dispatch","setTimeout","focus","resolve"],"mappings":";;;;;;;;qJA4BqBA,kBAAkBC,wBAKnCC,cAESC,KAAO,2BAEPC,UAAY,CACbC,YACAC,2DAGCC,QAAU,CACXC,gBACAC,gCAWIC,OAAQN,kBACT,IAAIO,KAAK,CACZC,QAASC,SAASC,cAAcJ,QAChCK,UAAU,0CACVX,UAAAA,YAORY,kBAESC,iBACDN,KAAKC,QACL,QACAD,KAAKO,aASbC,oBACW,CACH,CAACC,6BAA+BC,QAASV,KAAKW,kBAUtDA,qEAAgBV,QAACA,mBACRA,QAAQW,UAAUC,OAAOb,KAAKJ,QAAQC,gCAAQI,QAAQa,qFAC3DZ,SAASC,cAAcH,KAAKP,UAAUC,8DAAOkB,UAAUC,OAAOb,KAAKJ,QAAQE,KAAMG,QAAQa,SAW7FP,oBACUQ,cAAgB,IAAIC,4DACrBZ,SAASa,SAAS,cAAc,GAErCC,YAAW,+DACPhB,SAASC,cAAcH,KAAKP,UAAUE,sEAAawB,QACnDJ,cAAcK,YACf"}