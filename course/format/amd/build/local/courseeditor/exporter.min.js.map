{"version":3,"file":"exporter.min.js","sources":["../../../src/local/courseeditor/exporter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to export parts of the state and transform them to be used in templates\r\n * and as draggable data.\r\n *\r\n * @module     core_courseformat/local/courseeditor/exporter\r\n * @class      core_courseformat/local/courseeditor/exporter\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nexport default class {\r\n\r\n    /**\r\n     * Class constructor.\r\n     *\r\n     * @param {CourseEditor} reactive the course editor object\r\n     */\r\n    constructor(reactive) {\r\n        this.reactive = reactive;\r\n\r\n        // Completions states are defined in lib/completionlib.php. There are 4 different completion\r\n        // state values, however, the course index uses the same state for complete and complete_pass.\r\n        // This is the reason why completed appears twice in the array.\r\n        this.COMPLETIONS = ['incomplete', 'complete', 'complete', 'fail'];\r\n    }\r\n\r\n    /**\r\n     * Generate the course export data from the state.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @returns {Object}\r\n     */\r\n    course(state) {\r\n        // Collect section information from the state.\r\n        const data = {\r\n            sections: [],\r\n            editmode: this.reactive.isEditing,\r\n            highlighted: state.course.highlighted ?? '',\r\n        };\r\n        const sectionlist = state.course.sectionlist ?? [];\r\n        sectionlist.forEach(sectionid => {\r\n            const sectioninfo = state.section.get(sectionid) ?? {};\r\n            const section = this.section(state, sectioninfo);\r\n            data.sections.push(section);\r\n        });\r\n        data.hassections = (data.sections.length != 0);\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Generate a section export data from the state.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @param {Object} sectioninfo the section state data.\r\n     * @returns {Object}\r\n     */\r\n    section(state, sectioninfo) {\r\n        const section = {\r\n            ...sectioninfo,\r\n            highlighted: state.course.highlighted ?? '',\r\n            cms: [],\r\n        };\r\n        const cmlist = sectioninfo.cmlist ?? [];\r\n        cmlist.forEach(cmid => {\r\n            const cminfo = state.cm.get(cmid);\r\n            const cm = this.cm(state, cminfo);\r\n            section.cms.push(cm);\r\n        });\r\n        section.hascms = (section.cms.length != 0);\r\n\r\n        return section;\r\n    }\r\n\r\n    /**\r\n     * Generate a cm export data from the state.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @param {Object} cminfo the course module state data.\r\n     * @returns {Object}\r\n     */\r\n    cm(state, cminfo) {\r\n        const cm = {\r\n            ...cminfo,\r\n            isactive: false,\r\n        };\r\n        return cm;\r\n    }\r\n\r\n    /**\r\n     * Generate a dragable cm data structure.\r\n     *\r\n     * This method is used by any draggable course module element to generate drop data\r\n     * for its reactive/dragdrop instance.\r\n     *\r\n     * @param {*} state the state object\r\n     * @param {*} cmid the cours emodule id\r\n     * @returns {Object|null}\r\n     */\r\n    cmDraggableData(state, cmid) {\r\n        const cminfo = state.cm.get(cmid);\r\n        if (!cminfo) {\r\n            return null;\r\n        }\r\n\r\n        // Drop an activity over the next activity is the same as doing anything.\r\n        let nextcmid;\r\n        const section = state.section.get(cminfo.sectionid);\r\n        const currentindex = section?.cmlist.indexOf(cminfo.id);\r\n        if (currentindex !== undefined) {\r\n            nextcmid = section?.cmlist[currentindex + 1];\r\n        }\r\n\r\n        return {\r\n            type: 'cm',\r\n            id: cminfo.id,\r\n            name: cminfo.name,\r\n            sectionid: cminfo.sectionid,\r\n            nextcmid,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate a dragable cm data structure.\r\n     *\r\n     * This method is used by any draggable section element to generate drop data\r\n     * for its reactive/dragdrop instance.\r\n     *\r\n     * @param {*} state the state object\r\n     * @param {*} sectionid the cours section id\r\n     * @returns {Object|null}\r\n     */\r\n    sectionDraggableData(state, sectionid) {\r\n        const sectioninfo = state.section.get(sectionid);\r\n        if (!sectioninfo) {\r\n            return null;\r\n        }\r\n        return {\r\n            type: 'section',\r\n            id: sectioninfo.id,\r\n            name: sectioninfo.name,\r\n            number: sectioninfo.number,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate a file draggable structure.\r\n     *\r\n     * This method is used when files are dragged on the browser.\r\n     *\r\n     * @param {*} state the state object\r\n     * @param {*} dataTransfer the current data tranfer data\r\n     * @returns {Object|null}\r\n     */\r\n    fileDraggableData(state, dataTransfer) {\r\n        const files = [];\r\n        // Browsers do not provide the file list until the drop event.\r\n        if (dataTransfer.files?.length > 0) {\r\n            dataTransfer.files.forEach(file => {\r\n                files.push(file);\r\n            });\r\n        }\r\n        return {\r\n            type: 'files',\r\n            files,\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate a completion export data from the cm element.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @param {Object} cminfo the course module state data.\r\n     * @returns {Object}\r\n     */\r\n    cmCompletion(state, cminfo) {\r\n        const data = {\r\n            statename: '',\r\n            state: 'NaN',\r\n        };\r\n        if (cminfo.completionstate !== undefined) {\r\n            data.state = cminfo.completionstate;\r\n            data.hasstate = true;\r\n            const statename = this.COMPLETIONS[cminfo.completionstate] ?? 'NaN';\r\n            data[`is${statename}`] = true;\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Return a sorted list of all sections and cms items in the state.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @returns {Array} all sections and cms items in the state.\r\n     */\r\n    allItemsArray(state) {\r\n        const items = [];\r\n        const sectionlist = state.course.sectionlist ?? [];\r\n        // Add sections.\r\n        sectionlist.forEach(sectionid => {\r\n            const sectioninfo = state.section.get(sectionid);\r\n            items.push({type: 'section', id: sectioninfo.id, url: sectioninfo.sectionurl});\r\n            // Add cms.\r\n            const cmlist = sectioninfo.cmlist ?? [];\r\n            cmlist.forEach(cmid => {\r\n                const cminfo = state.cm.get(cmid);\r\n                items.push({type: 'cm', id: cminfo.id, url: cminfo.url});\r\n            });\r\n        });\r\n        return items;\r\n    }\r\n\r\n    /**\r\n     * Check is some activities of a list can be stealth.\r\n     *\r\n     * @param {Object} state the current state.\r\n     * @param {Number[]} cmIds the module ids to check\r\n     * @returns {Boolean} if any of the activities can be stealth.\r\n     */\r\n    canUseStealth(state, cmIds) {\r\n        return cmIds.some(cmId => {\r\n            const cminfo = state.cm.get(cmId);\r\n            return cminfo?.allowstealth ?? false;\r\n        });\r\n    }\r\n}\r\n"],"names":["constructor","reactive","COMPLETIONS","course","state","data","sections","editmode","this","isEditing","highlighted","sectionlist","forEach","sectionid","sectioninfo","section","get","push","hassections","length","cms","cmlist","cmid","cminfo","cm","hascms","isactive","cmDraggableData","nextcmid","currentindex","indexOf","id","undefined","type","name","sectionDraggableData","number","fileDraggableData","dataTransfer","files","file","cmCompletion","statename","completionstate","hasstate","allItemsArray","items","url","sectionurl","canUseStealth","cmIds","some","cmId","allowstealth"],"mappings":";;;;;;;;;;MA+BIA,YAAYC,eACHA,SAAWA,cAKXC,YAAc,CAAC,aAAc,WAAY,WAAY,QAS9DC,OAAOC,6DAEGC,KAAO,CACTC,SAAU,GACVC,SAAUC,KAAKP,SAASQ,UACxBC,0CAAaN,MAAMD,OAAOO,mEAAe,yCAEzBN,MAAMD,OAAOQ,mEAAe,IACpCC,SAAQC,yCACVC,uCAAcV,MAAMW,QAAQC,IAAIH,4DAAc,GAC9CE,QAAUP,KAAKO,QAAQX,MAAOU,aACpCT,KAAKC,SAASW,KAAKF,YAEvBV,KAAKa,YAAuC,GAAxBb,KAAKC,SAASa,OAE3Bd,KAUXU,QAAQX,MAAOU,kEACLC,QAAU,IACTD,YACHJ,2CAAaN,MAAMD,OAAOO,qEAAe,GACzCU,IAAK,uCAEMN,YAAYO,0DAAU,IAC9BT,SAAQU,aACLC,OAASnB,MAAMoB,GAAGR,IAAIM,MACtBE,GAAKhB,KAAKgB,GAAGpB,MAAOmB,QAC1BR,QAAQK,IAAIH,KAAKO,OAErBT,QAAQU,OAAgC,GAAtBV,QAAQK,IAAID,OAEvBJ,QAUXS,GAAGpB,MAAOmB,cACK,IACJA,OACHG,UAAU,GAelBC,gBAAgBvB,MAAOkB,YACbC,OAASnB,MAAMoB,GAAGR,IAAIM,UACvBC,cACM,SAIPK,eACEb,QAAUX,MAAMW,QAAQC,IAAIO,OAAOV,WACnCgB,aAAed,MAAAA,eAAAA,QAASM,OAAOS,QAAQP,OAAOQ,gBAC/BC,IAAjBH,eACAD,SAAWb,MAAAA,eAAAA,QAASM,OAAOQ,aAAe,IAGvC,CACHI,KAAM,KACNF,GAAIR,OAAOQ,GACXG,KAAMX,OAAOW,KACbrB,UAAWU,OAAOV,UAClBe,SAAAA,UAcRO,qBAAqB/B,MAAOS,iBAClBC,YAAcV,MAAMW,QAAQC,IAAIH,kBACjCC,YAGE,CACHmB,KAAM,UACNF,GAAIjB,YAAYiB,GAChBG,KAAMpB,YAAYoB,KAClBE,OAAQtB,YAAYsB,QANb,KAmBfC,kBAAkBjC,MAAOkC,4CACfC,MAAQ,sCAEVD,aAAaC,gEAAOpB,QAAS,GAC7BmB,aAAaC,MAAM3B,SAAQ4B,OACvBD,MAAMtB,KAAKuB,SAGZ,CACHP,KAAM,QACNM,MAAAA,OAWRE,aAAarC,MAAOmB,cACVlB,KAAO,CACTqC,UAAW,GACXtC,MAAO,eAEoB4B,IAA3BT,OAAOoB,gBAA+B,2BACtCtC,KAAKD,MAAQmB,OAAOoB,gBACpBtC,KAAKuC,UAAW,QACVF,wCAAYlC,KAAKN,YAAYqB,OAAOoB,wEAAoB,MAC9DtC,iBAAUqC,aAAe,SAEtBrC,KASXwC,cAAczC,wCACJ0C,MAAQ,yCACM1C,MAAMD,OAAOQ,qEAAe,IAEpCC,SAAQC,2CACVC,YAAcV,MAAMW,QAAQC,IAAIH,WACtCiC,MAAM7B,KAAK,CAACgB,KAAM,UAAWF,GAAIjB,YAAYiB,GAAIgB,IAAKjC,YAAYkC,2CAEnDlC,YAAYO,4DAAU,IAC9BT,SAAQU,aACLC,OAASnB,MAAMoB,GAAGR,IAAIM,MAC5BwB,MAAM7B,KAAK,CAACgB,KAAM,KAAMF,GAAIR,OAAOQ,GAAIgB,IAAKxB,OAAOwB,YAGpDD,MAUXG,cAAc7C,MAAO8C,cACVA,MAAMC,MAAKC,sCACR7B,OAASnB,MAAMoB,GAAGR,IAAIoC,0CACrB7B,MAAAA,cAAAA,OAAQ8B"}