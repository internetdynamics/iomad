{"version":3,"file":"dndsection.min.js","sources":["../../../src/local/courseeditor/dndsection.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Course index section component.\r\n *\r\n * This component is used to control specific course section interactions like drag and drop\r\n * in both course index and course content.\r\n *\r\n * @module     core_courseformat/local/courseeditor/dndsection\r\n * @class      core_courseformat/local/courseeditor/dndsection\r\n * @copyright  2021 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {BaseComponent, DragDrop} from 'core/reactive';\r\nimport {get_string as getString} from 'core/str';\r\nimport {prefetchStrings} from 'core/prefetch';\r\nimport Templates from 'core/templates';\r\n\r\n// Load global strings.\r\nprefetchStrings('core', ['addfilehere']);\r\n\r\nexport default class extends BaseComponent {\r\n\r\n    /**\r\n     * Save some values form the state.\r\n     *\r\n     * @param {Object} state the current state\r\n     */\r\n    configState(state) {\r\n        this.id = this.element.dataset.id;\r\n        this.section = state.section.get(this.id);\r\n        this.course = state.course;\r\n    }\r\n\r\n    /**\r\n     * Register state values and the drag and drop subcomponent.\r\n     *\r\n     * @param {BaseComponent} sectionitem section item component\r\n     */\r\n    configDragDrop(sectionitem) {\r\n        // Drag and drop is only available for components compatible course formats.\r\n        if (this.reactive.isEditing && this.reactive.supportComponents) {\r\n            // Init the inner dragable element.\r\n            this.sectionitem = sectionitem;\r\n            // Init the dropzone.\r\n            this.dragdrop = new DragDrop(this);\r\n            // Save dropzone classes.\r\n            this.classes = this.dragdrop.getClasses();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove all subcomponents dependencies.\r\n     */\r\n    destroy() {\r\n        if (this.sectionitem !== undefined) {\r\n            this.sectionitem.unregister();\r\n        }\r\n        if (this.dragdrop !== undefined) {\r\n            this.dragdrop.unregister();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the last CM element of that section.\r\n     *\r\n     * @returns {element|null} the las course module element of the section.\r\n     */\r\n    getLastCm() {\r\n        return null;\r\n    }\r\n\r\n    // Drag and drop methods.\r\n\r\n    /**\r\n     * The element drop start hook.\r\n     *\r\n     * @param {Object} dropdata the dropdata\r\n     */\r\n    dragStart(dropdata) {\r\n        this.reactive.dispatch('sectionDrag', [dropdata.id], true);\r\n    }\r\n\r\n    /**\r\n     * The element drop end hook.\r\n     *\r\n     * @param {Object} dropdata the dropdata\r\n     */\r\n    dragEnd(dropdata) {\r\n        this.reactive.dispatch('sectionDrag', [dropdata.id], false);\r\n    }\r\n\r\n    /**\r\n     * Validate if the drop data can be dropped over the component.\r\n     *\r\n     * @param {Object} dropdata the exported drop data.\r\n     * @returns {boolean}\r\n     */\r\n    validateDropData(dropdata) {\r\n        // We accept files.\r\n        if (dropdata?.type === 'files') {\r\n            return true;\r\n        }\r\n        // We accept any course module.\r\n        if (dropdata?.type === 'cm') {\r\n            return true;\r\n        }\r\n        // We accept any section but the section 0 or ourself\r\n        if (dropdata?.type === 'section') {\r\n            const sectionzeroid = this.course.sectionlist[0];\r\n            return dropdata?.id != this.id && dropdata?.id != sectionzeroid && this.id != sectionzeroid;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Display the component dropzone.\r\n     *\r\n     * @param {Object} dropdata the accepted drop data\r\n     */\r\n    showDropZone(dropdata) {\r\n        if (dropdata.type == 'files') {\r\n            this.addOverlay({\r\n                content: getString('addfilehere', 'core'),\r\n                icon: Templates.renderPix('t/download', 'core'),\r\n            }).then(() => {\r\n                // Check if we still need the file dropzone.\r\n                if (!this.dragdrop?.isDropzoneVisible()) {\r\n                    this.removeOverlay();\r\n                }\r\n                return;\r\n            }).catch((error) => {\r\n                throw error;\r\n            });\r\n        }\r\n        if (dropdata.type == 'cm') {\r\n            this.getLastCm()?.classList.add(this.classes.DROPDOWN);\r\n        }\r\n        if (dropdata.type == 'section') {\r\n            // The relative move of section depends on the section number.\r\n            if (this.section.number > dropdata.number) {\r\n                this.element.classList.remove(this.classes.DROPUP);\r\n                this.element.classList.add(this.classes.DROPDOWN);\r\n            } else {\r\n                this.element.classList.add(this.classes.DROPUP);\r\n                this.element.classList.remove(this.classes.DROPDOWN);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Hide the component dropzone.\r\n     */\r\n    hideDropZone() {\r\n        this.getLastCm()?.classList.remove(this.classes.DROPDOWN);\r\n        this.element.classList.remove(this.classes.DROPUP);\r\n        this.element.classList.remove(this.classes.DROPDOWN);\r\n        this.removeOverlay();\r\n    }\r\n\r\n    /**\r\n     * Drop event handler.\r\n     *\r\n     * @param {Object} dropdata the accepted drop data\r\n     * @param {Event} event the drop event\r\n     */\r\n    drop(dropdata, event) {\r\n        // File handling.\r\n        if (dropdata.type == 'files') {\r\n            this.reactive.uploadFiles(\r\n                this.section.id,\r\n                this.section.number,\r\n                dropdata.files\r\n            );\r\n            return;\r\n        }\r\n        // Call the move mutation.\r\n        if (dropdata.type == 'cm') {\r\n            const mutation = (event.altKey) ? 'cmDuplicate' : 'cmMove';\r\n            this.reactive.dispatch(mutation, [dropdata.id], this.id);\r\n        }\r\n        if (dropdata.type == 'section') {\r\n            this.reactive.dispatch('sectionMove', [dropdata.id], this.id);\r\n        }\r\n    }\r\n}\r\n"],"names":["BaseComponent","configState","state","id","this","element","dataset","section","get","course","configDragDrop","sectionitem","reactive","isEditing","supportComponents","dragdrop","DragDrop","classes","getClasses","destroy","undefined","unregister","getLastCm","dragStart","dropdata","dispatch","dragEnd","validateDropData","type","sectionzeroid","sectionlist","showDropZone","addOverlay","content","icon","Templates","renderPix","then","_this$dragdrop","isDropzoneVisible","removeOverlay","catch","error","classList","add","DROPDOWN","number","remove","DROPUP","hideDropZone","drop","event","mutation","altKey","uploadFiles","files"],"mappings":";;;;;;;;;;;iLAiCgB,OAAQ,CAAC,uCAEIA,wBAOzBC,YAAYC,YACHC,GAAKC,KAAKC,QAAQC,QAAQH,QAC1BI,QAAUL,MAAMK,QAAQC,IAAIJ,KAAKD,SACjCM,OAASP,MAAMO,OAQxBC,eAAeC,aAEPP,KAAKQ,SAASC,WAAaT,KAAKQ,SAASE,yBAEpCH,YAAcA,iBAEdI,SAAW,IAAIC,mBAASZ,WAExBa,QAAUb,KAAKW,SAASG,cAOrCC,eAC6BC,IAArBhB,KAAKO,kBACAA,YAAYU,kBAECD,IAAlBhB,KAAKW,eACAA,SAASM,aAStBC,mBACW,KAUXC,UAAUC,eACDZ,SAASa,SAAS,cAAe,CAACD,SAASrB,KAAK,GAQzDuB,QAAQF,eACCZ,SAASa,SAAS,cAAe,CAACD,SAASrB,KAAK,GASzDwB,iBAAiBH,aAEU,WAAnBA,MAAAA,gBAAAA,SAAUI,aACH,KAGY,QAAnBJ,MAAAA,gBAAAA,SAAUI,aACH,KAGY,aAAnBJ,MAAAA,gBAAAA,SAAUI,MAAoB,OACxBC,cAAgBzB,KAAKK,OAAOqB,YAAY,UACvCN,MAAAA,gBAAAA,SAAUrB,KAAMC,KAAKD,KAAMqB,MAAAA,gBAAAA,SAAUrB,KAAM0B,eAAiBzB,KAAKD,IAAM0B,qBAE3E,EAQXE,aAAaP,+BACY,SAAjBA,SAASI,WACJI,WAAW,CACZC,SAAS,mBAAU,cAAe,QAClCC,KAAMC,mBAAUC,UAAU,aAAc,UACzCC,MAAK,+CAECjC,KAAKW,oCAALuB,eAAeC,0BACXC,mBAGVC,OAAOC,cACAA,SAGO,MAAjBlB,SAASI,qCACJN,wDAAaqB,UAAUC,IAAIxC,KAAKa,QAAQ4B,WAE5B,WAAjBrB,SAASI,OAELxB,KAAKG,QAAQuC,OAAStB,SAASsB,aAC1BzC,QAAQsC,UAAUI,OAAO3C,KAAKa,QAAQ+B,aACtC3C,QAAQsC,UAAUC,IAAIxC,KAAKa,QAAQ4B,iBAEnCxC,QAAQsC,UAAUC,IAAIxC,KAAKa,QAAQ+B,aACnC3C,QAAQsC,UAAUI,OAAO3C,KAAKa,QAAQ4B,YAQvDI,kEACS3B,0DAAaqB,UAAUI,OAAO3C,KAAKa,QAAQ4B,eAC3CxC,QAAQsC,UAAUI,OAAO3C,KAAKa,QAAQ+B,aACtC3C,QAAQsC,UAAUI,OAAO3C,KAAKa,QAAQ4B,eACtCL,gBASTU,KAAK1B,SAAU2B,UAEU,SAAjB3B,SAASI,SASQ,MAAjBJ,SAASI,KAAc,OACjBwB,SAAYD,MAAME,OAAU,cAAgB,cAC7CzC,SAASa,SAAS2B,SAAU,CAAC5B,SAASrB,IAAKC,KAAKD,IAEpC,WAAjBqB,SAASI,WACJhB,SAASa,SAAS,cAAe,CAACD,SAASrB,IAAKC,KAAKD,cAbrDS,SAAS0C,YACVlD,KAAKG,QAAQJ,GACbC,KAAKG,QAAQuC,OACbtB,SAAS+B"}