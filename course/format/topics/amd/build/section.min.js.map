{"version":3,"file":"section.min.js","sources":["../src/section.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Format topics section extra logic component.\r\n *\r\n * @module     format_topics/section\r\n * @copyright  2022 Ferran Recio <ferran@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {BaseComponent} from 'core/reactive';\r\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\r\nimport Templates from 'core/templates';\r\n\r\nclass HighlightSection extends BaseComponent {\r\n\r\n    /**\r\n     * Constructor hook.\r\n     */\r\n    create() {\r\n        // Optional component name for debugging.\r\n        this.name = 'format_topics_section';\r\n        // Default query selectors.\r\n        this.selectors = {\r\n            SECTION: `[data-for='section']`,\r\n            SETMARKER: `[data-action=\"sectionHighlight\"]`,\r\n            REMOVEMARKER: `[data-action=\"sectionUnhighlight\"]`,\r\n            ACTIONTEXT: `.menu-action-text`,\r\n            ICON: `.icon`,\r\n        };\r\n        // Default classes to toggle on refresh.\r\n        this.classes = {\r\n            HIDE: 'd-none',\r\n        };\r\n        // The topics format section specific actions.\r\n        this.formatActions = {\r\n            HIGHLIGHT: 'sectionHighlight',\r\n            UNHIGHLIGHT: 'sectionUnhighlight',\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Component watchers.\r\n     *\r\n     * @returns {Array} of watchers\r\n     */\r\n    getWatchers() {\r\n        return [\r\n            {watch: `section.current:updated`, handler: this._refreshHighlight},\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Update a content section using the state information.\r\n     *\r\n     * @param {object} param\r\n     * @param {Object} param.element details the update details.\r\n     */\r\n    async _refreshHighlight({element}) {\r\n        let selector;\r\n        let newAction;\r\n        if (element.current) {\r\n            selector = this.selectors.SETMARKER;\r\n            newAction = this.formatActions.UNHIGHLIGHT;\r\n        } else {\r\n            selector = this.selectors.REMOVEMARKER;\r\n            newAction = this.formatActions.HIGHLIGHT;\r\n        }\r\n        // Find the affected action.\r\n        const affectedAction = this.getElement(`${this.selectors.SECTION} ${selector}`, element.id);\r\n        if (!affectedAction) {\r\n            return;\r\n        }\r\n        // Change action, text and icon.\r\n        affectedAction.dataset.action = newAction;\r\n        const actionText = affectedAction.querySelector(this.selectors.ACTIONTEXT);\r\n        if (affectedAction.dataset?.swapname && actionText) {\r\n            const oldText = actionText?.innerText;\r\n            actionText.innerText = affectedAction.dataset.swapname;\r\n            affectedAction.dataset.swapname = oldText;\r\n        }\r\n        const icon = affectedAction.querySelector(this.selectors.ICON);\r\n        if (affectedAction.dataset?.swapicon && icon) {\r\n            const newIcon = affectedAction.dataset.swapicon;\r\n            if (newIcon) {\r\n                const pixHtml = await Templates.renderPix(newIcon, 'core');\r\n                Templates.replaceNode(icon, pixHtml, '');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const init = () => {\r\n    // Add component to the section.\r\n    const courseEditor = getCurrentCourseEditor();\r\n    if (courseEditor.supportComponents && courseEditor.isEditing) {\r\n        new HighlightSection({\r\n            element: document.getElementById('region-main'),\r\n            reactive: courseEditor,\r\n        });\r\n    }\r\n};\r\n"],"names":["HighlightSection","BaseComponent","create","name","selectors","SECTION","SETMARKER","REMOVEMARKER","ACTIONTEXT","ICON","classes","HIDE","formatActions","HIGHLIGHT","UNHIGHLIGHT","getWatchers","watch","handler","this","_refreshHighlight","selector","newAction","element","current","affectedAction","getElement","id","dataset","action","actionText","querySelector","swapname","oldText","innerText","icon","swapicon","newIcon","pixHtml","Templates","renderPix","replaceNode","courseEditor","supportComponents","isEditing","document","getElementById","reactive"],"mappings":";;;;;;;sJA2BMA,yBAAyBC,wBAK3BC,cAESC,KAAO,6BAEPC,UAAY,CACbC,+BACAC,6CACAC,kDACAC,+BACAC,mBAGCC,QAAU,CACXC,KAAM,eAGLC,cAAgB,CACjBC,UAAW,mBACXC,YAAa,sBASrBC,oBACW,CACH,CAACC,gCAAkCC,QAASC,KAAKC,uGAWjDC,SACAC,WAFgBC,QAACA,cAGjBA,QAAQC,SACRH,SAAWF,KAAKd,UAAUE,UAC1Be,UAAYH,KAAKN,cAAcE,cAE/BM,SAAWF,KAAKd,UAAUG,aAC1Bc,UAAYH,KAAKN,cAAcC,iBAG7BW,eAAiBN,KAAKO,qBAAcP,KAAKd,UAAUC,oBAAWe,UAAYE,QAAQI,QACnFF,sBAILA,eAAeG,QAAQC,OAASP,gBAC1BQ,WAAaL,eAAeM,cAAcZ,KAAKd,UAAUI,6CAC3DgB,eAAeG,gEAASI,UAAYF,WAAY,OAC1CG,QAAUH,MAAAA,kBAAAA,WAAYI,UAC5BJ,WAAWI,UAAYT,eAAeG,QAAQI,SAC9CP,eAAeG,QAAQI,SAAWC,cAEhCE,KAAOV,eAAeM,cAAcZ,KAAKd,UAAUK,wCACrDe,eAAeG,kEAASQ,UAAYD,KAAM,OACpCE,QAAUZ,eAAeG,QAAQQ,YACnCC,QAAS,OACHC,cAAgBC,mBAAUC,UAAUH,QAAS,2BACzCI,YAAYN,KAAMG,QAAS,qBAMjC,WAEVI,cAAe,0CACjBA,aAAaC,mBAAqBD,aAAaE,eAC3C3C,iBAAiB,CACjBsB,QAASsB,SAASC,eAAe,eACjCC,SAAUL"}