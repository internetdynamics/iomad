{"version":3,"file":"data_registry.min.js","sources":["../src/data_registry.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Request actions.\r\n *\r\n * @module     tool_dataprivacy/data_registry\r\n * @copyright  2018 David Monllao\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/ajax', 'core/notification', 'core/templates', 'core/modal_factory',\r\n    'core/modal_events', 'core/fragment', 'tool_dataprivacy/add_purpose', 'tool_dataprivacy/add_category'],\r\n    function($, Str, Ajax, Notification, Templates, ModalFactory, ModalEvents, Fragment, AddPurpose, AddCategory) {\r\n\r\n        var SELECTORS = {\r\n            TREE_NODES: '[data-context-tree-node=1]',\r\n            FORM_CONTAINER: '#context-form-container',\r\n        };\r\n\r\n        var DataRegistry = function(systemContextId, initContextLevel, initContextId) {\r\n            this.systemContextId = systemContextId;\r\n            this.currentContextLevel = initContextLevel;\r\n            this.currentContextId = initContextId;\r\n            this.init();\r\n        };\r\n\r\n        /**\r\n         * @var {int} systemContextId\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.systemContextId = 0;\r\n\r\n        /**\r\n         * @var {int} currentContextLevel\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.currentContextLevel = 0;\r\n\r\n        /**\r\n         * @var {int} currentContextId\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.currentContextId = 0;\r\n\r\n        /**\r\n         * @var {AddPurpose} addpurpose\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.addpurpose = null;\r\n\r\n        /**\r\n         * @var {AddCategory} addcategory\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.addcategory = null;\r\n\r\n        DataRegistry.prototype.init = function() {\r\n            // Add purpose and category modals always at system context.\r\n            this.addpurpose = AddPurpose.getInstance(this.systemContextId);\r\n            this.addcategory = AddCategory.getInstance(this.systemContextId);\r\n\r\n            var stringKeys = [\r\n                {\r\n                    key: 'changessaved',\r\n                    component: 'moodle'\r\n                }, {\r\n                    key: 'contextpurposecategorysaved',\r\n                    component: 'tool_dataprivacy'\r\n                }, {\r\n                    key: 'noblockstoload',\r\n                    component: 'tool_dataprivacy'\r\n                }, {\r\n                    key: 'noactivitiestoload',\r\n                    component: 'tool_dataprivacy'\r\n                }, {\r\n                    key: 'nocoursestoload',\r\n                    component: 'tool_dataprivacy'\r\n                }\r\n            ];\r\n            this.strings = Str.get_strings(stringKeys);\r\n\r\n            this.registerEventListeners();\r\n\r\n            // Load the default context level form.\r\n            if (this.currentContextId) {\r\n                this.loadForm('context_form', [this.currentContextId], this.submitContextFormAjax.bind(this));\r\n            } else {\r\n                this.loadForm('contextlevel_form', [this.currentContextLevel], this.submitContextLevelFormAjax.bind(this));\r\n            }\r\n        };\r\n\r\n        DataRegistry.prototype.registerEventListeners = function() {\r\n            $(SELECTORS.TREE_NODES).on('click', function(ev) {\r\n                ev.preventDefault();\r\n\r\n                var trigger = $(ev.currentTarget);\r\n\r\n                // Active node.\r\n                $(SELECTORS.TREE_NODES).removeClass('active');\r\n                trigger.addClass('active');\r\n\r\n                var contextLevel = trigger.data('contextlevel');\r\n                var contextId = trigger.data('contextid');\r\n                if (contextLevel) {\r\n                    // Context level level.\r\n\r\n                    window.history.pushState({}, null, '?contextlevel=' + contextLevel);\r\n\r\n                    // Remove previous add purpose and category listeners to avoid memory leaks.\r\n                    this.addpurpose.removeListeners();\r\n                    this.addcategory.removeListeners();\r\n\r\n                    // Load the context level form.\r\n                    this.currentContextLevel = contextLevel;\r\n                    this.loadForm('contextlevel_form', [this.currentContextLevel], this.submitContextLevelFormAjax.bind(this));\r\n                } else if (contextId) {\r\n                    // Context instance level.\r\n\r\n                    window.history.pushState({}, null, '?contextid=' + contextId);\r\n\r\n                    // Remove previous add purpose and category listeners to avoid memory leaks.\r\n                    this.addpurpose.removeListeners();\r\n                    this.addcategory.removeListeners();\r\n\r\n                    // Load the context level form.\r\n                    this.currentContextId = contextId;\r\n                    this.loadForm('context_form', [this.currentContextId], this.submitContextFormAjax.bind(this));\r\n                } else {\r\n                    // Expandable nodes.\r\n\r\n                    var expandContextId = trigger.data('expandcontextid');\r\n                    var expandElement = trigger.data('expandelement');\r\n                    var expanded = trigger.data('expanded');\r\n\r\n                    // Extra checking that there is an expandElement because we remove it after loading 0 branches.\r\n                    if (expandElement) {\r\n\r\n                        if (!expanded) {\r\n                            if (trigger.data('loaded') || !expandContextId || !expandElement) {\r\n                                this.expand(trigger);\r\n                            } else {\r\n\r\n                                trigger.find('> i').removeClass('fa-plus');\r\n                                trigger.find('> i').addClass('fa-circle-o-notch fa-spin');\r\n                                this.loadExtra(trigger, expandContextId, expandElement);\r\n                            }\r\n                        } else {\r\n                            this.collapse(trigger);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }.bind(this));\r\n        };\r\n\r\n        DataRegistry.prototype.removeListeners = function() {\r\n            $(SELECTORS.TREE_NODES).off('click');\r\n        };\r\n\r\n        DataRegistry.prototype.loadForm = function(fragmentName, fragmentArgs, formSubmitCallback) {\r\n\r\n            this.clearForm();\r\n\r\n            var fragment = Fragment.loadFragment('tool_dataprivacy', fragmentName, this.systemContextId, fragmentArgs);\r\n            fragment.done(function(html, js) {\r\n\r\n                $(SELECTORS.FORM_CONTAINER).html(html);\r\n                Templates.runTemplateJS(js);\r\n\r\n                this.addpurpose.registerEventListeners();\r\n                this.addcategory.registerEventListeners();\r\n\r\n                // We also catch the form submit event and use it to submit the form with ajax.\r\n                $(SELECTORS.FORM_CONTAINER).on('submit', 'form', formSubmitCallback);\r\n\r\n            }.bind(this)).fail(Notification.exception);\r\n        };\r\n\r\n        DataRegistry.prototype.clearForm = function() {\r\n            // Remove previous listeners.\r\n            $(SELECTORS.FORM_CONTAINER).off('submit', 'form');\r\n        };\r\n\r\n        /**\r\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n         *\r\n         * @method submitForm\r\n         * @param {Event} e Form submission event.\r\n         * @private\r\n         */\r\n        DataRegistry.prototype.submitForm = function(e) {\r\n            e.preventDefault();\r\n            $(SELECTORS.FORM_CONTAINER).find('form').submit();\r\n        };\r\n\r\n        DataRegistry.prototype.submitContextLevelFormAjax = function(e) {\r\n            this.submitFormAjax(e, 'tool_dataprivacy_set_contextlevel_form');\r\n        };\r\n\r\n        DataRegistry.prototype.submitContextFormAjax = function(e) {\r\n            this.submitFormAjax(e, 'tool_dataprivacy_set_context_form');\r\n        };\r\n\r\n        DataRegistry.prototype.submitFormAjax = function(e, saveMethodName) {\r\n            // We don't want to do a real form submission.\r\n            e.preventDefault();\r\n\r\n            // Convert all the form elements values to a serialised string.\r\n            var formData = $(SELECTORS.FORM_CONTAINER).find('form').serialize();\r\n            return this.strings.then(function(strings) {\r\n                Ajax.call([{\r\n                    methodname: saveMethodName,\r\n                    args: {jsonformdata: JSON.stringify(formData)},\r\n                    done: function() {\r\n                        Notification.alert(strings[0], strings[1]);\r\n                    },\r\n                    fail: Notification.exception\r\n                }]);\r\n                return;\r\n            }).catch(Notification.exception);\r\n\r\n        };\r\n\r\n        DataRegistry.prototype.loadExtra = function(parentNode, expandContextId, expandElement) {\r\n\r\n            Ajax.call([{\r\n                methodname: 'tool_dataprivacy_tree_extra_branches',\r\n                args: {\r\n                    contextid: expandContextId,\r\n                    element: expandElement,\r\n                },\r\n                done: function(data) {\r\n                    if (data.branches.length == 0) {\r\n                        this.noElements(parentNode, expandElement);\r\n                        return;\r\n                    }\r\n                    Templates.render('tool_dataprivacy/context_tree_branches', data)\r\n                        .then(function(html) {\r\n                            parentNode.after(html);\r\n                            this.removeListeners();\r\n                            this.registerEventListeners();\r\n                            this.expand(parentNode);\r\n                            parentNode.data('loaded', 1);\r\n                            return;\r\n                        }.bind(this))\r\n                        .fail(Notification.exception);\r\n                }.bind(this),\r\n                fail: Notification.exception\r\n            }]);\r\n        };\r\n\r\n        DataRegistry.prototype.noElements = function(node, expandElement) {\r\n            node.data('expandcontextid', '');\r\n            node.data('expandelement', '');\r\n            this.strings.then(function(strings) {\r\n\r\n                // 2 = blocks, 3 = activities, 4 = courses (although courses is not likely really).\r\n                var key = 2;\r\n                if (expandElement == 'module') {\r\n                    key = 3;\r\n                } else if (expandElement == 'course') {\r\n                    key = 4;\r\n                }\r\n                node.text(strings[key]);\r\n                return;\r\n            }).fail(Notification.exception);\r\n        };\r\n\r\n        DataRegistry.prototype.collapse = function(node) {\r\n            node.data('expanded', 0);\r\n            node.siblings('nav').addClass('hidden');\r\n            node.find('> i').removeClass('fa-minus');\r\n            node.find('> i').addClass('fa-plus');\r\n        };\r\n\r\n        DataRegistry.prototype.expand = function(node) {\r\n            node.data('expanded', 1);\r\n            node.siblings('nav').removeClass('hidden');\r\n            node.find('> i').removeClass('fa-plus');\r\n            // Also remove the spinning one if data was just loaded.\r\n            node.find('> i').removeClass('fa-circle-o-notch fa-spin');\r\n            node.find('> i').addClass('fa-minus');\r\n        };\r\n        return /** @alias module:tool_dataprivacy/data_registry */ {\r\n\r\n            /**\r\n             * Initialise the page.\r\n             *\r\n             * @param {Number} systemContextId\r\n             * @param {Number} initContextLevel\r\n             * @param {Number} initContextId\r\n             * @return {DataRegistry}\r\n             */\r\n            init: function(systemContextId, initContextLevel, initContextId) {\r\n                return new DataRegistry(systemContextId, initContextLevel, initContextId);\r\n            }\r\n        };\r\n    }\r\n);\r\n\r\n"],"names":["define","$","Str","Ajax","Notification","Templates","ModalFactory","ModalEvents","Fragment","AddPurpose","AddCategory","SELECTORS","DataRegistry","systemContextId","initContextLevel","initContextId","currentContextLevel","currentContextId","init","prototype","addpurpose","addcategory","getInstance","this","strings","get_strings","key","component","registerEventListeners","loadForm","submitContextFormAjax","bind","submitContextLevelFormAjax","on","ev","preventDefault","trigger","currentTarget","removeClass","addClass","contextLevel","data","contextId","window","history","pushState","removeListeners","expandContextId","expandElement","expanded","collapse","find","loadExtra","expand","off","fragmentName","fragmentArgs","formSubmitCallback","clearForm","loadFragment","done","html","js","runTemplateJS","fail","exception","submitForm","e","submit","submitFormAjax","saveMethodName","formData","serialize","then","call","methodname","args","jsonformdata","JSON","stringify","alert","catch","parentNode","contextid","element","branches","length","render","after","noElements","node","text","siblings"],"mappings":";;;;;;;AAsBAA,wCAAO,CAAC,SAAU,WAAY,YAAa,oBAAqB,iBAAkB,qBAC9E,oBAAqB,gBAAiB,+BAAgC,kCACtE,SAASC,EAAGC,IAAKC,KAAMC,aAAcC,UAAWC,aAAcC,YAAaC,SAAUC,WAAYC,iBAEzFC,qBACY,6BADZA,yBAEgB,0BAGhBC,aAAe,SAASC,gBAAiBC,iBAAkBC,oBACtDF,gBAAkBA,qBAClBG,oBAAsBF,sBACtBG,iBAAmBF,mBACnBG,eAOTN,aAAaO,UAAUN,gBAAkB,EAMzCD,aAAaO,UAAUH,oBAAsB,EAM7CJ,aAAaO,UAAUF,iBAAmB,EAM1CL,aAAaO,UAAUC,WAAa,KAMpCR,aAAaO,UAAUE,YAAc,KAErCT,aAAaO,UAAUD,KAAO,gBAErBE,WAAaX,WAAWa,YAAYC,KAAKV,sBACzCQ,YAAcX,YAAYY,YAAYC,KAAKV,sBAoB3CW,QAAUtB,IAAIuB,YAlBF,CACb,CACIC,IAAK,eACLC,UAAW,UACZ,CACCD,IAAK,8BACLC,UAAW,oBACZ,CACCD,IAAK,iBACLC,UAAW,oBACZ,CACCD,IAAK,qBACLC,UAAW,oBACZ,CACCD,IAAK,kBACLC,UAAW,2BAKdC,yBAGDL,KAAKN,sBACAY,SAAS,eAAgB,CAACN,KAAKN,kBAAmBM,KAAKO,sBAAsBC,KAAKR,YAElFM,SAAS,oBAAqB,CAACN,KAAKP,qBAAsBO,KAAKS,2BAA2BD,KAAKR,QAI5GX,aAAaO,UAAUS,uBAAyB,WAC5C3B,EAAEU,sBAAsBsB,GAAG,QAAS,SAASC,IACzCA,GAAGC,qBAECC,QAAUnC,EAAEiC,GAAGG,eAGnBpC,EAAEU,sBAAsB2B,YAAY,UACpCF,QAAQG,SAAS,cAEbC,aAAeJ,QAAQK,KAAK,gBAC5BC,UAAYN,QAAQK,KAAK,gBACzBD,aAGAG,OAAOC,QAAQC,UAAU,GAAI,KAAM,iBAAmBL,mBAGjDpB,WAAW0B,uBACXzB,YAAYyB,uBAGZ9B,oBAAsBwB,kBACtBX,SAAS,oBAAqB,CAACN,KAAKP,qBAAsBO,KAAKS,2BAA2BD,KAAKR,YACjG,GAAImB,UAGPC,OAAOC,QAAQC,UAAU,GAAI,KAAM,cAAgBH,gBAG9CtB,WAAW0B,uBACXzB,YAAYyB,uBAGZ7B,iBAAmByB,eACnBb,SAAS,eAAgB,CAACN,KAAKN,kBAAmBM,KAAKO,sBAAsBC,KAAKR,WACpF,KAGCwB,gBAAkBX,QAAQK,KAAK,mBAC/BO,cAAgBZ,QAAQK,KAAK,iBAC7BQ,SAAWb,QAAQK,KAAK,YAGxBO,gBAEKC,cAUIC,SAASd,UATVA,QAAQK,KAAK,WAAcM,iBAAoBC,eAI/CZ,QAAQe,KAAK,OAAOb,YAAY,WAChCF,QAAQe,KAAK,OAAOZ,SAAS,kCACxBa,UAAUhB,QAASW,gBAAiBC,qBALpCK,OAAOjB,YAa9BL,KAAKR,QAGXX,aAAaO,UAAU2B,gBAAkB,WACrC7C,EAAEU,sBAAsB2C,IAAI,UAGhC1C,aAAaO,UAAUU,SAAW,SAAS0B,aAAcC,aAAcC,yBAE9DC,YAEUlD,SAASmD,aAAa,mBAAoBJ,aAAchC,KAAKV,gBAAiB2C,cACpFI,KAAK,SAASC,KAAMC,IAEzB7D,EAAEU,0BAA0BkD,KAAKA,MACjCxD,UAAU0D,cAAcD,SAEnB1C,WAAWQ,8BACXP,YAAYO,yBAGjB3B,EAAEU,0BAA0BsB,GAAG,SAAU,OAAQwB,qBAEnD1B,KAAKR,OAAOyC,KAAK5D,aAAa6D,YAGpCrD,aAAaO,UAAUuC,UAAY,WAE/BzD,EAAEU,0BAA0B2C,IAAI,SAAU,SAU9C1C,aAAaO,UAAU+C,WAAa,SAASC,GACzCA,EAAEhC,iBACFlC,EAAEU,0BAA0BwC,KAAK,QAAQiB,UAG7CxD,aAAaO,UAAUa,2BAA6B,SAASmC,QACpDE,eAAeF,EAAG,2CAG3BvD,aAAaO,UAAUW,sBAAwB,SAASqC,QAC/CE,eAAeF,EAAG,sCAG3BvD,aAAaO,UAAUkD,eAAiB,SAASF,EAAGG,gBAEhDH,EAAEhC,qBAGEoC,SAAWtE,EAAEU,0BAA0BwC,KAAK,QAAQqB,mBACjDjD,KAAKC,QAAQiD,MAAK,SAASjD,SAC9BrB,KAAKuE,KAAK,CAAC,CACPC,WAAYL,eACZM,KAAM,CAACC,aAAcC,KAAKC,UAAUR,WACpCX,KAAM,WACFxD,aAAa4E,MAAMxD,QAAQ,GAAIA,QAAQ,KAE3CwC,KAAM5D,aAAa6D,gBAGxBgB,MAAM7E,aAAa6D,YAI1BrD,aAAaO,UAAUiC,UAAY,SAAS8B,WAAYnC,gBAAiBC,eAErE7C,KAAKuE,KAAK,CAAC,CACPC,WAAY,uCACZC,KAAM,CACFO,UAAWpC,gBACXqC,QAASpC,eAEbY,KAAM,SAASnB,MACiB,GAAxBA,KAAK4C,SAASC,OAIlBjF,UAAUkF,OAAO,yCAA0C9C,MACtDgC,KAAK,SAASZ,MACXqB,WAAWM,MAAM3B,WACZf,uBACAlB,8BACAyB,OAAO6B,YACZA,WAAWzC,KAAK,SAAU,IAE5BV,KAAKR,OACNyC,KAAK5D,aAAa6D,gBAZdwB,WAAWP,WAAYlC,gBAalCjB,KAAKR,MACPyC,KAAM5D,aAAa6D,cAI3BrD,aAAaO,UAAUsE,WAAa,SAASC,KAAM1C,eAC/C0C,KAAKjD,KAAK,kBAAmB,IAC7BiD,KAAKjD,KAAK,gBAAiB,SACtBjB,QAAQiD,MAAK,SAASjD,aAGnBE,IAAM,EACW,UAAjBsB,cACAtB,IAAM,EACkB,UAAjBsB,gBACPtB,IAAM,GAEVgE,KAAKC,KAAKnE,QAAQE,SAEnBsC,KAAK5D,aAAa6D,YAGzBrD,aAAaO,UAAU+B,SAAW,SAASwC,MACvCA,KAAKjD,KAAK,WAAY,GACtBiD,KAAKE,SAAS,OAAOrD,SAAS,UAC9BmD,KAAKvC,KAAK,OAAOb,YAAY,YAC7BoD,KAAKvC,KAAK,OAAOZ,SAAS,YAG9B3B,aAAaO,UAAUkC,OAAS,SAASqC,MACrCA,KAAKjD,KAAK,WAAY,GACtBiD,KAAKE,SAAS,OAAOtD,YAAY,UACjCoD,KAAKvC,KAAK,OAAOb,YAAY,WAE7BoD,KAAKvC,KAAK,OAAOb,YAAY,6BAC7BoD,KAAKvC,KAAK,OAAOZ,SAAS,aAE6B,CAUvDrB,KAAM,SAASL,gBAAiBC,iBAAkBC,sBACvC,IAAIH,aAAaC,gBAAiBC,iBAAkBC"}