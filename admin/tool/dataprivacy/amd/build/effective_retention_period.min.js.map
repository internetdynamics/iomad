{"version":3,"file":"effective_retention_period.min.js","sources":["../src/effective_retention_period.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to update the displayed retention period.\r\n *\r\n * @module     tool_dataprivacy/effective_retention_period\r\n * @copyright  2018 David Monllao\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery'],\r\n    function($) {\r\n\r\n        var SELECTORS = {\r\n            PURPOSE_SELECT: '#id_purposeid',\r\n            RETENTION_FIELD: '#fitem_id_retention_current [data-fieldtype=static]',\r\n        };\r\n\r\n        /**\r\n         * Constructor for the retention period display.\r\n         *\r\n         * @param {Array} purposeRetentionPeriods Associative array of purposeids with effective retention period at this context\r\n         */\r\n        var EffectiveRetentionPeriod = function(purposeRetentionPeriods) {\r\n            this.purposeRetentionPeriods = purposeRetentionPeriods;\r\n            this.registerEventListeners();\r\n        };\r\n\r\n        /**\r\n         * Removes the current 'change' listeners.\r\n         *\r\n         * Useful when a new form is loaded.\r\n         */\r\n        var removeListeners = function() {\r\n            $(SELECTORS.PURPOSE_SELECT).off('change');\r\n        };\r\n\r\n        /**\r\n         * @var {Array} purposeRetentionPeriods\r\n         * @private\r\n         */\r\n        EffectiveRetentionPeriod.prototype.purposeRetentionPeriods = [];\r\n\r\n        /**\r\n         * Add purpose change listeners.\r\n         *\r\n         * @method registerEventListeners\r\n         */\r\n        EffectiveRetentionPeriod.prototype.registerEventListeners = function() {\r\n\r\n            $(SELECTORS.PURPOSE_SELECT).on('change', function(ev) {\r\n                var selected = $(ev.currentTarget).val();\r\n                var selectedPurpose = this.purposeRetentionPeriods[selected];\r\n                $(SELECTORS.RETENTION_FIELD).text(selectedPurpose);\r\n            }.bind(this));\r\n        };\r\n\r\n        return /** @alias module:tool_dataprivacy/effective_retention_period */ {\r\n            init: function(purposeRetentionPeriods) {\r\n                // Remove previously attached listeners.\r\n                removeListeners();\r\n                return new EffectiveRetentionPeriod(purposeRetentionPeriods);\r\n            }\r\n        };\r\n    }\r\n);\r\n\r\n"],"names":["define","$","SELECTORS","EffectiveRetentionPeriod","purposeRetentionPeriods","registerEventListeners","prototype","on","ev","selected","currentTarget","val","selectedPurpose","this","text","bind","init","off"],"mappings":";;;;;;;AAsBAA,qDAAO,CAAC,WACJ,SAASC,OAEDC,yBACgB,gBADhBA,0BAEiB,sDAQjBC,yBAA2B,SAASC,8BAC/BA,wBAA0BA,6BAC1BC,iCAgBTF,yBAAyBG,UAAUF,wBAA0B,GAO7DD,yBAAyBG,UAAUD,uBAAyB,WAExDJ,EAAEC,0BAA0BK,GAAG,SAAU,SAASC,QAC1CC,SAAWR,EAAEO,GAAGE,eAAeC,MAC/BC,gBAAkBC,KAAKT,wBAAwBK,UACnDR,EAAEC,2BAA2BY,KAAKF,kBACpCG,KAAKF,QAG6D,CACpEG,KAAM,SAASZ,gCAxBfH,EAAEC,0BAA0Be,IAAI,UA2BrB,IAAId,yBAAyBC"}