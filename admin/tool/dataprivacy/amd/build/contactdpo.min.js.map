{"version":3,"file":"contactdpo.min.js","sources":["../src/contactdpo.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript module for contacting the site DPO\r\n *\r\n * @module      tool_dataprivacy/contactdpo\r\n * @copyright   2021 Paul Holden <paulh@moodle.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalForm from 'core_form/modalform';\r\nimport Notification from 'core/notification';\r\nimport {get_string as getString} from 'core/str';\r\nimport {add as addToast} from 'core/toast';\r\n\r\nconst SELECTORS = {\r\n    CONTACT_DPO: '[data-action=\"contactdpo\"]',\r\n};\r\n\r\n/**\r\n * Initialize module\r\n */\r\nexport const init = () => {\r\n    const triggerElement = document.querySelector(SELECTORS.CONTACT_DPO);\r\n\r\n    triggerElement.addEventListener('click', event => {\r\n        event.preventDefault();\r\n\r\n        const modalForm = new ModalForm({\r\n            modalConfig: {\r\n                title: getString('contactdataprotectionofficer', 'tool_dataprivacy'),\r\n            },\r\n            formClass: 'tool_dataprivacy\\\\form\\\\contactdpo',\r\n            saveButtonText: getString('send', 'tool_dataprivacy'),\r\n            returnFocus: triggerElement,\r\n        });\r\n\r\n        // Show a toast notification when the form is submitted.\r\n        modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, event => {\r\n            if (event.detail.result) {\r\n                getString('requestsubmitted', 'tool_dataprivacy').then(addToast).catch();\r\n            } else {\r\n                const warningMessages = event.detail.warnings.map(warning => warning.message);\r\n                Notification.addNotification({\r\n                    type: 'error',\r\n                    message: warningMessages.join('<br>')\r\n                });\r\n            }\r\n        });\r\n\r\n        modalForm.show();\r\n    });\r\n};\r\n"],"names":["SELECTORS","triggerElement","document","querySelector","addEventListener","event","preventDefault","modalForm","ModalForm","modalConfig","title","formClass","saveButtonText","returnFocus","events","FORM_SUBMITTED","detail","result","then","addToast","catch","warningMessages","warnings","map","warning","message","addNotification","type","join","show"],"mappings":";;;;;;;0LA4BMA,sBACW,2CAMG,WACVC,eAAiBC,SAASC,cAAcH,uBAE9CC,eAAeG,iBAAiB,SAASC,QACrCA,MAAMC,uBAEAC,UAAY,IAAIC,mBAAU,CAC5BC,YAAa,CACTC,OAAO,mBAAU,+BAAgC,qBAErDC,UAAW,qCACXC,gBAAgB,mBAAU,OAAQ,oBAClCC,YAAaZ,iBAIjBM,UAAUH,iBAAiBG,UAAUO,OAAOC,gBAAgBV,WACpDA,MAAMW,OAAOC,2BACH,mBAAoB,oBAAoBC,KAAKC,YAAUC,YAC9D,OACGC,gBAAkBhB,MAAMW,OAAOM,SAASC,KAAIC,SAAWA,QAAQC,gCACxDC,gBAAgB,CACzBC,KAAM,QACNF,QAASJ,gBAAgBO,KAAK,cAK1CrB,UAAUsB"}