{"version":3,"file":"add_category.min.js","sources":["../src/add_category.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Module to add categories.\r\n *\r\n * @module     tool_dataprivacy/add_category\r\n * @copyright  2018 David Monllao\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/str',\r\n    'core/ajax',\r\n    'core/notification',\r\n    'core/modal_factory',\r\n    'core/modal_events',\r\n    'core/fragment',\r\n    'core_form/changechecker',\r\n], function(\r\n    $,\r\n    Str,\r\n    Ajax,\r\n    Notification,\r\n    ModalFactory,\r\n    ModalEvents,\r\n    Fragment,\r\n    FormChangeChecker\r\n) {\r\n\r\n        var SELECTORS = {\r\n            CATEGORY_LINK: '[data-add-element=\"category\"]',\r\n        };\r\n\r\n        var AddCategory = function(contextId) {\r\n            this.contextId = contextId;\r\n\r\n            var stringKeys = [\r\n                {\r\n                    key: 'addcategory',\r\n                    component: 'tool_dataprivacy'\r\n                },\r\n                {\r\n                    key: 'save',\r\n                    component: 'admin'\r\n                }\r\n            ];\r\n            this.strings = Str.get_strings(stringKeys);\r\n\r\n            this.registerEventListeners();\r\n        };\r\n\r\n        /**\r\n         * @var {int} contextId\r\n         * @private\r\n         */\r\n        AddCategory.prototype.contextId = 0;\r\n\r\n        /**\r\n         * @var {Promise}\r\n         * @private\r\n         */\r\n        AddCategory.prototype.strings = 0;\r\n\r\n        AddCategory.prototype.registerEventListeners = function() {\r\n\r\n            var trigger = $(SELECTORS.CATEGORY_LINK);\r\n            trigger.on('click', function() {\r\n                return this.strings.then(function(strings) {\r\n                    ModalFactory.create({\r\n                        type: ModalFactory.types.SAVE_CANCEL,\r\n                        title: strings[0],\r\n                        body: '',\r\n                    }, trigger).done(function(modal) {\r\n                        this.setupFormModal(modal, strings[1]);\r\n                    }.bind(this));\r\n                }.bind(this))\r\n                .fail(Notification.exception);\r\n            }.bind(this));\r\n\r\n        };\r\n\r\n        /**\r\n         * @method getBody\r\n         * @param {Object} formdata\r\n         * @private\r\n         * @return {Promise}\r\n         */\r\n        AddCategory.prototype.getBody = function(formdata) {\r\n\r\n            var params = null;\r\n            if (typeof formdata !== \"undefined\") {\r\n                params = {jsonformdata: JSON.stringify(formdata)};\r\n            }\r\n            // Get the content of the modal.\r\n            return Fragment.loadFragment('tool_dataprivacy', 'addcategory_form', this.contextId, params);\r\n        };\r\n\r\n        AddCategory.prototype.setupFormModal = function(modal, saveText) {\r\n            modal.setLarge();\r\n\r\n            modal.setSaveButtonText(saveText);\r\n\r\n            // We want to reset the form every time it is opened.\r\n            modal.getRoot().on(ModalEvents.hidden, this.destroy.bind(this));\r\n\r\n            modal.setBody(this.getBody());\r\n\r\n            // We catch the modal save event, and use it to submit the form inside the modal.\r\n            // Triggering a form submission will give JS validation scripts a chance to check for errors.\r\n            modal.getRoot().on(ModalEvents.save, this.submitForm.bind(this));\r\n            // We also catch the form submit event and use it to submit the form with ajax.\r\n            modal.getRoot().on('submit', 'form', this.submitFormAjax.bind(this));\r\n\r\n            this.modal = modal;\r\n\r\n            modal.show();\r\n        };\r\n\r\n        /**\r\n         * This triggers a form submission, so that any mform elements can do final tricks before the form submission is processed.\r\n         *\r\n         * @method submitForm\r\n         * @param {Event} e Form submission event.\r\n         * @private\r\n         */\r\n        AddCategory.prototype.submitForm = function(e) {\r\n            e.preventDefault();\r\n            this.modal.getRoot().find('form').submit();\r\n        };\r\n\r\n        AddCategory.prototype.submitFormAjax = function(e) {\r\n            // We don't want to do a real form submission.\r\n            e.preventDefault();\r\n\r\n            // Convert all the form elements values to a serialised string.\r\n            var formData = this.modal.getRoot().find('form').serialize();\r\n\r\n            Ajax.call([{\r\n                methodname: 'tool_dataprivacy_create_category_form',\r\n                args: {jsonformdata: JSON.stringify(formData)},\r\n                done: function(data) {\r\n                    if (data.validationerrors) {\r\n                        this.modal.setBody(this.getBody(formData));\r\n                    } else {\r\n                        this.close();\r\n                    }\r\n                }.bind(this),\r\n                fail: Notification.exception\r\n            }]);\r\n        };\r\n\r\n        AddCategory.prototype.close = function() {\r\n            this.destroy();\r\n            document.location.reload();\r\n        };\r\n\r\n        AddCategory.prototype.destroy = function() {\r\n            FormChangeChecker.resetAllFormDirtyStates();\r\n            this.modal.destroy();\r\n        };\r\n\r\n        AddCategory.prototype.removeListeners = function() {\r\n            $(SELECTORS.CATEGORY_LINK).off('click');\r\n        };\r\n\r\n        return /** @alias module:tool_dataprivacy/add_category */ {\r\n            getInstance: function(contextId) {\r\n                return new AddCategory(contextId);\r\n            }\r\n        };\r\n    }\r\n);\r\n\r\n"],"names":["define","$","Str","Ajax","Notification","ModalFactory","ModalEvents","Fragment","FormChangeChecker","SELECTORS","AddCategory","contextId","strings","get_strings","key","component","registerEventListeners","prototype","trigger","on","this","then","create","type","types","SAVE_CANCEL","title","body","done","modal","setupFormModal","bind","fail","exception","getBody","formdata","params","jsonformdata","JSON","stringify","loadFragment","saveText","setLarge","setSaveButtonText","getRoot","hidden","destroy","setBody","save","submitForm","submitFormAjax","show","e","preventDefault","find","submit","formData","serialize","call","methodname","args","data","validationerrors","close","document","location","reload","resetAllFormDirtyStates","removeListeners","off","getInstance"],"mappings":";;;;;;;AAsBAA,uCAAO,CACH,SACA,WACA,YACA,oBACA,qBACA,oBACA,gBACA,4BACD,SACCC,EACAC,IACAC,KACAC,aACAC,aACAC,YACAC,SACAC,uBAGQC,wBACe,gCAGfC,YAAc,SAASC,gBAClBA,UAAYA,eAYZC,QAAUV,IAAIW,YAVF,CACb,CACIC,IAAK,cACLC,UAAW,oBAEf,CACID,IAAK,OACLC,UAAW,gBAKdC,iCAOTN,YAAYO,UAAUN,UAAY,EAMlCD,YAAYO,UAAUL,QAAU,EAEhCF,YAAYO,UAAUD,uBAAyB,eAEvCE,QAAUjB,EAAEQ,yBAChBS,QAAQC,GAAG,QAAS,kBACTC,KAAKR,QAAQS,KAAK,SAAST,SAC9BP,aAAaiB,OAAO,CAChBC,KAAMlB,aAAamB,MAAMC,YACzBC,MAAOd,QAAQ,GACfe,KAAM,IACPT,SAASU,KAAK,SAASC,YACjBC,eAAeD,MAAOjB,QAAQ,KACrCmB,KAAKX,QACTW,KAAKX,OACNY,KAAK5B,aAAa6B,YACrBF,KAAKX,QAUXV,YAAYO,UAAUiB,QAAU,SAASC,cAEjCC,OAAS,iBACW,IAAbD,WACPC,OAAS,CAACC,aAAcC,KAAKC,UAAUJ,YAGpC5B,SAASiC,aAAa,mBAAoB,mBAAoBpB,KAAKT,UAAWyB,SAGzF1B,YAAYO,UAAUa,eAAiB,SAASD,MAAOY,UACnDZ,MAAMa,WAENb,MAAMc,kBAAkBF,UAGxBZ,MAAMe,UAAUzB,GAAGb,YAAYuC,OAAQzB,KAAK0B,QAAQf,KAAKX,OAEzDS,MAAMkB,QAAQ3B,KAAKc,WAInBL,MAAMe,UAAUzB,GAAGb,YAAY0C,KAAM5B,KAAK6B,WAAWlB,KAAKX,OAE1DS,MAAMe,UAAUzB,GAAG,SAAU,OAAQC,KAAK8B,eAAenB,KAAKX,YAEzDS,MAAQA,MAEbA,MAAMsB,QAUVzC,YAAYO,UAAUgC,WAAa,SAASG,GACxCA,EAAEC,sBACGxB,MAAMe,UAAUU,KAAK,QAAQC,UAGtC7C,YAAYO,UAAUiC,eAAiB,SAASE,GAE5CA,EAAEC,qBAGEG,SAAWpC,KAAKS,MAAMe,UAAUU,KAAK,QAAQG,YAEjDtD,KAAKuD,KAAK,CAAC,CACPC,WAAY,wCACZC,KAAM,CAACvB,aAAcC,KAAKC,UAAUiB,WACpC5B,KAAM,SAASiC,MACPA,KAAKC,sBACAjC,MAAMkB,QAAQ3B,KAAKc,QAAQsB,gBAE3BO,SAEXhC,KAAKX,MACPY,KAAM5B,aAAa6B,cAI3BvB,YAAYO,UAAU8C,MAAQ,gBACrBjB,UACLkB,SAASC,SAASC,UAGtBxD,YAAYO,UAAU6B,QAAU,WAC5BtC,kBAAkB2D,+BACbtC,MAAMiB,WAGfpC,YAAYO,UAAUmD,gBAAkB,WACpCnE,EAAEQ,yBAAyB4D,IAAI,UAGuB,CACtDC,YAAa,SAAS3D,kBACX,IAAID,YAAYC"}