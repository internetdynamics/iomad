{"version":3,"file":"expand_contract.min.js","sources":["../src/expand_contract.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Potential user selector module.\r\n *\r\n * @module     tool_dataprivacy/expand_contract\r\n * @copyright  2018 Adrian Greeve\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery', 'core/url', 'core/str', 'core/notification'], function($, url, str, Notification) {\r\n\r\n    var expandedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/expanded') + '\"/>');\r\n    var collapsedImage = $('<img alt=\"\" src=\"' + url.imageUrl('t/collapsed') + '\"/>');\r\n\r\n    /*\r\n     * Class names to apply when expanding/collapsing nodes.\r\n     */\r\n    var CLASSES = {\r\n        EXPAND: 'fa-caret-right',\r\n        COLLAPSE: 'fa-caret-down'\r\n    };\r\n\r\n    return /** @alias module:tool_dataprivacy/expand-collapse */ {\r\n        /**\r\n         * Expand or collapse a selected node.\r\n         *\r\n         * @param  {object} targetnode The node that we want to expand / collapse\r\n         * @param  {object} thisnode The node that was clicked.\r\n         */\r\n        expandCollapse: function(targetnode, thisnode) {\r\n            if (targetnode.hasClass('hide')) {\r\n                targetnode.removeClass('hide');\r\n                targetnode.addClass('visible');\r\n                targetnode.attr('aria-expanded', true);\r\n                thisnode.find(':header i.fa').removeClass(CLASSES.EXPAND);\r\n                thisnode.find(':header i.fa').addClass(CLASSES.COLLAPSE);\r\n                thisnode.find(':header img.icon').attr('src', expandedImage.attr('src'));\r\n            } else {\r\n                targetnode.removeClass('visible');\r\n                targetnode.addClass('hide');\r\n                targetnode.attr('aria-expanded', false);\r\n                thisnode.find(':header i.fa').removeClass(CLASSES.COLLAPSE);\r\n                thisnode.find(':header i.fa').addClass(CLASSES.EXPAND);\r\n                thisnode.find(':header img.icon').attr('src', collapsedImage.attr('src'));\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Expand or collapse all nodes on this page.\r\n         *\r\n         * @param  {string} nextstate The next state to change to.\r\n         */\r\n        expandCollapseAll: function(nextstate) {\r\n            var currentstate = (nextstate == 'visible') ? 'hide' : 'visible';\r\n            var ariaexpandedstate = (nextstate == 'visible') ? true : false;\r\n            var iconclassnow = (nextstate == 'visible') ? CLASSES.EXPAND : CLASSES.COLLAPSE;\r\n            var iconclassnext = (nextstate == 'visible') ? CLASSES.COLLAPSE : CLASSES.EXPAND;\r\n            var imagenow = (nextstate == 'visible') ? expandedImage.attr('src') : collapsedImage.attr('src');\r\n            $('.' + currentstate).each(function() {\r\n                $(this).removeClass(currentstate);\r\n                $(this).addClass(nextstate);\r\n                $(this).attr('aria-expanded', ariaexpandedstate);\r\n            });\r\n            $('.tool_dataprivacy-expand-all').data('visibilityState', currentstate);\r\n\r\n            str.get_string(currentstate, 'tool_dataprivacy').then(function(langString) {\r\n                $('.tool_dataprivacy-expand-all').html(langString);\r\n                return;\r\n            }).catch(Notification.exception);\r\n\r\n            $(':header i.fa').each(function() {\r\n                $(this).removeClass(iconclassnow);\r\n                $(this).addClass(iconclassnext);\r\n            });\r\n            $(':header img.icon').each(function() {\r\n                $(this).attr('src', imagenow);\r\n            });\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","url","str","Notification","expandedImage","imageUrl","collapsedImage","CLASSES","expandCollapse","targetnode","thisnode","hasClass","removeClass","addClass","attr","find","expandCollapseAll","nextstate","currentstate","ariaexpandedstate","iconclassnow","iconclassnext","imagenow","each","this","data","get_string","then","langString","html","catch","exception"],"mappings":";;;;;;;AAuBAA,0CAAO,CAAC,SAAU,WAAY,WAAY,sBAAsB,SAASC,EAAGC,IAAKC,IAAKC,kBAE9EC,cAAgBJ,EAAE,oBAAsBC,IAAII,SAAS,cAAgB,OACrEC,eAAiBN,EAAE,oBAAsBC,IAAII,SAAS,eAAiB,OAKvEE,eACQ,iBADRA,iBAEU,sBAG+C,CAOzDC,eAAgB,SAASC,WAAYC,UAC7BD,WAAWE,SAAS,SACpBF,WAAWG,YAAY,QACvBH,WAAWI,SAAS,WACpBJ,WAAWK,KAAK,iBAAiB,GACjCJ,SAASK,KAAK,gBAAgBH,YAAYL,gBAC1CG,SAASK,KAAK,gBAAgBF,SAASN,kBACvCG,SAASK,KAAK,oBAAoBD,KAAK,MAAOV,cAAcU,KAAK,UAEjEL,WAAWG,YAAY,WACvBH,WAAWI,SAAS,QACpBJ,WAAWK,KAAK,iBAAiB,GACjCJ,SAASK,KAAK,gBAAgBH,YAAYL,kBAC1CG,SAASK,KAAK,gBAAgBF,SAASN,gBACvCG,SAASK,KAAK,oBAAoBD,KAAK,MAAOR,eAAeQ,KAAK,UAS1EE,kBAAmB,SAASC,eACpBC,aAA6B,WAAbD,UAA0B,OAAS,UACnDE,kBAAkC,WAAbF,UACrBG,aAA6B,WAAbH,UAA0BV,eAAiBA,iBAC3Dc,cAA8B,WAAbJ,UAA0BV,iBAAmBA,eAC9De,SAAyB,WAAbL,UAA0Bb,cAAcU,KAAK,OAASR,eAAeQ,KAAK,OAC1Fd,EAAE,IAAMkB,cAAcK,MAAK,WACvBvB,EAAEwB,MAAMZ,YAAYM,cACpBlB,EAAEwB,MAAMX,SAASI,WACjBjB,EAAEwB,MAAMV,KAAK,gBAAiBK,sBAElCnB,EAAE,gCAAgCyB,KAAK,kBAAmBP,cAE1DhB,IAAIwB,WAAWR,aAAc,oBAAoBS,MAAK,SAASC,YAC3D5B,EAAE,gCAAgC6B,KAAKD,eAExCE,MAAM3B,aAAa4B,WAEtB/B,EAAE,gBAAgBuB,MAAK,WACnBvB,EAAEwB,MAAMZ,YAAYQ,cACpBpB,EAAEwB,MAAMX,SAASQ,kBAErBrB,EAAE,oBAAoBuB,MAAK,WACvBvB,EAAEwB,MAAMV,KAAK,MAAOQ"}