{"version":3,"file":"tour.min.js","sources":["../src/tour.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A user tour.\r\n *\r\n * @module tool_usertours/tour\r\n * @copyright  2018 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * A list of steps.\r\n *\r\n * @typedef {Object[]} StepList\r\n * @property {Number} stepId The id of the step in the database\r\n * @property {Number} position The position of the step within the tour (zero-indexed)\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport * as Aria from 'core/aria';\r\nimport Popper from 'core/popper';\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\nimport {eventTypes} from './events';\r\nimport {get_string as getString} from 'core/str';\r\nimport {prefetchStrings} from 'core/prefetch';\r\n\r\n/**\r\n * The minimum spacing for tour step to display.\r\n *\r\n * @private\r\n * @constant\r\n * @type {number}\r\n */\r\nconst MINSPACING = 10;\r\n\r\n/**\r\n * A user tour.\r\n *\r\n * @class tool_usertours/tour\r\n * @property {boolean} tourRunning Whether the tour is currently running.\r\n */\r\nconst Tour = class {\r\n    tourRunning = false;\r\n\r\n    /**\r\n     * @param   {object}    config  The configuration object.\r\n     */\r\n    constructor(config) {\r\n        this.init(config);\r\n    }\r\n\r\n    /**\r\n     * Initialise the tour.\r\n     *\r\n     * @method  init\r\n     * @param   {Object}    config  The configuration object.\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    init(config) {\r\n        // Unset all handlers.\r\n        this.eventHandlers = {};\r\n\r\n        // Reset the current tour states.\r\n        this.reset();\r\n\r\n        // Store the initial configuration.\r\n        this.originalConfiguration = config || {};\r\n\r\n        // Apply configuration.\r\n        this.configure.apply(this, arguments);\r\n\r\n        // Unset recalculate state.\r\n        this.possitionNeedToBeRecalculated = false;\r\n\r\n        // Unset recalculate count.\r\n        this.recalculatedNo = 0;\r\n\r\n        try {\r\n            this.storage = window.sessionStorage;\r\n            this.storageKey = 'tourstate_' + this.tourName;\r\n        } catch (e) {\r\n            this.storage = false;\r\n            this.storageKey = '';\r\n        }\r\n\r\n        prefetchStrings('tool_usertours', [\r\n            'nextstep_sequence',\r\n            'skip_tour'\r\n        ]);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Reset the current tour state.\r\n     *\r\n     * @method  reset\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    reset() {\r\n        // Hide the current step.\r\n        this.hide();\r\n\r\n        // Unset all handlers.\r\n        this.eventHandlers = [];\r\n\r\n        // Unset all listeners.\r\n        this.resetStepListeners();\r\n\r\n        // Unset the original configuration.\r\n        this.originalConfiguration = {};\r\n\r\n        // Reset the current step number and list of steps.\r\n        this.steps = [];\r\n\r\n        // Reset the current step number.\r\n        this.currentStepNumber = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Prepare tour configuration.\r\n     *\r\n     * @method  configure\r\n     * @param {Object} config The configuration object.\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    configure(config) {\r\n        if (typeof config === 'object') {\r\n            // Tour name.\r\n            if (typeof config.tourName !== 'undefined') {\r\n                this.tourName = config.tourName;\r\n            }\r\n\r\n            // Set up eventHandlers.\r\n            if (config.eventHandlers) {\r\n                for (let eventName in config.eventHandlers) {\r\n                    config.eventHandlers[eventName].forEach(function(handler) {\r\n                        this.addEventHandler(eventName, handler);\r\n                    }, this);\r\n                }\r\n            }\r\n\r\n            // Reset the step configuration.\r\n            this.resetStepDefaults(true);\r\n\r\n            // Configure the steps.\r\n            if (typeof config.steps === 'object') {\r\n                this.steps = config.steps;\r\n            }\r\n\r\n            if (typeof config.template !== 'undefined') {\r\n                this.templateContent = config.template;\r\n            }\r\n        }\r\n\r\n        // Check that we have enough to start the tour.\r\n        this.checkMinimumRequirements();\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check that the configuration meets the minimum requirements.\r\n     *\r\n     * @method  checkMinimumRequirements\r\n     */\r\n    checkMinimumRequirements() {\r\n        // Need a tourName.\r\n        if (!this.tourName) {\r\n            throw new Error(\"Tour Name required\");\r\n        }\r\n\r\n        // Need a minimum of one step.\r\n        if (!this.steps || !this.steps.length) {\r\n            throw new Error(\"Steps must be specified\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset step default configuration.\r\n     *\r\n     * @method  resetStepDefaults\r\n     * @param   {Boolean}   loadOriginalConfiguration   Whether to load the original configuration supplied with the Tour.\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    resetStepDefaults(loadOriginalConfiguration) {\r\n        if (typeof loadOriginalConfiguration === 'undefined') {\r\n            loadOriginalConfiguration = true;\r\n        }\r\n\r\n        this.stepDefaults = {};\r\n        if (!loadOriginalConfiguration || typeof this.originalConfiguration.stepDefaults === 'undefined') {\r\n            this.setStepDefaults({});\r\n        } else {\r\n            this.setStepDefaults(this.originalConfiguration.stepDefaults);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Set the step defaults.\r\n     *\r\n     * @method  setStepDefaults\r\n     * @param   {Object}    stepDefaults                The step defaults to apply to all steps\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    setStepDefaults(stepDefaults) {\r\n        if (!this.stepDefaults) {\r\n            this.stepDefaults = {};\r\n        }\r\n        $.extend(\r\n            this.stepDefaults,\r\n            {\r\n                element:        '',\r\n                placement:      'top',\r\n                delay:          0,\r\n                moveOnClick:    false,\r\n                moveAfterTime:  0,\r\n                orphan:         false,\r\n                direction:      1,\r\n            },\r\n            stepDefaults\r\n        );\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Retrieve the current step number.\r\n     *\r\n     * @method  getCurrentStepNumber\r\n     * @return  {Number}                   The current step number\r\n     */\r\n    getCurrentStepNumber() {\r\n        return parseInt(this.currentStepNumber, 10);\r\n    }\r\n\r\n    /**\r\n     * Store the current step number.\r\n     *\r\n     * @method  setCurrentStepNumber\r\n     * @param   {Number}   stepNumber      The current step number\r\n     * @chainable\r\n     */\r\n    setCurrentStepNumber(stepNumber) {\r\n        this.currentStepNumber = stepNumber;\r\n        if (this.storage) {\r\n            try {\r\n                this.storage.setItem(this.storageKey, stepNumber);\r\n            } catch (e) {\r\n                if (e.code === DOMException.QUOTA_EXCEEDED_ERR) {\r\n                    this.storage.removeItem(this.storageKey);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get the next step number after the currently displayed step.\r\n     *\r\n     * @method  getNextStepNumber\r\n     * @param   {Number}   stepNumber      The current step number\r\n     * @return  {Number}    The next step number to display\r\n     */\r\n    getNextStepNumber(stepNumber) {\r\n        if (typeof stepNumber === 'undefined') {\r\n            stepNumber = this.getCurrentStepNumber();\r\n        }\r\n        let nextStepNumber = stepNumber + 1;\r\n\r\n        // Keep checking the remaining steps.\r\n        while (nextStepNumber <= this.steps.length) {\r\n            if (this.isStepPotentiallyVisible(this.getStepConfig(nextStepNumber))) {\r\n                return nextStepNumber;\r\n            }\r\n            nextStepNumber++;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get the previous step number before the currently displayed step.\r\n     *\r\n     * @method  getPreviousStepNumber\r\n     * @param   {Number}   stepNumber      The current step number\r\n     * @return  {Number}    The previous step number to display\r\n     */\r\n    getPreviousStepNumber(stepNumber) {\r\n        if (typeof stepNumber === 'undefined') {\r\n            stepNumber = this.getCurrentStepNumber();\r\n        }\r\n        let previousStepNumber = stepNumber - 1;\r\n\r\n        // Keep checking the remaining steps.\r\n        while (previousStepNumber >= 0) {\r\n            if (this.isStepPotentiallyVisible(this.getStepConfig(previousStepNumber))) {\r\n                return previousStepNumber;\r\n            }\r\n            previousStepNumber--;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Is the step the final step number?\r\n     *\r\n     * @method  isLastStep\r\n     * @param   {Number}   stepNumber  Step number to test\r\n     * @return  {Boolean}               Whether the step is the final step\r\n     */\r\n    isLastStep(stepNumber) {\r\n        let nextStepNumber = this.getNextStepNumber(stepNumber);\r\n\r\n        return nextStepNumber === null;\r\n    }\r\n\r\n    /**\r\n     * Is this step potentially visible?\r\n     *\r\n     * @method  isStepPotentiallyVisible\r\n     * @param   {Object}    stepConfig      The step configuration to normalise\r\n     * @return  {Boolean}               Whether the step is the potentially visible\r\n     */\r\n    isStepPotentiallyVisible(stepConfig) {\r\n        if (!stepConfig) {\r\n            // Without step config, there can be no step.\r\n            return false;\r\n        }\r\n\r\n        if (this.isStepActuallyVisible(stepConfig)) {\r\n            // If it is actually visible, it is already potentially visible.\r\n            return true;\r\n        }\r\n\r\n        if (typeof stepConfig.orphan !== 'undefined' && stepConfig.orphan) {\r\n            // Orphan steps have no target. They are always visible.\r\n            return true;\r\n        }\r\n\r\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay) {\r\n            // Only return true if the activated has not been used yet.\r\n            return true;\r\n        }\r\n\r\n        // Not theoretically, or actually visible.\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get potentially visible steps in a tour.\r\n     *\r\n     * @returns {StepList} A list of ordered steps\r\n     */\r\n    getPotentiallyVisibleSteps() {\r\n        let position = 1;\r\n        let result = [];\r\n        // Checking the total steps.\r\n        for (let stepNumber = 0; stepNumber < this.steps.length; stepNumber++) {\r\n            const stepConfig = this.getStepConfig(stepNumber);\r\n            if (this.isStepPotentiallyVisible(stepConfig)) {\r\n                result[stepNumber] = {stepId: stepConfig.stepid, position: position};\r\n                position++;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Is this step actually visible?\r\n     *\r\n     * @method  isStepActuallyVisible\r\n     * @param   {Object}    stepConfig      The step configuration to normalise\r\n     * @return  {Boolean}               Whether the step is actually visible\r\n     */\r\n    isStepActuallyVisible(stepConfig) {\r\n        if (!stepConfig) {\r\n            // Without step config, there can be no step.\r\n            return false;\r\n        }\r\n\r\n        // Check if the CSS styles are allowed on the browser or not.\r\n        if (!this.isCSSAllowed()) {\r\n            return false;\r\n        }\r\n\r\n        let target = this.getStepTarget(stepConfig);\r\n        if (target && target.length && target.is(':visible')) {\r\n            // Without a target, there can be no step.\r\n            return !!target.length;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Is the browser actually allow CSS styles?\r\n     *\r\n     * @returns {boolean} True if the browser is allowing CSS styles\r\n     */\r\n    isCSSAllowed() {\r\n        const testCSSElement = document.createElement('div');\r\n        testCSSElement.classList.add('hide');\r\n        document.body.appendChild(testCSSElement);\r\n        const styles = window.getComputedStyle(testCSSElement);\r\n        const isAllowed = styles.display === 'none';\r\n        testCSSElement.remove();\r\n\r\n        return isAllowed;\r\n    }\r\n\r\n    /**\r\n     * Go to the next step in the tour.\r\n     *\r\n     * @method  next\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    next() {\r\n        return this.gotoStep(this.getNextStepNumber());\r\n    }\r\n\r\n    /**\r\n     * Go to the previous step in the tour.\r\n     *\r\n     * @method  previous\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    previous() {\r\n        return this.gotoStep(this.getPreviousStepNumber(), -1);\r\n    }\r\n\r\n    /**\r\n     * Go to the specified step in the tour.\r\n     *\r\n     * @method  gotoStep\r\n     * @param   {Number}   stepNumber     The step number to display\r\n     * @param   {Number}   direction      Next or previous step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     * @fires tool_usertours/stepRender\r\n     * @fires tool_usertours/stepRendered\r\n     * @fires tool_usertours/stepHide\r\n     * @fires tool_usertours/stepHidden\r\n     */\r\n    gotoStep(stepNumber, direction) {\r\n        if (stepNumber < 0) {\r\n            return this.endTour();\r\n        }\r\n\r\n        let stepConfig = this.getStepConfig(stepNumber);\r\n        if (stepConfig === null) {\r\n            return this.endTour();\r\n        }\r\n\r\n        return this._gotoStep(stepConfig, direction);\r\n    }\r\n\r\n    _gotoStep(stepConfig, direction) {\r\n        if (!stepConfig) {\r\n            return this.endTour();\r\n        }\r\n\r\n        if (typeof stepConfig.delay !== 'undefined' && stepConfig.delay && !stepConfig.delayed) {\r\n            stepConfig.delayed = true;\r\n            window.setTimeout(this._gotoStep.bind(this), stepConfig.delay, stepConfig, direction);\r\n\r\n            return this;\r\n        } else if (!stepConfig.orphan && !this.isStepActuallyVisible(stepConfig)) {\r\n            let fn = direction == -1 ? 'getPreviousStepNumber' : 'getNextStepNumber';\r\n            return this.gotoStep(this[fn](stepConfig.stepNumber), direction);\r\n        }\r\n\r\n        this.hide();\r\n\r\n        const stepRenderEvent = this.dispatchEvent(eventTypes.stepRender, {stepConfig}, true);\r\n        if (!stepRenderEvent.defaultPrevented) {\r\n            this.renderStep(stepConfig);\r\n            this.dispatchEvent(eventTypes.stepRendered, {stepConfig});\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Fetch the normalised step configuration for the specified step number.\r\n     *\r\n     * @method  getStepConfig\r\n     * @param   {Number}   stepNumber      The step number to fetch configuration for\r\n     * @return  {Object}                    The step configuration\r\n     */\r\n    getStepConfig(stepNumber) {\r\n        if (stepNumber === null || stepNumber < 0 || stepNumber >= this.steps.length) {\r\n            return null;\r\n        }\r\n\r\n        // Normalise the step configuration.\r\n        let stepConfig = this.normalizeStepConfig(this.steps[stepNumber]);\r\n\r\n        // Add the stepNumber to the stepConfig.\r\n        stepConfig = $.extend(stepConfig, {stepNumber: stepNumber});\r\n\r\n        return stepConfig;\r\n    }\r\n\r\n    /**\r\n     * Normalise the supplied step configuration.\r\n     *\r\n     * @method  normalizeStepConfig\r\n     * @param   {Object}    stepConfig      The step configuration to normalise\r\n     * @return  {Object}                    The normalised step configuration\r\n     */\r\n    normalizeStepConfig(stepConfig) {\r\n\r\n        if (typeof stepConfig.reflex !== 'undefined' && typeof stepConfig.moveAfterClick === 'undefined') {\r\n            stepConfig.moveAfterClick = stepConfig.reflex;\r\n        }\r\n\r\n        if (typeof stepConfig.element !== 'undefined' && typeof stepConfig.target === 'undefined') {\r\n            stepConfig.target = stepConfig.element;\r\n        }\r\n\r\n        if (typeof stepConfig.content !== 'undefined' && typeof stepConfig.body === 'undefined') {\r\n            stepConfig.body = stepConfig.content;\r\n        }\r\n\r\n        stepConfig = $.extend({}, this.stepDefaults, stepConfig);\r\n\r\n        stepConfig = $.extend({}, {\r\n            attachTo: stepConfig.target,\r\n            attachPoint: 'after',\r\n        }, stepConfig);\r\n\r\n        if (stepConfig.attachTo) {\r\n            stepConfig.attachTo = $(stepConfig.attachTo).first();\r\n        }\r\n\r\n        return stepConfig;\r\n    }\r\n\r\n    /**\r\n     * Fetch the actual step target from the selector.\r\n     *\r\n     * This should not be called until after any delay has completed.\r\n     *\r\n     * @method  getStepTarget\r\n     * @param   {Object}    stepConfig      The step configuration\r\n     * @return  {$}\r\n     */\r\n    getStepTarget(stepConfig) {\r\n        if (stepConfig.target) {\r\n            return $(stepConfig.target);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Fire any event handlers for the specified event.\r\n     *\r\n     * @param {String} eventName The name of the event\r\n     * @param {Object} [detail={}] Any additional details to pass into the eveent\r\n     * @param {Boolean} [cancelable=false] Whether preventDefault() can be called\r\n     * @returns {CustomEvent}\r\n     */\r\n    dispatchEvent(\r\n        eventName,\r\n        detail = {},\r\n        cancelable = false\r\n    ) {\r\n        return dispatchEvent(eventName, {\r\n            // Add the tour to the detail.\r\n            tour: this,\r\n            ...detail,\r\n        }, document, {\r\n            cancelable,\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @method addEventHandler\r\n     * @param  {string}      eventName       The name of the event to listen for\r\n     * @param  {function}    handler         The event handler to call\r\n     * @return {Object} this.\r\n     */\r\n    addEventHandler(eventName, handler) {\r\n        if (typeof this.eventHandlers[eventName] === 'undefined') {\r\n            this.eventHandlers[eventName] = [];\r\n        }\r\n\r\n        this.eventHandlers[eventName].push(handler);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Process listeners for the step being shown.\r\n     *\r\n     * @method  processStepListeners\r\n     * @param   {object}    stepConfig      The configuration for the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    processStepListeners(stepConfig) {\r\n        this.listeners.push(\r\n        // Next button.\r\n        {\r\n            node: this.currentStepNode,\r\n            args: ['click', '[data-role=\"next\"]', $.proxy(this.next, this)]\r\n        },\r\n\r\n        // Close and end tour buttons.\r\n        {\r\n            node: this.currentStepNode,\r\n            args: ['click', '[data-role=\"end\"]', $.proxy(this.endTour, this)]\r\n        },\r\n\r\n        // Click backdrop and hide tour.\r\n        {\r\n            node: $('[data-flexitour=\"backdrop\"]'),\r\n            args: ['click', $.proxy(this.hide, this)]\r\n        },\r\n\r\n        // Keypresses.\r\n        {\r\n            node: $('body'),\r\n            args: ['keydown', $.proxy(this.handleKeyDown, this)]\r\n        });\r\n\r\n        if (stepConfig.moveOnClick) {\r\n            var targetNode = this.getStepTarget(stepConfig);\r\n            this.listeners.push({\r\n                node: targetNode,\r\n                args: ['click', $.proxy(function(e) {\r\n                    if ($(e.target).parents('[data-flexitour=\"container\"]').length === 0) {\r\n                        // Ignore clicks when they are in the flexitour.\r\n                        window.setTimeout($.proxy(this.next, this), 500);\r\n                    }\r\n                }, this)]\r\n            });\r\n        }\r\n\r\n        this.listeners.forEach(function(listener) {\r\n            listener.node.on.apply(listener.node, listener.args);\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Reset step listeners.\r\n     *\r\n     * @method  resetStepListeners\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    resetStepListeners() {\r\n        // Stop listening to all external handlers.\r\n        if (this.listeners) {\r\n            this.listeners.forEach(function(listener) {\r\n                listener.node.off.apply(listener.node, listener.args);\r\n            });\r\n        }\r\n        this.listeners = [];\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * The standard step renderer.\r\n     *\r\n     * @method  renderStep\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    renderStep(stepConfig) {\r\n        // Store the current step configuration for later.\r\n        this.currentStepConfig = stepConfig;\r\n        this.setCurrentStepNumber(stepConfig.stepNumber);\r\n\r\n        // Fetch the template and convert it to a $ object.\r\n        let template = $(this.getTemplateContent());\r\n\r\n        // Title.\r\n        template.find('[data-placeholder=\"title\"]')\r\n            .html(stepConfig.title);\r\n\r\n        // Body.\r\n        template.find('[data-placeholder=\"body\"]')\r\n            .html(stepConfig.body);\r\n\r\n        // Buttons.\r\n        const nextBtn = template.find('[data-role=\"next\"]');\r\n        const endBtn = template.find('[data-role=\"end\"]');\r\n\r\n        // Is this the final step?\r\n        if (this.isLastStep(stepConfig.stepNumber)) {\r\n            nextBtn.hide();\r\n            endBtn.removeClass(\"btn-secondary\").addClass(\"btn-primary\");\r\n        } else {\r\n            nextBtn.prop('disabled', false);\r\n            // Use Skip tour label for the End tour button.\r\n            getString('skip_tour', 'tool_usertours').then(value => {\r\n                endBtn.html(value);\r\n                return;\r\n            }).catch();\r\n        }\r\n\r\n        nextBtn.attr('role', 'button');\r\n        endBtn.attr('role', 'button');\r\n\r\n        if (this.originalConfiguration.displaystepnumbers) {\r\n            const stepsPotentiallyVisible = this.getPotentiallyVisibleSteps();\r\n            const totalStepsPotentiallyVisible = stepsPotentiallyVisible.length;\r\n            const position = stepsPotentiallyVisible[stepConfig.stepNumber].position;\r\n            if (totalStepsPotentiallyVisible > 1) {\r\n                // Change the label of the Next button to include the sequence.\r\n                getString('nextstep_sequence', 'tool_usertours',\r\n                    {position: position, total: totalStepsPotentiallyVisible}).then(value => {\r\n                    nextBtn.html(value);\r\n                    return;\r\n                }).catch();\r\n            }\r\n        }\r\n\r\n        // Replace the template with the updated version.\r\n        stepConfig.template = template;\r\n\r\n        // Add to the page.\r\n        this.addStepToPage(stepConfig);\r\n\r\n        // Process step listeners after adding to the page.\r\n        // This uses the currentNode.\r\n        this.processStepListeners(stepConfig);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Getter for the template content.\r\n     *\r\n     * @method  getTemplateContent\r\n     * @return  {$}\r\n     */\r\n    getTemplateContent() {\r\n        return $(this.templateContent).clone();\r\n    }\r\n\r\n    /**\r\n     * Helper to add a step to the page.\r\n     *\r\n     * @method  addStepToPage\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    addStepToPage(stepConfig) {\r\n        // Create the stepNode from the template data.\r\n        let currentStepNode = $('<span data-flexitour=\"container\"></span>')\r\n            .html(stepConfig.template)\r\n            .hide();\r\n\r\n        // The scroll animation occurs on the body or html.\r\n        let animationTarget = $('body, html')\r\n            .stop(true, true);\r\n\r\n        if (this.isStepActuallyVisible(stepConfig)) {\r\n            let targetNode = this.getStepTarget(stepConfig);\r\n\r\n            if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\r\n                animationTarget = targetNode.parents('[data-usertour=\"scroller\"]');\r\n            }\r\n\r\n            targetNode.data('flexitour', 'target');\r\n\r\n            let zIndex = this.calculateZIndex(targetNode);\r\n            if (zIndex) {\r\n                stepConfig.zIndex = zIndex + 1;\r\n            }\r\n\r\n            if (stepConfig.zIndex) {\r\n                currentStepNode.css('zIndex', stepConfig.zIndex + 1);\r\n            }\r\n\r\n            // Add the backdrop.\r\n            this.positionBackdrop(stepConfig);\r\n\r\n            $(document.body).append(currentStepNode);\r\n            this.currentStepNode = currentStepNode;\r\n\r\n            // Ensure that the step node is positioned.\r\n            // Some situations mean that the value is not properly calculated without this step.\r\n            this.currentStepNode.css({\r\n                top: 0,\r\n                left: 0,\r\n            });\r\n\r\n            animationTarget\r\n                .animate({\r\n                    scrollTop: this.calculateScrollTop(stepConfig),\r\n                }).promise().then(function() {\r\n                        this.positionStep(stepConfig);\r\n                        this.revealStep(stepConfig);\r\n                        return;\r\n                    }.bind(this))\r\n                    .catch(function() {\r\n                        // Silently fail.\r\n                    });\r\n\r\n        } else if (stepConfig.orphan) {\r\n            stepConfig.isOrphan = true;\r\n\r\n            // This will be appended to the body instead.\r\n            stepConfig.attachTo = $('body').first();\r\n            stepConfig.attachPoint = 'append';\r\n\r\n            // Add the backdrop.\r\n            this.positionBackdrop(stepConfig);\r\n\r\n            // This is an orphaned step.\r\n            currentStepNode.addClass('orphan');\r\n\r\n            // It lives in the body.\r\n            $(document.body).append(currentStepNode);\r\n            this.currentStepNode = currentStepNode;\r\n\r\n            this.currentStepNode.css('position', 'fixed');\r\n\r\n            this.currentStepPopper = new Popper(\r\n                $('body'),\r\n                this.currentStepNode[0], {\r\n                    removeOnDestroy: true,\r\n                    placement: stepConfig.placement + '-start',\r\n                    arrowElement: '[data-role=\"arrow\"]',\r\n                    // Empty the modifiers. We've already placed the step and don't want it moved.\r\n                    modifiers: {\r\n                        hide: {\r\n                            enabled: false,\r\n                        },\r\n                        applyStyle: {\r\n                            onLoad: null,\r\n                            enabled: false,\r\n                        },\r\n                    },\r\n                    onCreate: () => {\r\n                        // First, we need to check if the step's content contains any images.\r\n                        const images = this.currentStepNode.find('img');\r\n                        if (images.length) {\r\n                            // Images found, need to calculate the position when the image is loaded.\r\n                            images.on('load', () => {\r\n                                this.calculateStepPositionInPage(currentStepNode);\r\n                            });\r\n                        }\r\n                        this.calculateStepPositionInPage(currentStepNode);\r\n                    }\r\n                }\r\n            );\r\n\r\n            this.revealStep(stepConfig);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Make the given step visible.\r\n     *\r\n     * @method revealStep\r\n     * @param {Object} stepConfig The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    revealStep(stepConfig) {\r\n        // Fade the step in.\r\n        this.currentStepNode.fadeIn('', $.proxy(function() {\r\n                // Announce via ARIA.\r\n                this.announceStep(stepConfig);\r\n\r\n                // Focus on the current step Node.\r\n                this.currentStepNode.focus();\r\n                window.setTimeout($.proxy(function() {\r\n                    // After a brief delay, focus again.\r\n                    // There seems to be an issue with Jaws where it only reads the dialogue title initially.\r\n                    // This second focus helps it to read the full dialogue.\r\n                    if (this.currentStepNode) {\r\n                        this.currentStepNode.focus();\r\n                    }\r\n                }, this), 100);\r\n\r\n            }, this));\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Helper to announce the step on the page.\r\n     *\r\n     * @method  announceStep\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    announceStep(stepConfig) {\r\n        // Setup the step Dialogue as per:\r\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_nonmodal\r\n        // * https://www.w3.org/TR/wai-aria-practices/#dialog_modal\r\n\r\n        // Generate an ID for the current step node.\r\n        let stepId = 'tour-step-' + this.tourName + '-' + stepConfig.stepNumber;\r\n        this.currentStepNode.attr('id', stepId);\r\n\r\n        let bodyRegion = this.currentStepNode.find('[data-placeholder=\"body\"]').first();\r\n        bodyRegion.attr('id', stepId + '-body');\r\n        bodyRegion.attr('role', 'document');\r\n\r\n        let headerRegion = this.currentStepNode.find('[data-placeholder=\"title\"]').first();\r\n        headerRegion.attr('id', stepId + '-title');\r\n        headerRegion.attr('aria-labelledby', stepId + '-body');\r\n\r\n        // Generally, a modal dialog has a role of dialog.\r\n        this.currentStepNode.attr('role', 'dialog');\r\n        this.currentStepNode.attr('tabindex', 0);\r\n        this.currentStepNode.attr('aria-labelledby', stepId + '-title');\r\n        this.currentStepNode.attr('aria-describedby', stepId + '-body');\r\n\r\n        // Configure ARIA attributes on the target.\r\n        let target = this.getStepTarget(stepConfig);\r\n        if (target) {\r\n            target.data('original-tabindex', target.attr('tabindex'));\r\n            if (!target.attr('tabindex')) {\r\n                target.attr('tabindex', 0);\r\n            }\r\n\r\n            target\r\n                .data('original-describedby', target.attr('aria-describedby'))\r\n                .attr('aria-describedby', stepId + '-body')\r\n                ;\r\n        }\r\n\r\n        this.accessibilityShow(stepConfig);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Handle key down events.\r\n     *\r\n     * @method  handleKeyDown\r\n     * @param   {EventFacade} e\r\n     */\r\n    handleKeyDown(e) {\r\n        let tabbableSelector = 'a[href], link[href], [draggable=true], [contenteditable=true], ';\r\n        tabbableSelector += ':input:enabled, [tabindex], button:enabled';\r\n        switch (e.keyCode) {\r\n            case 27:\r\n                this.endTour();\r\n                break;\r\n\r\n            // 9 == Tab - trap focus for items with a backdrop.\r\n            case 9:\r\n                // Tab must be handled on key up only in this instance.\r\n                (function() {\r\n                    if (!this.currentStepConfig.hasBackdrop) {\r\n                        // Trapping tab focus is only handled for those steps with a backdrop.\r\n                        return;\r\n                    }\r\n\r\n                    // Find all tabbable locations.\r\n                    let activeElement = $(document.activeElement);\r\n                    let stepTarget = this.getStepTarget(this.currentStepConfig);\r\n                    let tabbableNodes = $(tabbableSelector);\r\n                    let dialogContainer = $('span[data-flexitour=\"container\"]');\r\n                    let currentIndex;\r\n                    // Filter out element which is not belong to target section or dialogue.\r\n                    if (stepTarget) {\r\n                        tabbableNodes = tabbableNodes.filter(function(index, element) {\r\n                            return stepTarget !== null\r\n                                && (stepTarget.has(element).length\r\n                                    || dialogContainer.has(element).length\r\n                                    || stepTarget.is(element)\r\n                                    || dialogContainer.is(element));\r\n                        });\r\n                    }\r\n\r\n                    // Find index of focusing element.\r\n                    tabbableNodes.each(function(index, element) {\r\n                        if (activeElement.is(element)) {\r\n                            currentIndex = index;\r\n                            return false;\r\n                        }\r\n                        // Keep looping.\r\n                        return true;\r\n                    });\r\n\r\n                    let nextIndex;\r\n                    let nextNode;\r\n                    let focusRelevant;\r\n                    if (currentIndex != void 0) {\r\n                        let direction = 1;\r\n                        if (e.shiftKey) {\r\n                            direction = -1;\r\n                        }\r\n                        nextIndex = currentIndex;\r\n                        do {\r\n                            nextIndex += direction;\r\n                            nextNode = $(tabbableNodes[nextIndex]);\r\n                        } while (nextNode.length && nextNode.is(':disabled') || nextNode.is(':hidden'));\r\n                        if (nextNode.length) {\r\n                            // A new f\r\n                            focusRelevant = nextNode.closest(stepTarget).length;\r\n                            focusRelevant = focusRelevant || nextNode.closest(this.currentStepNode).length;\r\n                        } else {\r\n                            // Unable to find the target somehow.\r\n                            focusRelevant = false;\r\n                        }\r\n                    }\r\n\r\n                    if (focusRelevant) {\r\n                        nextNode.focus();\r\n                    } else {\r\n                        if (e.shiftKey) {\r\n                            // Focus on the last tabbable node in the step.\r\n                            this.currentStepNode.find(tabbableSelector).last().focus();\r\n                        } else {\r\n                            if (this.currentStepConfig.isOrphan) {\r\n                                // Focus on the step - there is no target.\r\n                                this.currentStepNode.focus();\r\n                            } else {\r\n                                // Focus on the step target.\r\n                                stepTarget.focus();\r\n                            }\r\n                        }\r\n                    }\r\n                    e.preventDefault();\r\n                }).call(this);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start the current tour.\r\n     *\r\n     * @method  startTour\r\n     * @param   {Number} startAt Which step number to start at. If not specified, starts at the last point.\r\n     * @chainable\r\n     * @return {Object} this.\r\n     * @fires tool_usertours/tourStart\r\n     * @fires tool_usertours/tourStarted\r\n     */\r\n    startTour(startAt) {\r\n        if (this.storage && typeof startAt === 'undefined') {\r\n            let storageStartValue = this.storage.getItem(this.storageKey);\r\n            if (storageStartValue) {\r\n                let storageStartAt = parseInt(storageStartValue, 10);\r\n                if (storageStartAt <= this.steps.length) {\r\n                    startAt = storageStartAt;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof startAt === 'undefined') {\r\n            startAt = this.getCurrentStepNumber();\r\n        }\r\n\r\n        const tourStartEvent = this.dispatchEvent(eventTypes.tourStart, {startAt}, true);\r\n        if (!tourStartEvent.defaultPrevented) {\r\n            this.gotoStep(startAt);\r\n            this.tourRunning = true;\r\n            this.dispatchEvent(eventTypes.tourStarted, {startAt});\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Restart the tour from the beginning, resetting the completionlag.\r\n     *\r\n     * @method  restartTour\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    restartTour() {\r\n        return this.startTour(0);\r\n    }\r\n\r\n    /**\r\n     * End the current tour.\r\n     *\r\n     * @method  endTour\r\n     * @chainable\r\n     * @return {Object} this.\r\n     * @fires tool_usertours/tourEnd\r\n     * @fires tool_usertours/tourEnded\r\n     */\r\n    endTour() {\r\n        const tourEndEvent = this.dispatchEvent(eventTypes.tourEnd, {}, true);\r\n        if (tourEndEvent.defaultPrevented) {\r\n            return this;\r\n        }\r\n\r\n        if (this.currentStepConfig) {\r\n            let previousTarget = this.getStepTarget(this.currentStepConfig);\r\n            if (previousTarget) {\r\n                if (!previousTarget.attr('tabindex')) {\r\n                    previousTarget.attr('tabindex', '-1');\r\n                }\r\n                previousTarget.focus();\r\n            }\r\n        }\r\n\r\n        this.hide(true);\r\n\r\n        this.tourRunning = false;\r\n        this.dispatchEvent(eventTypes.tourEnded);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Hide any currently visible steps.\r\n     *\r\n     * @method hide\r\n     * @param {Bool} transition Animate the visibility change\r\n     * @chainable\r\n     * @return {Object} this.\r\n     * @fires tool_usertours/stepHide\r\n     * @fires tool_usertours/stepHidden\r\n     */\r\n    hide(transition) {\r\n        const stepHideEvent = this.dispatchEvent(eventTypes.stepHide, {}, true);\r\n        if (stepHideEvent.defaultPrevented) {\r\n            return this;\r\n        }\r\n\r\n        if (this.currentStepNode && this.currentStepNode.length) {\r\n            this.currentStepNode.hide();\r\n            if (this.currentStepPopper) {\r\n                this.currentStepPopper.destroy();\r\n            }\r\n        }\r\n\r\n        // Restore original target configuration.\r\n        if (this.currentStepConfig) {\r\n            let target = this.getStepTarget(this.currentStepConfig);\r\n            if (target) {\r\n                if (target.data('original-labelledby')) {\r\n                    target.attr('aria-labelledby', target.data('original-labelledby'));\r\n                }\r\n\r\n                if (target.data('original-describedby')) {\r\n                    target.attr('aria-describedby', target.data('original-describedby'));\r\n                }\r\n\r\n                if (target.data('original-tabindex')) {\r\n                    target.attr('tabindex', target.data('tabindex'));\r\n                } else {\r\n                    // If the target does not have the tabindex attribute at the beginning. We need to remove it.\r\n                    // We should wait a little here before removing the attribute to prevent the browser from adding it again.\r\n                    window.setTimeout(() => {\r\n                        target.removeAttr('tabindex');\r\n                    }, 400);\r\n                }\r\n            }\r\n\r\n            // Clear the step configuration.\r\n            this.currentStepConfig = null;\r\n        }\r\n\r\n        let fadeTime = 0;\r\n        if (transition) {\r\n            fadeTime = 400;\r\n        }\r\n\r\n        // Remove the backdrop features.\r\n        $('[data-flexitour=\"step-background\"]').remove();\r\n        $('[data-flexitour=\"step-backdrop\"]').removeAttr('data-flexitour');\r\n        $('[data-flexitour=\"backdrop\"]').fadeOut(fadeTime, function() {\r\n            $(this).remove();\r\n        });\r\n\r\n        // Remove aria-describedby and tabindex attributes.\r\n        if (this.currentStepNode && this.currentStepNode.length) {\r\n            let stepId = this.currentStepNode.attr('id');\r\n            if (stepId) {\r\n                let currentStepElement = '[aria-describedby=\"' + stepId + '-body\"]';\r\n                $(currentStepElement).removeAttr('tabindex');\r\n                $(currentStepElement).removeAttr('aria-describedby');\r\n            }\r\n        }\r\n\r\n        // Reset the listeners.\r\n        this.resetStepListeners();\r\n\r\n        this.accessibilityHide();\r\n\r\n        this.dispatchEvent(eventTypes.stepHidden);\r\n\r\n        this.currentStepNode = null;\r\n        this.currentStepPopper = null;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Show the current steps.\r\n     *\r\n     * @method show\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    show() {\r\n        // Show the current step.\r\n        let startAt = this.getCurrentStepNumber();\r\n\r\n        return this.gotoStep(startAt);\r\n    }\r\n\r\n    /**\r\n     * Return the current step node.\r\n     *\r\n     * @method  getStepContainer\r\n     * @return  {jQuery}\r\n     */\r\n    getStepContainer() {\r\n        return $(this.currentStepNode);\r\n    }\r\n\r\n    /**\r\n     * Calculate scrollTop.\r\n     *\r\n     * @method  calculateScrollTop\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @return  {Number}\r\n     */\r\n    calculateScrollTop(stepConfig) {\r\n        let viewportHeight = $(window).height();\r\n        let targetNode = this.getStepTarget(stepConfig);\r\n\r\n        let scrollParent = $(window);\r\n        if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\r\n            scrollParent = targetNode.parents('[data-usertour=\"scroller\"]');\r\n        }\r\n        let scrollTop = scrollParent.scrollTop();\r\n\r\n        if (stepConfig.placement === 'top') {\r\n            // If the placement is top, center scroll at the top of the target.\r\n            scrollTop = targetNode.offset().top - (viewportHeight / 2);\r\n        } else if (stepConfig.placement === 'bottom') {\r\n            // If the placement is bottom, center scroll at the bottom of the target.\r\n            scrollTop = targetNode.offset().top + targetNode.height() + scrollTop - (viewportHeight / 2);\r\n        } else if (targetNode.height() <= (viewportHeight * 0.8)) {\r\n            // If the placement is left/right, and the target fits in the viewport, centre screen on the target\r\n            scrollTop = targetNode.offset().top - ((viewportHeight - targetNode.height()) / 2);\r\n        } else {\r\n            // If the placement is left/right, and the target is bigger than the viewport, set scrollTop to target.top + buffer\r\n            // and change step attachmentTarget to top+.\r\n            scrollTop = targetNode.offset().top - (viewportHeight * 0.2);\r\n        }\r\n\r\n        // Never scroll over the top.\r\n        scrollTop = Math.max(0, scrollTop);\r\n\r\n        // Never scroll beyond the bottom.\r\n        scrollTop = Math.min($(document).height() - viewportHeight, scrollTop);\r\n\r\n        return Math.ceil(scrollTop);\r\n    }\r\n\r\n    /**\r\n     * Calculate dialogue position for page middle.\r\n     *\r\n     * @param {jQuery} currentStepNode Current step node\r\n     * @method  calculateScrollTop\r\n     */\r\n    calculateStepPositionInPage(currentStepNode) {\r\n        let top = MINSPACING;\r\n        const viewportHeight = $(window).height();\r\n        const stepHeight = currentStepNode.height();\r\n        const viewportWidth = $(window).width();\r\n        const stepWidth = currentStepNode.width();\r\n        if (viewportHeight >= (stepHeight + (MINSPACING * 2))) {\r\n            top = Math.ceil((viewportHeight - stepHeight) / 2);\r\n        } else {\r\n            const headerHeight = currentStepNode.find('.modal-header').first().outerHeight() ?? 0;\r\n            const footerHeight = currentStepNode.find('.modal-footer').first().outerHeight() ?? 0;\r\n            const currentStepBody = currentStepNode.find('[data-placeholder=\"body\"]').first();\r\n            const maxHeight = viewportHeight - (MINSPACING * 2) - headerHeight - footerHeight;\r\n            currentStepBody.css({\r\n                'max-height': maxHeight + 'px',\r\n                'overflow': 'auto',\r\n            });\r\n        }\r\n        currentStepNode.offset({\r\n            top: top,\r\n            left: Math.ceil((viewportWidth - stepWidth) / 2)\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Position the step on the page.\r\n     *\r\n     * @method  positionStep\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    positionStep(stepConfig) {\r\n        let content = this.currentStepNode;\r\n        let thisT = this;\r\n        if (!content || !content.length) {\r\n            // Unable to find the step node.\r\n            return this;\r\n        }\r\n\r\n        stepConfig.placement = this.recalculatePlacement(stepConfig);\r\n        let flipBehavior;\r\n        switch (stepConfig.placement) {\r\n            case 'left':\r\n                flipBehavior = ['left', 'right', 'top', 'bottom'];\r\n                break;\r\n            case 'right':\r\n                flipBehavior = ['right', 'left', 'top', 'bottom'];\r\n                break;\r\n            case 'top':\r\n                flipBehavior = ['top', 'bottom', 'right', 'left'];\r\n                break;\r\n            case 'bottom':\r\n                flipBehavior = ['bottom', 'top', 'right', 'left'];\r\n                break;\r\n            default:\r\n                flipBehavior = 'flip';\r\n                break;\r\n        }\r\n\r\n        let target = this.getStepTarget(stepConfig);\r\n        var config = {\r\n            placement: stepConfig.placement + '-start',\r\n            removeOnDestroy: true,\r\n            modifiers: {\r\n                flip: {\r\n                    behaviour: flipBehavior,\r\n                },\r\n                arrow: {\r\n                    element: '[data-role=\"arrow\"]',\r\n                },\r\n            },\r\n            onCreate: function(data) {\r\n                recalculateArrowPosition(data);\r\n                recalculateStepPosition(data);\r\n            },\r\n            onUpdate: function(data) {\r\n                recalculateArrowPosition(data);\r\n                if (thisT.possitionNeedToBeRecalculated) {\r\n                    thisT.recalculatedNo++;\r\n                    thisT.possitionNeedToBeRecalculated = false;\r\n                    recalculateStepPosition(data);\r\n                }\r\n            },\r\n        };\r\n\r\n        let recalculateArrowPosition = function(data) {\r\n            let placement = data.placement.split('-')[0];\r\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n            const arrowElement = data.instance.popper.querySelector('[data-role=\"arrow\"]');\r\n            const stepElement = $(data.instance.popper.querySelector('[data-role=\"flexitour-step\"]'));\r\n            if (isVertical) {\r\n                let arrowHeight = parseFloat(window.getComputedStyle(arrowElement).height);\r\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).top);\r\n                let popperHeight = parseFloat(window.getComputedStyle(data.instance.popper).height);\r\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).top);\r\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\r\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\r\n                let arrowPos = arrowOffset + (arrowHeight / 2);\r\n                let maxPos = popperHeight + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\r\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\r\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\r\n                    let newArrowPos = 0;\r\n                    if (arrowPos > (popperHeight / 2)) {\r\n                        newArrowPos = maxPos - arrowHeight;\r\n                    } else {\r\n                        newArrowPos = minPos + arrowHeight;\r\n                    }\r\n                    $(arrowElement).css('top', newArrowPos);\r\n                }\r\n            } else {\r\n                let arrowWidth = parseFloat(window.getComputedStyle(arrowElement).width);\r\n                let arrowOffset = parseFloat(window.getComputedStyle(arrowElement).left);\r\n                let popperWidth = parseFloat(window.getComputedStyle(data.instance.popper).width);\r\n                let popperOffset = parseFloat(window.getComputedStyle(data.instance.popper).left);\r\n                let popperBorderWidth = parseFloat(stepElement.css('borderTopWidth'));\r\n                let popperBorderRadiusWidth = parseFloat(stepElement.css('borderTopLeftRadius')) * 2;\r\n                let arrowPos = arrowOffset + (arrowWidth / 2);\r\n                let maxPos = popperWidth + popperOffset - popperBorderWidth - popperBorderRadiusWidth;\r\n                let minPos = popperOffset + popperBorderWidth + popperBorderRadiusWidth;\r\n                if (arrowPos >= maxPos || arrowPos <= minPos) {\r\n                    let newArrowPos = 0;\r\n                    if (arrowPos > (popperWidth / 2)) {\r\n                        newArrowPos = maxPos - arrowWidth;\r\n                    } else {\r\n                        newArrowPos = minPos + arrowWidth;\r\n                    }\r\n                    $(arrowElement).css('left', newArrowPos);\r\n                }\r\n            }\r\n        };\r\n\r\n        const recalculateStepPosition = function(data) {\r\n            const placement = data.placement.split('-')[0];\r\n            const isVertical = ['left', 'right'].indexOf(placement) !== -1;\r\n            const popperElement = $(data.instance.popper);\r\n            const targetElement = $(data.instance.reference);\r\n            const arrowElement = popperElement.find('[data-role=\"arrow\"]');\r\n            const stepElement = popperElement.find('[data-role=\"flexitour-step\"]');\r\n            const viewportHeight = $(window).height();\r\n            const viewportWidth = $(window).width();\r\n            const arrowHeight = parseFloat(arrowElement.outerHeight(true));\r\n            const popperHeight = parseFloat(popperElement.outerHeight(true));\r\n            const targetHeight = parseFloat(targetElement.outerHeight(true));\r\n            const arrowWidth = parseFloat(arrowElement.outerWidth(true));\r\n            const popperWidth = parseFloat(popperElement.outerWidth(true));\r\n            const targetWidth = parseFloat(targetElement.outerWidth(true));\r\n            let maxHeight;\r\n\r\n            if (thisT.recalculatedNo > 1) {\r\n                // The current screen is too small, and cannot fit with the original placement.\r\n                // We should set the placement to auto so the PopperJS can calculate the perfect placement.\r\n                thisT.currentStepPopper.options.placement = isVertical ? 'auto-left' : 'auto-bottom';\r\n            }\r\n            if (thisT.recalculatedNo > 2) {\r\n                // Return here to prevent recursive calling.\r\n                return;\r\n            }\r\n\r\n            if (isVertical) {\r\n                // Find the best place to put the tour: Left of right.\r\n                const leftSpace = targetElement.offset().left > 0 ? targetElement.offset().left : 0;\r\n                const rightSpace = viewportWidth - leftSpace - targetWidth;\r\n                const remainingSpace = leftSpace >= rightSpace ? leftSpace : rightSpace;\r\n                maxHeight = viewportHeight - MINSPACING * 2;\r\n                if (remainingSpace < (popperWidth + arrowWidth)) {\r\n                    const maxWidth = remainingSpace - MINSPACING - arrowWidth;\r\n                    if (maxWidth > 0) {\r\n                        popperElement.css({\r\n                            'max-width': maxWidth + 'px',\r\n                        });\r\n                        // Not enough space, flag true to make Popper to recalculate the position.\r\n                        thisT.possitionNeedToBeRecalculated = true;\r\n                    }\r\n                } else if (maxHeight < popperHeight) {\r\n                    // Check if the Popper's height can fit the viewport height or not.\r\n                    // If not, set the correct max-height value for the Popper element.\r\n                    popperElement.css({\r\n                        'max-height': maxHeight + 'px',\r\n                    });\r\n                }\r\n            } else {\r\n                // Find the best place to put the tour: Top of bottom.\r\n                const topSpace = targetElement.offset().top > 0 ? targetElement.offset().top : 0;\r\n                const bottomSpace = viewportHeight - topSpace - targetHeight;\r\n                const remainingSpace = topSpace >= bottomSpace ? topSpace : bottomSpace;\r\n                maxHeight = remainingSpace - MINSPACING - arrowHeight;\r\n                if (remainingSpace < (popperHeight + arrowHeight)) {\r\n                    // Not enough space, flag true to make Popper to recalculate the position.\r\n                    thisT.possitionNeedToBeRecalculated = true;\r\n                }\r\n            }\r\n\r\n            // Check if the Popper's height can fit the viewport height or not.\r\n            // If not, set the correct max-height value for the body.\r\n            const currentStepBody = stepElement.find('[data-placeholder=\"body\"]').first();\r\n            const headerEle = stepElement.find('.modal-header').first();\r\n            const footerEle = stepElement.find('.modal-footer').first();\r\n            const headerHeight = headerEle.outerHeight(true) ?? 0;\r\n            const footerHeight = footerEle.outerHeight(true) ?? 0;\r\n            maxHeight = maxHeight - headerHeight - footerHeight;\r\n            if (maxHeight > 0) {\r\n                headerEle.removeClass('minimal');\r\n                footerEle.removeClass('minimal');\r\n                currentStepBody.css({\r\n                    'max-height': maxHeight + 'px',\r\n                    'overflow': 'auto',\r\n                });\r\n            } else {\r\n                headerEle.addClass('minimal');\r\n                footerEle.addClass('minimal');\r\n            }\r\n            // Call the Popper update method to update the position.\r\n            thisT.currentStepPopper.update();\r\n        };\r\n\r\n        let background = $('[data-flexitour=\"step-background\"]');\r\n        if (background.length) {\r\n            target = background;\r\n        }\r\n        this.currentStepPopper = new Popper(target, content[0], config);\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * For left/right placement, checks that there is room for the step at current window size.\r\n     *\r\n     * If there is not enough room, changes placement to 'top'.\r\n     *\r\n     * @method  recalculatePlacement\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @return  {String}                    The placement after recalculate\r\n     */\r\n    recalculatePlacement(stepConfig) {\r\n        const buffer = 10;\r\n        const arrowWidth = 16;\r\n        let target = this.getStepTarget(stepConfig);\r\n        let widthContent = this.currentStepNode.width() + arrowWidth;\r\n        let targetOffsetLeft = target.offset().left - buffer;\r\n        let targetOffsetRight = target.offset().left + target.width() + buffer;\r\n        let placement = stepConfig.placement;\r\n\r\n        if (['left', 'right'].indexOf(placement) !== -1) {\r\n            if ((targetOffsetLeft < (widthContent + buffer)) &&\r\n                ((targetOffsetRight + widthContent + buffer) > document.documentElement.clientWidth)) {\r\n                placement = 'top';\r\n            }\r\n        }\r\n        return placement;\r\n    }\r\n\r\n    /**\r\n     * Add the backdrop.\r\n     *\r\n     * @method  positionBackdrop\r\n     * @param   {Object}    stepConfig      The step configuration of the step\r\n     * @chainable\r\n     * @return {Object} this.\r\n     */\r\n    positionBackdrop(stepConfig) {\r\n        if (stepConfig.backdrop) {\r\n            this.currentStepConfig.hasBackdrop = true;\r\n            let backdrop = $('<div data-flexitour=\"backdrop\"></div>');\r\n\r\n            if (stepConfig.zIndex) {\r\n                if (stepConfig.attachPoint === 'append') {\r\n                    stepConfig.attachTo.append(backdrop);\r\n                } else {\r\n                    backdrop.insertAfter(stepConfig.attachTo);\r\n                }\r\n            } else {\r\n                $('body').append(backdrop);\r\n            }\r\n\r\n            if (this.isStepActuallyVisible(stepConfig)) {\r\n                // The step has a visible target.\r\n                // Punch a hole through the backdrop.\r\n                let background = $('[data-flexitour=\"step-background\"]');\r\n                if (!background.length) {\r\n                    background = $('<div data-flexitour=\"step-background\"></div>');\r\n                }\r\n\r\n                let targetNode = this.getStepTarget(stepConfig);\r\n\r\n                let buffer = 10;\r\n\r\n                let colorNode = targetNode;\r\n                if (buffer) {\r\n                    colorNode = $('body');\r\n                }\r\n\r\n                let drawertop = 0;\r\n                if (targetNode.parents('[data-usertour=\"scroller\"]').length) {\r\n                    const scrollerElement = targetNode.parents('[data-usertour=\"scroller\"]');\r\n                    const navigationBuffer = scrollerElement.offset().top;\r\n                    if (scrollerElement.scrollTop() >= navigationBuffer) {\r\n                        drawertop = scrollerElement.scrollTop() - navigationBuffer;\r\n                        background.css({\r\n                            position: 'fixed'\r\n                        });\r\n                    }\r\n                }\r\n\r\n                background.css({\r\n                    width: targetNode.outerWidth() + buffer + buffer,\r\n                    height: targetNode.outerHeight() + buffer + buffer,\r\n                    left: targetNode.offset().left - buffer,\r\n                    top: targetNode.offset().top + drawertop - buffer,\r\n                    backgroundColor: this.calculateInherittedBackgroundColor(colorNode),\r\n                });\r\n\r\n                if (targetNode.offset().left < buffer) {\r\n                    background.css({\r\n                        width: targetNode.outerWidth() + targetNode.offset().left + buffer,\r\n                        left: targetNode.offset().left,\r\n                    });\r\n                }\r\n\r\n                if ((targetNode.offset().top + drawertop) < buffer) {\r\n                    background.css({\r\n                        height: targetNode.outerHeight() + targetNode.offset().top + buffer,\r\n                        top: targetNode.offset().top,\r\n                    });\r\n                }\r\n\r\n                let targetRadius = targetNode.css('borderRadius');\r\n                if (targetRadius && targetRadius !== $('body').css('borderRadius')) {\r\n                    background.css('borderRadius', targetRadius);\r\n                }\r\n\r\n                let targetPosition = this.calculatePosition(targetNode);\r\n                if (targetPosition === 'absolute') {\r\n                    background.css('position', 'fixed');\r\n                }\r\n\r\n                let fader = background.clone();\r\n                fader.css({\r\n                    backgroundColor: backdrop.css('backgroundColor'),\r\n                    opacity: backdrop.css('opacity'),\r\n                });\r\n                fader.attr('data-flexitour', 'step-background-fader');\r\n\r\n                if (targetNode.parents('[data-region=\"fixed-drawer\"]').length) {\r\n                    let targetClone = targetNode.clone();\r\n                    background.append(targetClone);\r\n                }\r\n\r\n                if (stepConfig.zIndex) {\r\n                    if (stepConfig.attachPoint === 'append') {\r\n                        stepConfig.attachTo.append(background);\r\n                    } else {\r\n                        fader.insertAfter(stepConfig.attachTo);\r\n                        background.insertAfter(stepConfig.attachTo);\r\n                    }\r\n                } else {\r\n                    $('body').append(fader);\r\n                    $('body').append(background);\r\n                }\r\n\r\n                // Add the backdrop data to the actual target.\r\n                // This is the part which actually does the work.\r\n                targetNode.attr('data-flexitour', 'step-backdrop');\r\n\r\n                if (stepConfig.zIndex) {\r\n                    backdrop.css('zIndex', stepConfig.zIndex);\r\n                    background.css('zIndex', stepConfig.zIndex + 1);\r\n                    targetNode.css('zIndex', stepConfig.zIndex + 2);\r\n                }\r\n\r\n                fader.fadeOut('2000', function() {\r\n                    $(this).remove();\r\n                });\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inheritted z-index.\r\n     *\r\n     * @method  calculateZIndex\r\n     * @param   {jQuery}    elem                        The element to calculate z-index for\r\n     * @return  {Number}                                Calculated z-index\r\n     */\r\n    calculateZIndex(elem) {\r\n        elem = $(elem);\r\n        while (elem.length && elem[0] !== document) {\r\n            // Ignore z-index if position is set to a value where z-index is ignored by the browser\r\n            // This makes behavior of this function consistent across browsers\r\n            // WebKit always returns auto if the element is positioned.\r\n            let position = elem.css(\"position\");\r\n            if (position === \"absolute\" || position === \"relative\" || position === \"fixed\") {\r\n                // IE returns 0 when zIndex is not specified\r\n                // other browsers return a string\r\n                // we ignore the case of nested elements with an explicit value of 0\r\n                // <div style=\"z-index: -10;\"><div style=\"z-index: 0;\"></div></div>\r\n                let value = parseInt(elem.css(\"zIndex\"), 10);\r\n                if (!isNaN(value) && value !== 0) {\r\n                    return value;\r\n                }\r\n            }\r\n            elem = elem.parent();\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inheritted background colour.\r\n     *\r\n     * @method  calculateInherittedBackgroundColor\r\n     * @param   {jQuery}    elem                        The element to calculate colour for\r\n     * @return  {String}                                Calculated background colour\r\n     */\r\n    calculateInherittedBackgroundColor(elem) {\r\n        // Use a fake node to compare each element against.\r\n        let fakeNode = $('<div>').hide();\r\n        $('body').append(fakeNode);\r\n        let fakeElemColor = fakeNode.css('backgroundColor');\r\n        fakeNode.remove();\r\n\r\n        elem = $(elem);\r\n        while (elem.length && elem[0] !== document) {\r\n            let color = elem.css('backgroundColor');\r\n            if (color !== fakeElemColor) {\r\n                return color;\r\n            }\r\n            elem = elem.parent();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Calculate the inheritted position.\r\n     *\r\n     * @method  calculatePosition\r\n     * @param   {jQuery}    elem                        The element to calculate position for\r\n     * @return  {String}                                Calculated position\r\n     */\r\n    calculatePosition(elem) {\r\n        elem = $(elem);\r\n        while (elem.length && elem[0] !== document) {\r\n            let position = elem.css('position');\r\n            if (position !== 'static') {\r\n                return position;\r\n            }\r\n            elem = elem.parent();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Perform accessibility changes for step shown.\r\n     *\r\n     * This will add aria-hidden=\"true\" to all siblings and parent siblings.\r\n     *\r\n     * @method  accessibilityShow\r\n     */\r\n    accessibilityShow() {\r\n        let stateHolder = 'data-has-hidden';\r\n        let attrName = 'aria-hidden';\r\n        let hideFunction = function(child) {\r\n            let flexitourRole = child.data('flexitour');\r\n            if (flexitourRole) {\r\n                switch (flexitourRole) {\r\n                    case 'container':\r\n                    case 'target':\r\n                        return;\r\n                }\r\n            }\r\n\r\n            let hidden = child.attr(attrName);\r\n            if (!hidden) {\r\n                child.attr(stateHolder, true);\r\n                Aria.hide(child);\r\n            }\r\n        };\r\n\r\n        this.currentStepNode.siblings().each(function(index, node) {\r\n            hideFunction($(node));\r\n        });\r\n        this.currentStepNode.parentsUntil('body').siblings().each(function(index, node) {\r\n            hideFunction($(node));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Perform accessibility changes for step hidden.\r\n     *\r\n     * This will remove any newly added aria-hidden=\"true\".\r\n     *\r\n     * @method  accessibilityHide\r\n     */\r\n    accessibilityHide() {\r\n        let stateHolder = 'data-has-hidden';\r\n        let showFunction = function(child) {\r\n            let hidden = child.attr(stateHolder);\r\n            if (typeof hidden !== 'undefined') {\r\n                child.removeAttr(stateHolder);\r\n                Aria.unhide(child);\r\n            }\r\n        };\r\n\r\n        $('[' + stateHolder + ']').each(function(index, node) {\r\n            showFunction($(node));\r\n        });\r\n    }\r\n};\r\n\r\nexport default Tour;\r\n"],"names":["constructor","config","init","eventHandlers","reset","originalConfiguration","configure","apply","this","arguments","possitionNeedToBeRecalculated","recalculatedNo","storage","window","sessionStorage","storageKey","tourName","e","hide","resetStepListeners","steps","currentStepNumber","eventName","forEach","handler","addEventHandler","resetStepDefaults","template","templateContent","checkMinimumRequirements","Error","length","loadOriginalConfiguration","stepDefaults","setStepDefaults","extend","element","placement","delay","moveOnClick","moveAfterTime","orphan","direction","getCurrentStepNumber","parseInt","setCurrentStepNumber","stepNumber","setItem","code","DOMException","QUOTA_EXCEEDED_ERR","removeItem","getNextStepNumber","nextStepNumber","isStepPotentiallyVisible","getStepConfig","getPreviousStepNumber","previousStepNumber","isLastStep","stepConfig","isStepActuallyVisible","getPotentiallyVisibleSteps","position","result","stepId","stepid","isCSSAllowed","target","getStepTarget","is","testCSSElement","document","createElement","classList","add","body","appendChild","isAllowed","getComputedStyle","display","remove","next","gotoStep","previous","endTour","_gotoStep","delayed","setTimeout","bind","fn","dispatchEvent","eventTypes","stepRender","defaultPrevented","renderStep","stepRendered","normalizeStepConfig","$","reflex","moveAfterClick","content","attachTo","attachPoint","first","detail","cancelable","tour","push","processStepListeners","listeners","node","currentStepNode","args","proxy","handleKeyDown","targetNode","parents","listener","on","off","currentStepConfig","getTemplateContent","find","html","title","nextBtn","endBtn","removeClass","addClass","prop","then","value","catch","attr","displaystepnumbers","stepsPotentiallyVisible","totalStepsPotentiallyVisible","total","addStepToPage","clone","animationTarget","stop","data","zIndex","calculateZIndex","css","positionBackdrop","append","top","left","animate","scrollTop","calculateScrollTop","promise","positionStep","revealStep","isOrphan","currentStepPopper","Popper","removeOnDestroy","arrowElement","modifiers","enabled","applyStyle","onLoad","onCreate","images","calculateStepPositionInPage","fadeIn","announceStep","focus","bodyRegion","headerRegion","accessibilityShow","tabbableSelector","keyCode","hasBackdrop","currentIndex","nextIndex","nextNode","focusRelevant","activeElement","stepTarget","tabbableNodes","dialogContainer","filter","index","has","each","shiftKey","closest","last","preventDefault","call","startTour","startAt","storageStartValue","getItem","storageStartAt","tourStart","tourRunning","tourStarted","restartTour","tourEnd","previousTarget","tourEnded","transition","stepHide","destroy","removeAttr","fadeTime","fadeOut","currentStepElement","accessibilityHide","stepHidden","show","getStepContainer","viewportHeight","height","scrollParent","offset","Math","max","min","ceil","stepHeight","viewportWidth","width","stepWidth","MINSPACING","maxHeight","outerHeight","flipBehavior","thisT","recalculatePlacement","flip","behaviour","arrow","recalculateArrowPosition","recalculateStepPosition","onUpdate","split","isVertical","indexOf","instance","popper","querySelector","stepElement","arrowHeight","parseFloat","arrowOffset","popperHeight","popperOffset","popperBorderWidth","popperBorderRadiusWidth","arrowPos","maxPos","minPos","newArrowPos","arrowWidth","popperWidth","popperElement","targetElement","reference","targetHeight","outerWidth","targetWidth","options","leftSpace","rightSpace","remainingSpace","maxWidth","topSpace","bottomSpace","currentStepBody","headerEle","footerEle","update","background","widthContent","targetOffsetLeft","targetOffsetRight","documentElement","clientWidth","backdrop","insertAfter","buffer","colorNode","drawertop","scrollerElement","navigationBuffer","backgroundColor","calculateInherittedBackgroundColor","targetRadius","calculatePosition","fader","opacity","targetClone","elem","isNaN","parent","fakeNode","fakeElemColor","color","hideFunction","child","flexitourRole","Aria","siblings","parentsUntil","unhide"],"mappings":"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"}