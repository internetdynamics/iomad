{"version":3,"file":"validator.min.js","sources":["../src/validator.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Our validator that splits the user's input then fires off to a webservice\r\n *\r\n * @module     tool_moodlenet/validator\r\n * @copyright  2020 Mathew May <mathew.solutions>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/ajax', 'core/str', 'core/notification'], function($, Ajax, Str, Notification) {\r\n    /**\r\n     * Handle form validation\r\n     *\r\n     * @method validation\r\n     * @param {HTMLElement} inputElement The element the user entered text into.\r\n     * @return {Promise} Was the users' entry a valid profile URL?\r\n     */\r\n    var validation = function validation(inputElement) {\r\n        var inputValue = inputElement.value;\r\n\r\n        // They didn't submit anything or they gave us a simple string that we can't do anything with.\r\n        if (inputValue === \"\" || !inputValue.includes(\"@\")) {\r\n            // Create a promise and immediately reject it.\r\n            $.when(Str.get_string('profilevalidationerror', 'tool_moodlenet')).then(function(strings) {\r\n                return Promise.reject().catch(function() {\r\n                    return {result: false, message: strings[0]};\r\n                });\r\n            }).fail(Notification.exception);\r\n        }\r\n\r\n        return Ajax.call([{\r\n            methodname: 'tool_moodlenet_verify_webfinger',\r\n            args: {\r\n                profileurl: inputValue,\r\n                course: inputElement.dataset.courseid,\r\n                section: inputElement.dataset.sectionid\r\n            }\r\n        }])[0].then(function(result) {\r\n            return result;\r\n        }).catch();\r\n    };\r\n    return {\r\n        validation: validation,\r\n    };\r\n});\r\n"],"names":["define","$","Ajax","Str","Notification","validation","inputElement","inputValue","value","includes","when","get_string","then","strings","Promise","reject","catch","result","message","fail","exception","call","methodname","args","profileurl","course","dataset","courseid","section","sectionid"],"mappings":";;;;;;;AAsBAA,kCAAO,CAAC,SAAU,YAAa,WAAY,sBAAsB,SAASC,EAAGC,KAAMC,IAAKC,oBAgC7E,CACHC,WAzBa,SAAoBC,kBAC7BC,WAAaD,aAAaE,YAGX,KAAfD,YAAsBA,WAAWE,SAAS,MAE1CR,EAAES,KAAKP,IAAIQ,WAAW,yBAA0B,mBAAmBC,MAAK,SAASC,gBACtEC,QAAQC,SAASC,OAAM,iBACnB,CAACC,QAAQ,EAAOC,QAASL,QAAQ,UAE7CM,KAAKf,aAAagB,WAGlBlB,KAAKmB,KAAK,CAAC,CACdC,WAAY,kCACZC,KAAM,CACFC,WAAYjB,WACZkB,OAAQnB,aAAaoB,QAAQC,SAC7BC,QAAStB,aAAaoB,QAAQG,cAElC,GAAGjB,MAAK,SAASK,eACVA,UACRD"}