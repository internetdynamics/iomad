{"version":3,"file":"dropdown.min.js","sources":["../src/dropdown.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Dropdown handler for the Event monitor tool.\r\n *\r\n * @module     tool_monitor/dropdown\r\n * @copyright  2023 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nexport const init = () => {\r\n    const componentSelector = document.querySelector('[data-field=\"component\"]');\r\n    const eventSelector = document.querySelector('[data-field=\"eventname\"]');\r\n\r\n    const matchesComponent = (component, event) => event.startsWith(`\\\\${component}\\\\`);\r\n\r\n    // Helper to fetch events for a component.\r\n    const getEventsForComponent = (component) => {\r\n        const events = Object.entries(JSON.parse(eventSelector.dataset.eventlist));\r\n        return events.filter(([eventName], index) => {\r\n            // Always return the Choose... option.\r\n            if (index === 0) {\r\n                return true;\r\n            }\r\n            return matchesComponent(component, eventName);\r\n        });\r\n    };\r\n\r\n    // Helper to fetch the <option> elements for a compoment.\r\n    const getEventOptionsForComponent = (component) => {\r\n        return getEventsForComponent(component).map(([name, description]) => {\r\n            const option = document.createElement('option');\r\n            option.value = name;\r\n            option.text = description;\r\n            return option;\r\n        });\r\n    };\r\n\r\n    // Change handler for the component selector.\r\n    componentSelector.addEventListener('change', () => {\r\n        eventSelector.innerHTML = '';\r\n        getEventOptionsForComponent(componentSelector.value).forEach((option) => {\r\n            eventSelector.options.add(option);\r\n        });\r\n        eventSelector.options.value = '';\r\n    });\r\n\r\n    // Set the initial value.\r\n    // Rather than emptying the list and re-adding as the change handler does, remove any options that don't match.\r\n    // This means that the current selection (when editing) is maintained.\r\n    const initialCount = eventSelector.options.length;\r\n    [...eventSelector.options].reverse().forEach((option, index) => {\r\n        if (option.value === '') {\r\n            // The first value is the \"Choose...\" pseudo-option.\r\n            return;\r\n        }\r\n        if (!matchesComponent(componentSelector.value, option.value)) {\r\n            eventSelector.options.remove(initialCount - index - 1);\r\n        }\r\n    });\r\n};\r\n"],"names":["componentSelector","document","querySelector","eventSelector","matchesComponent","component","event","startsWith","getEventOptionsForComponent","Object","entries","JSON","parse","dataset","eventlist","filter","index","eventName","getEventsForComponent","map","_ref2","name","description","option","createElement","value","text","addEventListener","innerHTML","forEach","options","add","initialCount","length","reverse","remove"],"mappings":"0JAuBoB,WACVA,kBAAoBC,SAASC,cAAc,4BAC3CC,cAAgBF,SAASC,cAAc,4BAEvCE,iBAAmB,CAACC,UAAWC,QAAUA,MAAMC,uBAAgBF,iBAe/DG,4BAA+BH,WAZNA,CAAAA,WACZI,OAAOC,QAAQC,KAAKC,MAAMT,cAAcU,QAAQC,YACjDC,QAAO,MAAcC,aAAZC,uBAEL,IAAVD,OAGGZ,iBAAiBC,UAAWY,cAMhCC,CAAsBb,WAAWc,KAAIC,YAAEC,KAAMC,yBAC1CC,OAAStB,SAASuB,cAAc,iBACtCD,OAAOE,MAAQJ,KACfE,OAAOG,KAAOJ,YACPC,UAKfvB,kBAAkB2B,iBAAiB,UAAU,KACzCxB,cAAcyB,UAAY,GAC1BpB,4BAA4BR,kBAAkByB,OAAOI,SAASN,SAC1DpB,cAAc2B,QAAQC,IAAIR,WAE9BpB,cAAc2B,QAAQL,MAAQ,YAM5BO,aAAe7B,cAAc2B,QAAQG,WACvC9B,cAAc2B,SAASI,UAAUL,SAAQ,CAACN,OAAQP,SAC7B,KAAjBO,OAAOE,QAINrB,iBAAiBJ,kBAAkByB,MAAOF,OAAOE,QAClDtB,cAAc2B,QAAQK,OAAOH,aAAehB,MAAQ"}