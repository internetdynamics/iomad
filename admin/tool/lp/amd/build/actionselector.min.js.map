{"version":3,"file":"actionselector.min.js","sources":["../src/actionselector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Action selector.\r\n *\r\n * To handle 'save' events use: actionselector.on('save')\r\n * This will receive the information to display in popup.\r\n * The actions have the format [{'text': sometext, 'value' : somevalue}].\r\n *\r\n * @module     tool_lp/actionselector\r\n * @copyright  2016 Serge Gauthier - <serge.gauthier.2@umontreal.ca>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery',\r\n        'core/notification',\r\n        'core/ajax',\r\n        'core/templates',\r\n        'tool_lp/dialogue',\r\n        'tool_lp/event_base'],\r\n        function($, Notification, Ajax, Templates, Dialogue, EventBase) {\r\n\r\n    /**\r\n     * Action selector class.\r\n     *\r\n     * @class tool_lp/actionselector\r\n     * @param {String} title The title of popup.\r\n     * @param {String} message The message to display.\r\n     * @param {object} actions The actions that can be selected.\r\n     * @param {String} confirm Text for confirm button.\r\n     * @param {String} cancel Text for cancel button.\r\n     */\r\n    var ActionSelector = function(title, message, actions, confirm, cancel) {\r\n        var self = this;\r\n\r\n        EventBase.prototype.constructor.apply(this, []);\r\n        self._title = title;\r\n        self._message = message;\r\n        self._actions = actions;\r\n        self._confirm = confirm;\r\n        self._cancel = cancel;\r\n        self._selectedValue = null;\r\n        self._reset();\r\n    };\r\n\r\n    ActionSelector.prototype = Object.create(EventBase.prototype);\r\n\r\n    /** @property {String} The value that was selected. */\r\n    ActionSelector.prototype._selectedValue = null;\r\n    /** @property {Dialogue} The reference to the dialogue. */\r\n    ActionSelector.prototype._popup = null;\r\n    /** @property {String} The title of popup. */\r\n    ActionSelector.prototype._title = null;\r\n    /** @property {String} The message in popup. */\r\n    ActionSelector.prototype._message = null;\r\n    /** @property {object} The information for radion buttons. */\r\n    ActionSelector.prototype._actions = null;\r\n    /** @property {String} The text for confirm button. */\r\n    ActionSelector.prototype._confirm = null;\r\n    /** @property {String} The text for cancel button. */\r\n    ActionSelector.prototype._cancel = null;\r\n\r\n    /**\r\n     * Hook to executed after the view is rendered.\r\n     *\r\n     * @method _afterRender\r\n     */\r\n    ActionSelector.prototype._afterRender = function() {\r\n        var self = this;\r\n\r\n        // Confirm button is disabled until a choice is done.\r\n        self._find('[data-action=\"action-selector-confirm\"]').attr('disabled', 'disabled');\r\n\r\n        // Add listener for radio buttons change.\r\n        self._find('[data-region=\"action-selector-radio-buttons\"]').change(function() {\r\n            self._selectedValue = $(\"input[type='radio']:checked\").val();\r\n            self._find('[data-action=\"action-selector-confirm\"]').removeAttr('disabled');\r\n            self._refresh.bind(self);\r\n        });\r\n\r\n        // Add listener for cancel.\r\n        self._find('[data-action=\"action-selector-cancel\"]').click(function(e) {\r\n            e.preventDefault();\r\n            self.close();\r\n        });\r\n\r\n        // Add listener for confirm.\r\n        self._find('[data-action=\"action-selector-confirm\"]').click(function(e) {\r\n            e.preventDefault();\r\n            if (!self._selectedValue.length) {\r\n                return;\r\n            }\r\n            self._trigger('save', {action: self._selectedValue});\r\n            self.close();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Close the dialogue.\r\n     *\r\n     * @method close\r\n     */\r\n    ActionSelector.prototype.close = function() {\r\n        var self = this;\r\n        self._popup.close();\r\n        self._reset();\r\n    };\r\n\r\n    /**\r\n     * Opens the action selector.\r\n     *\r\n     * @method display\r\n     * @return {Promise}\r\n     */\r\n    ActionSelector.prototype.display = function() {\r\n        var self = this;\r\n        return self._render().then(function(html) {\r\n            self._popup = new Dialogue(\r\n                self._title,\r\n                html,\r\n                self._afterRender.bind(self)\r\n            );\r\n            return;\r\n        }).fail(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Find a node in the dialogue.\r\n     *\r\n     * @param {String} selector\r\n     * @return {JQuery} The node\r\n     * @method _find\r\n     */\r\n    ActionSelector.prototype._find = function(selector) {\r\n        return $(this._popup.getContent()).find(selector);\r\n    };\r\n\r\n    /**\r\n     * Refresh the view.\r\n     *\r\n     * @method _refresh\r\n     * @return {Promise}\r\n     */\r\n    ActionSelector.prototype._refresh = function() {\r\n        var self = this;\r\n        return self._render().then(function(html) {\r\n            self._find('[data-region=\"action-selector\"]').replaceWith(html);\r\n            self._afterRender();\r\n            return;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render the dialogue.\r\n     *\r\n     * @method _render\r\n     * @return {Promise}\r\n     */\r\n    ActionSelector.prototype._render = function() {\r\n        var self = this;\r\n        var choices = [];\r\n        for (var i in self._actions) {\r\n            choices.push(self._actions[i]);\r\n        }\r\n        var content = {'message': self._message, 'choices': choices,\r\n            'confirm': self._confirm, 'cancel': self._cancel};\r\n\r\n        return Templates.render('tool_lp/action_selector', content);\r\n    };\r\n\r\n    /**\r\n     * Reset the dialogue properties.\r\n     *\r\n     * This does not reset everything, just enough to reset the UI.\r\n     *\r\n     * @method _reset\r\n     */\r\n    ActionSelector.prototype._reset = function() {\r\n        this._popup = null;\r\n        this._selectedValue = '';\r\n    };\r\n\r\n    return ActionSelector;\r\n\r\n});\r\n"],"names":["define","$","Notification","Ajax","Templates","Dialogue","EventBase","ActionSelector","title","message","actions","confirm","cancel","prototype","constructor","apply","this","_title","_message","_actions","_confirm","_cancel","_selectedValue","_reset","Object","create","_popup","_afterRender","self","_find","attr","change","val","removeAttr","_refresh","bind","click","e","preventDefault","close","length","_trigger","action","display","_render","then","html","fail","exception","selector","getContent","find","replaceWith","choices","i","push","content","render"],"mappings":";;;;;;;;;;;AA2BAA,gCAAO,CAAC,SACA,oBACA,YACA,iBACA,mBACA,uBACA,SAASC,EAAGC,aAAcC,KAAMC,UAAWC,SAAUC,eAYrDC,eAAiB,SAASC,MAAOC,QAASC,QAASC,QAASC,QAG5DN,UAAUO,UAAUC,YAAYC,MAAMC,KAAM,IAFjCA,KAGNC,OAAST,MAHHQ,KAINE,SAAWT,QAJLO,KAKNG,SAAWT,QALLM,KAMNI,SAAWT,QANLK,KAONK,QAAUT,OAPJI,KAQNM,eAAiB,KARXN,KASNO,iBAGThB,eAAeM,UAAYW,OAAOC,OAAOnB,UAAUO,YAG1BS,eAAiB,KAE1Cf,eAAeM,UAAUa,OAAS,KAElCnB,eAAeM,UAAUI,OAAS,KAElCV,eAAeM,UAAUK,SAAW,KAEpCX,eAAeM,UAAUM,SAAW,KAEpCZ,eAAeM,UAAUO,SAAW,KAEpCb,eAAeM,UAAUQ,QAAU,KAOnCd,eAAeM,UAAUc,aAAe,eAChCC,KAAOZ,KAGXY,KAAKC,MAAM,2CAA2CC,KAAK,WAAY,YAGvEF,KAAKC,MAAM,iDAAiDE,QAAO,WAC/DH,KAAKN,eAAiBrB,EAAE,+BAA+B+B,MACvDJ,KAAKC,MAAM,2CAA2CI,WAAW,YACjEL,KAAKM,SAASC,KAAKP,SAIvBA,KAAKC,MAAM,0CAA0CO,OAAM,SAASC,GAChEA,EAAEC,iBACFV,KAAKW,WAITX,KAAKC,MAAM,2CAA2CO,OAAM,SAASC,GACjEA,EAAEC,iBACGV,KAAKN,eAAekB,SAGzBZ,KAAKa,SAAS,OAAQ,CAACC,OAAQd,KAAKN,iBACpCM,KAAKW,aASbhC,eAAeM,UAAU0B,MAAQ,WAClBvB,KACNU,OAAOa,QADDvB,KAENO,UASThB,eAAeM,UAAU8B,QAAU,eAC3Bf,KAAOZ,YACJY,KAAKgB,UAAUC,MAAK,SAASC,MAChClB,KAAKF,OAAS,IAAIrB,SACduB,KAAKX,OACL6B,KACAlB,KAAKD,aAAaQ,KAAKP,UAG5BmB,KAAK7C,aAAa8C,YAUzBzC,eAAeM,UAAUgB,MAAQ,SAASoB,iBAC/BhD,EAAEe,KAAKU,OAAOwB,cAAcC,KAAKF,WAS5C1C,eAAeM,UAAUqB,SAAW,eAC5BN,KAAOZ,YACJY,KAAKgB,UAAUC,MAAK,SAASC,MAChClB,KAAKC,MAAM,mCAAmCuB,YAAYN,MAC1DlB,KAAKD,mBAWbpB,eAAeM,UAAU+B,QAAU,eAE3BS,QAAU,OACT,IAAIC,KAFEtC,KAEQG,SACfkC,QAAQE,KAHDvC,KAGWG,SAASmC,QAE3BE,QAAU,SALHxC,KAKoBE,iBAAqBmC,gBALzCrC,KAMSI,gBANTJ,KAMkCK,gBAEtCjB,UAAUqD,OAAO,0BAA2BD,UAUvDjD,eAAeM,UAAUU,OAAS,gBACzBG,OAAS,UACTJ,eAAiB,IAGnBf"}