{"version":3,"file":"templateactions.min.js","sources":["../src/templateactions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Handle actions on learning plan templates via ajax.\r\n *\r\n * @module     tool_lp/templateactions\r\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/templates', 'core/ajax', 'core/notification', 'core/str', 'tool_lp/actionselector'],\r\n       function($, templates, ajax, notification, str, Actionselector) {\r\n    // Private variables and functions.\r\n\r\n    /** @var {Number} pagecontextid The id of the context */\r\n    var pagecontextid = 0;\r\n\r\n    /** @var {Number} templateid The id of the template */\r\n    var templateid = 0;\r\n\r\n    /** @var {Boolean} Action to apply to plans when deleting a template */\r\n    var deleteplans = true;\r\n\r\n    /**\r\n     * Callback to replace the dom element with the rendered template.\r\n     *\r\n     * @method updatePage\r\n     * @param {String} newhtml The new html to insert.\r\n     * @param {String} newjs The new js to run.\r\n     */\r\n    var updatePage = function(newhtml, newjs) {\r\n        $('[data-region=\"managetemplates\"]').replaceWith(newhtml);\r\n        templates.runTemplateJS(newjs);\r\n    };\r\n\r\n    /**\r\n     * Callback to render the page template again and update the page.\r\n     *\r\n     * @method reloadList\r\n     * @param {Object} context The context for the template.\r\n     */\r\n    var reloadList = function(context) {\r\n        templates.render('tool_lp/manage_templates_page', context)\r\n            .done(updatePage)\r\n            .fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Delete a template and reload the page.\r\n     * @method doDelete\r\n     */\r\n    var doDelete = function() {\r\n\r\n        // We are chaining ajax requests here.\r\n        var requests = ajax.call([{\r\n            methodname: 'core_competency_delete_template',\r\n            args: {id: templateid,\r\n                    deleteplans: deleteplans}\r\n        }, {\r\n            methodname: 'tool_lp_data_for_templates_manage_page',\r\n            args: {\r\n                pagecontext: {\r\n                    contextid: pagecontextid\r\n                }\r\n            }\r\n        }]);\r\n        requests[1].done(reloadList).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Duplicate a template and reload the page.\r\n     * @method doDuplicate\r\n     * @param {Event} e\r\n     */\r\n    var doDuplicate = function(e) {\r\n        e.preventDefault();\r\n\r\n        templateid = $(this).attr('data-templateid');\r\n\r\n        // We are chaining ajax requests here.\r\n        var requests = ajax.call([{\r\n            methodname: 'core_competency_duplicate_template',\r\n            args: {id: templateid}\r\n        }, {\r\n            methodname: 'tool_lp_data_for_templates_manage_page',\r\n            args: {\r\n                pagecontext: {\r\n                    contextid: pagecontextid\r\n                }\r\n            }\r\n        }]);\r\n        requests[1].done(reloadList).fail(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Handler for \"Delete learning plan template\" actions.\r\n     * @method confirmDelete\r\n     * @param {Event} e\r\n     */\r\n    var confirmDelete = function(e) {\r\n        e.preventDefault();\r\n\r\n        var id = $(this).attr('data-templateid');\r\n        templateid = id;\r\n        deleteplans = true;\r\n\r\n        var requests = ajax.call([{\r\n            methodname: 'core_competency_read_template',\r\n            args: {id: templateid}\r\n        }, {\r\n            methodname: 'core_competency_template_has_related_data',\r\n            args: {id: templateid}\r\n        }]);\r\n\r\n        requests[0].done(function(template) {\r\n            requests[1].done(function(templatehasrelateddata) {\r\n                if (templatehasrelateddata) {\r\n                    str.get_strings([\r\n                        {key: 'deletetemplate', component: 'tool_lp', param: template.shortname},\r\n                        {key: 'deletetemplatewithplans', component: 'tool_lp'},\r\n                        {key: 'deleteplans', component: 'tool_lp'},\r\n                        {key: 'unlinkplanstemplate', component: 'tool_lp'},\r\n                        {key: 'confirm', component: 'moodle'},\r\n                        {key: 'cancel', component: 'moodle'}\r\n                    ]).done(function(strings) {\r\n                        var actions = [{'text': strings[2], 'value': 'delete'},\r\n                                       {'text': strings[3], 'value': 'unlink'}];\r\n                        var actionselector = new Actionselector(\r\n                                strings[0], // Title.\r\n                                strings[1], // Message\r\n                                actions, // Radio button options.\r\n                                strings[4], // Confirm.\r\n                                strings[5]); // Cancel.\r\n                        actionselector.display();\r\n                        actionselector.on('save', function(e, data) {\r\n                            if (data.action != 'delete') {\r\n                                deleteplans = false;\r\n                            }\r\n                            doDelete();\r\n                        });\r\n                    }).fail(notification.exception);\r\n                } else {\r\n                    str.get_strings([\r\n                        {key: 'confirm', component: 'moodle'},\r\n                        {key: 'deletetemplate', component: 'tool_lp', param: template.shortname},\r\n                        {key: 'delete', component: 'moodle'},\r\n                        {key: 'cancel', component: 'moodle'}\r\n                    ]).done(function(strings) {\r\n                        notification.confirm(\r\n                        strings[0], // Confirm.\r\n                        strings[1], // Delete learning plan template X?\r\n                        strings[2], // Delete.\r\n                        strings[3], // Cancel.\r\n                        doDelete\r\n                        );\r\n                    }).fail(notification.exception);\r\n                }\r\n            }).fail(notification.exception);\r\n        }).fail(notification.exception);\r\n\r\n    };\r\n\r\n    return /** @alias module:tool_lp/templateactions */ {\r\n        // Public variables and functions.\r\n        /**\r\n         * Expose the event handler for the delete.\r\n         * @method deleteHandler\r\n         * @param {Event} e\r\n         */\r\n        deleteHandler: confirmDelete,\r\n\r\n        /**\r\n         * Expose the event handler for the duplicate.\r\n         * @method duplicateHandler\r\n         * @param {Event} e\r\n         */\r\n        duplicateHandler: doDuplicate,\r\n\r\n        /**\r\n         * Initialise the module.\r\n         * @method init\r\n         * @param {Number} contextid The context id of the page.\r\n         */\r\n        init: function(contextid) {\r\n            pagecontextid = contextid;\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","templates","ajax","notification","str","Actionselector","pagecontextid","templateid","deleteplans","updatePage","newhtml","newjs","replaceWith","runTemplateJS","reloadList","context","render","done","fail","exception","doDelete","call","methodname","args","id","pagecontext","contextid","deleteHandler","e","preventDefault","this","attr","requests","template","templatehasrelateddata","get_strings","key","component","param","shortname","strings","actions","actionselector","display","on","data","action","confirm","duplicateHandler","init"],"mappings":";;;;;;;AAsBAA,iCAAO,CAAC,SAAU,iBAAkB,YAAa,oBAAqB,WAAY,2BAC3E,SAASC,EAAGC,UAAWC,KAAMC,aAAcC,IAAKC,oBAI/CC,cAAgB,EAGhBC,WAAa,EAGbC,aAAc,EASdC,WAAa,SAASC,QAASC,OAC/BX,EAAE,mCAAmCY,YAAYF,SACjDT,UAAUY,cAAcF,QASxBG,WAAa,SAASC,SACtBd,UAAUe,OAAO,gCAAiCD,SAC7CE,KAAKR,YACLS,KAAKf,aAAagB,YAOvBC,SAAW,WAGIlB,KAAKmB,KAAK,CAAC,CACtBC,WAAY,kCACZC,KAAM,CAACC,GAAIjB,WACHC,YAAaA,cACtB,CACCc,WAAY,yCACZC,KAAM,CACFE,YAAa,CACTC,UAAWpB,mBAId,GAAGW,KAAKH,YAAYI,KAAKf,aAAagB,kBAgGC,CAOhDQ,cAtEgB,SAASC,GACzBA,EAAEC,qBAEEL,GAAKxB,EAAE8B,MAAMC,KAAK,mBACtBxB,WAAaiB,GACbhB,aAAc,MAEVwB,SAAW9B,KAAKmB,KAAK,CAAC,CACtBC,WAAY,gCACZC,KAAM,CAACC,GAAIjB,aACZ,CACCe,WAAY,4CACZC,KAAM,CAACC,GAAIjB,eAGfyB,SAAS,GAAGf,MAAK,SAASgB,UACtBD,SAAS,GAAGf,MAAK,SAASiB,wBAClBA,uBACA9B,IAAI+B,YAAY,CACZ,CAACC,IAAK,iBAAkBC,UAAW,UAAWC,MAAOL,SAASM,WAC9D,CAACH,IAAK,0BAA2BC,UAAW,WAC5C,CAACD,IAAK,cAAeC,UAAW,WAChC,CAACD,IAAK,sBAAuBC,UAAW,WACxC,CAACD,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,SAAUC,UAAW,YAC5BpB,MAAK,SAASuB,aACTC,QAAU,CAAC,MAASD,QAAQ,SAAa,UAC9B,MAASA,QAAQ,SAAa,WACzCE,eAAiB,IAAIrC,eACjBmC,QAAQ,GACRA,QAAQ,GACRC,QACAD,QAAQ,GACRA,QAAQ,IAChBE,eAAeC,UACfD,eAAeE,GAAG,QAAQ,SAAShB,EAAGiB,MACf,UAAfA,KAAKC,SACLtC,aAAc,GAElBY,iBAELF,KAAKf,aAAagB,WAErBf,IAAI+B,YAAY,CACZ,CAACC,IAAK,UAAWC,UAAW,UAC5B,CAACD,IAAK,iBAAkBC,UAAW,UAAWC,MAAOL,SAASM,WAC9D,CAACH,IAAK,SAAUC,UAAW,UAC3B,CAACD,IAAK,SAAUC,UAAW,YAC5BpB,MAAK,SAASuB,SACbrC,aAAa4C,QACbP,QAAQ,GACRA,QAAQ,GACRA,QAAQ,GACRA,QAAQ,GACRpB,aAEDF,KAAKf,aAAagB,cAE1BD,KAAKf,aAAagB,cACtBD,KAAKf,aAAagB,YAkBrB6B,iBAtGc,SAASpB,GACvBA,EAAEC,iBAEFtB,WAAaP,EAAE8B,MAAMC,KAAK,mBAGX7B,KAAKmB,KAAK,CAAC,CACtBC,WAAY,qCACZC,KAAM,CAACC,GAAIjB,aACZ,CACCe,WAAY,yCACZC,KAAM,CACFE,YAAa,CACTC,UAAWpB,mBAId,GAAGW,KAAKH,YAAYI,KAAKf,aAAagB,YA4F/C8B,KAAM,SAASvB,WACXpB,cAAgBoB"}