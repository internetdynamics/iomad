{"version":3,"file":"competencypicker.min.js","sources":["../src/competencypicker.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Competency picker.\r\n *\r\n * To handle 'save' events use: picker.on('save')\r\n * This will receive a object with either a single 'competencyId', or an array in 'competencyIds'\r\n * depending on the value of multiSelect.\r\n *\r\n * @module     tool_lp/competencypicker\r\n * @copyright  2015 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery',\r\n        'core/notification',\r\n        'core/ajax',\r\n        'core/templates',\r\n        'tool_lp/dialogue',\r\n        'core/str',\r\n        'tool_lp/tree',\r\n        'core/pending'\r\n        ],\r\n        function($, Notification, Ajax, Templates, Dialogue, Str, Tree, Pending) {\r\n\r\n    /**\r\n     * Competency picker class.\r\n     * @param {Number} pageContextId The page context ID.\r\n     * @param {Number|false} singleFramework The ID of the framework when limited to one.\r\n     * @param {String} pageContextIncludes One of 'children', 'parents', 'self'.\r\n     * @param {Boolean} multiSelect Support multi-select in the tree.\r\n     */\r\n    var Picker = function(pageContextId, singleFramework, pageContextIncludes, multiSelect) {\r\n        var self = this;\r\n        self._eventNode = $('<div></div>');\r\n        self._frameworks = [];\r\n        self._reset();\r\n\r\n        self._pageContextId = pageContextId;\r\n        self._pageContextIncludes = pageContextIncludes || 'children';\r\n        self._multiSelect = (typeof multiSelect === 'undefined' || multiSelect === true);\r\n        if (singleFramework) {\r\n            self._frameworkId = singleFramework;\r\n            self._singleFramework = true;\r\n        }\r\n    };\r\n\r\n    /** @property {Array} The competencies fetched. */\r\n    Picker.prototype._competencies = null;\r\n    /** @property {Array} The competencies that cannot be picked. */\r\n    Picker.prototype._disallowedCompetencyIDs = null;\r\n    /** @property {Node} The node we attach the events to. */\r\n    Picker.prototype._eventNode = null;\r\n    /** @property {Array} The list of frameworks fetched. */\r\n    Picker.prototype._frameworks = null;\r\n    /** @property {Number} The current framework ID. */\r\n    Picker.prototype._frameworkId = null;\r\n    /** @property {Number} The page context ID. */\r\n    Picker.prototype._pageContextId = null;\r\n    /** @property {Number} Relevant contexts inclusion. */\r\n    Picker.prototype._pageContextIncludes = null;\r\n    /** @property {Dialogue} The reference to the dialogue. */\r\n    Picker.prototype._popup = null;\r\n    /** @property {String} The string we filter the competencies with. */\r\n    Picker.prototype._searchText = '';\r\n    /** @property {Object} The competency that was selected. */\r\n    Picker.prototype._selectedCompetencies = null;\r\n    /** @property {Boolean} Whether we can browse frameworks or not. */\r\n    Picker.prototype._singleFramework = false;\r\n    /** @property {Boolean} Do we allow multi select? */\r\n    Picker.prototype._multiSelect = true;\r\n    /** @property {Boolean} Do we allow to display hidden framework? */\r\n    Picker.prototype._onlyVisible = true;\r\n\r\n    /**\r\n     * Hook to executed after the view is rendered.\r\n     *\r\n     * @method _afterRender\r\n     */\r\n    Picker.prototype._afterRender = function() {\r\n        var self = this;\r\n\r\n        // Initialise the tree.\r\n        var tree = new Tree(self._find('[data-enhance=linktree]'), self._multiSelect);\r\n\r\n        // To prevent jiggling we only show the tree after it is enhanced.\r\n        self._find('[data-enhance=linktree]').show();\r\n\r\n        tree.on('selectionchanged', function(evt, params) {\r\n            var selected = params.selected;\r\n            evt.preventDefault();\r\n            var validIds = [];\r\n            $.each(selected, function(index, item) {\r\n                var compId = $(item).data('id'),\r\n                    valid = true;\r\n\r\n                if (typeof compId === 'undefined') {\r\n                    // Do not allow picking nodes with no id.\r\n                    valid = false;\r\n                } else {\r\n                    $.each(self._disallowedCompetencyIDs, function(i, id) {\r\n                        if (id == compId) {\r\n                            valid = false;\r\n                        }\r\n                    });\r\n                }\r\n                if (valid) {\r\n                    validIds.push(compId);\r\n                }\r\n            });\r\n\r\n            self._selectedCompetencies = validIds;\r\n\r\n            // TODO Implement disabling of nodes in the tree module somehow.\r\n            if (!self._selectedCompetencies.length) {\r\n                self._find('[data-region=\"competencylinktree\"] [data-action=\"add\"]').attr('disabled', 'disabled');\r\n            } else {\r\n                self._find('[data-region=\"competencylinktree\"] [data-action=\"add\"]').removeAttr('disabled');\r\n            }\r\n        });\r\n\r\n        // Add listener for framework change.\r\n        if (!self._singleFramework) {\r\n            self._find('[data-action=\"chooseframework\"]').change(function(e) {\r\n                self._frameworkId = $(e.target).val();\r\n                self._loadCompetencies().then(self._refresh.bind(self)).catch(Notification.exception);\r\n            });\r\n        }\r\n\r\n        // Add listener for search.\r\n        self._find('[data-region=\"filtercompetencies\"] button').click(function(e) {\r\n            e.preventDefault();\r\n            $(e.target).attr('disabled', 'disabled');\r\n            self._searchText = self._find('[data-region=\"filtercompetencies\"] input').val() || '';\r\n            return self._refresh().always(function() {\r\n                $(e.target).removeAttr('disabled');\r\n            });\r\n        });\r\n\r\n        // Add listener for cancel.\r\n        self._find('[data-region=\"competencylinktree\"] [data-action=\"cancel\"]').click(function(e) {\r\n            e.preventDefault();\r\n            self.close();\r\n        });\r\n\r\n        // Add listener for add.\r\n        self._find('[data-region=\"competencylinktree\"] [data-action=\"add\"]').click(function(e) {\r\n            e.preventDefault();\r\n            var pendingPromise = new Pending();\r\n            if (!self._selectedCompetencies.length) {\r\n                return;\r\n            }\r\n\r\n            if (self._multiSelect) {\r\n                self._trigger('save', {competencyIds: self._selectedCompetencies});\r\n            } else {\r\n                // We checked above that the array has at least one value.\r\n                self._trigger('save', {competencyId: self._selectedCompetencies[0]});\r\n            }\r\n\r\n            // The dialogue here is a YUI dialogue and doesn't support Promises at all.\r\n            // However, it is typically synchronous so this shoudl suffice.\r\n            self.close();\r\n            pendingPromise.resolve();\r\n        });\r\n\r\n        // The list of selected competencies will be modified while looping (because of the listeners above).\r\n        var currentItems = self._selectedCompetencies.slice(0);\r\n\r\n        $.each(currentItems, function(index, id) {\r\n            var node = self._find('[data-id=' + id + ']');\r\n            if (node.length) {\r\n                tree.toggleItem(node);\r\n                tree.updateFocus(node);\r\n            }\r\n        });\r\n\r\n    };\r\n\r\n    /**\r\n     * Close the dialogue.\r\n     *\r\n     * @method close\r\n     */\r\n    Picker.prototype.close = function() {\r\n        var self = this;\r\n        self._popup.close();\r\n        self._reset();\r\n    };\r\n\r\n    /**\r\n     * Opens the picker.\r\n     *\r\n     * @method display\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype.display = function() {\r\n        var self = this;\r\n        return $.when(Str.get_string('competencypicker', 'tool_lp'), self._render())\r\n        .then(function(title, render) {\r\n            self._popup = new Dialogue(\r\n                title,\r\n                render[0],\r\n                self._afterRender.bind(self)\r\n            );\r\n            return;\r\n        }).catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Fetch the competencies.\r\n     *\r\n     * @param {Number} frameworkId The frameworkId.\r\n     * @param {String} searchText Limit the competencies to those matching the text.\r\n     * @method _fetchCompetencies\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._fetchCompetencies = function(frameworkId, searchText) {\r\n        var self = this;\r\n\r\n        return Ajax.call([\r\n            {methodname: 'core_competency_search_competencies', args: {\r\n                searchtext: searchText,\r\n                competencyframeworkid: frameworkId\r\n            }}\r\n        ])[0].done(function(competencies) {\r\n          /**\r\n           * @param {Object} parent\r\n           * @param {Array} competencies\r\n           */\r\n            function addCompetencyChildren(parent, competencies) {\r\n                for (var i = 0; i < competencies.length; i++) {\r\n                    if (competencies[i].parentid == parent.id) {\r\n                        parent.haschildren = true;\r\n                        competencies[i].children = [];\r\n                        competencies[i].haschildren = false;\r\n                        parent.children[parent.children.length] = competencies[i];\r\n                        addCompetencyChildren(competencies[i], competencies);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Expand the list of competencies into a tree.\r\n            var i, comp;\r\n            var tree = [];\r\n            for (i = 0; i < competencies.length; i++) {\r\n                comp = competencies[i];\r\n                if (comp.parentid == \"0\") { // Loose check for now, because WS returns a string.\r\n                    comp.children = [];\r\n                    comp.haschildren = 0;\r\n                    tree[tree.length] = comp;\r\n                    addCompetencyChildren(comp, competencies);\r\n                }\r\n            }\r\n\r\n            self._competencies = tree;\r\n\r\n        }).fail(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Find a node in the dialogue.\r\n     *\r\n     * @param {String} selector\r\n     * @return {JQuery}\r\n     * @method _find\r\n     */\r\n    Picker.prototype._find = function(selector) {\r\n        return $(this._popup.getContent()).find(selector);\r\n    };\r\n\r\n    /**\r\n     * Convenience method to get a framework object.\r\n     *\r\n     * @param {Number} fid The framework ID.\r\n     * @return {Object}\r\n     * @method _getFramework\r\n     */\r\n    Picker.prototype._getFramework = function(fid) {\r\n        var frm;\r\n        $.each(this._frameworks, function(i, f) {\r\n            if (f.id == fid) {\r\n                frm = f;\r\n                return;\r\n            }\r\n        });\r\n        return frm;\r\n    };\r\n\r\n    /**\r\n     * Load the competencies.\r\n     *\r\n     * @method _loadCompetencies\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._loadCompetencies = function() {\r\n        return this._fetchCompetencies(this._frameworkId, this._searchText);\r\n    };\r\n\r\n    /**\r\n     * Load the frameworks.\r\n     *\r\n     * @method _loadFrameworks\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._loadFrameworks = function() {\r\n        var promise,\r\n            self = this;\r\n\r\n        // Quit early because we already have the data.\r\n        if (self._frameworks.length > 0) {\r\n            return $.when();\r\n        }\r\n\r\n        if (self._singleFramework) {\r\n            promise = Ajax.call([\r\n                {methodname: 'core_competency_read_competency_framework', args: {\r\n                    id: this._frameworkId\r\n                }}\r\n            ])[0].then(function(framework) {\r\n                return [framework];\r\n            });\r\n        } else {\r\n            promise = Ajax.call([\r\n                {methodname: 'core_competency_list_competency_frameworks', args: {\r\n                    sort: 'shortname',\r\n                    context: {contextid: self._pageContextId},\r\n                    includes: self._pageContextIncludes,\r\n                    onlyvisible: self._onlyVisible\r\n                }}\r\n            ])[0];\r\n        }\r\n\r\n        return promise.done(function(frameworks) {\r\n            self._frameworks = frameworks;\r\n        }).fail(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Register an event listener.\r\n     *\r\n     * @param {String} type The event type.\r\n     * @param {Function} handler The event listener.\r\n     * @method on\r\n     */\r\n    Picker.prototype.on = function(type, handler) {\r\n        this._eventNode.on(type, handler);\r\n    };\r\n\r\n    /**\r\n     * Hook to executed before render.\r\n     *\r\n     * @method _preRender\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._preRender = function() {\r\n        var self = this;\r\n        return self._loadFrameworks().then(function() {\r\n            if (!self._frameworkId && self._frameworks.length > 0) {\r\n                self._frameworkId = self._frameworks[0].id;\r\n            }\r\n\r\n            // We could not set a framework ID, that probably means there are no frameworks accessible.\r\n            if (!self._frameworkId) {\r\n                self._frameworks = [];\r\n                return $.when();\r\n            }\r\n\r\n            return self._loadCompetencies();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Refresh the view.\r\n     *\r\n     * @method _refresh\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._refresh = function() {\r\n        var self = this;\r\n        return self._render().then(function(html) {\r\n            self._find('[data-region=\"competencylinktree\"]').replaceWith(html);\r\n            self._afterRender();\r\n            return;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Render the dialogue.\r\n     *\r\n     * @method _render\r\n     * @return {Promise}\r\n     */\r\n    Picker.prototype._render = function() {\r\n        var self = this;\r\n        return self._preRender().then(function() {\r\n\r\n            if (!self._singleFramework) {\r\n                $.each(self._frameworks, function(i, framework) {\r\n                    if (framework.id == self._frameworkId) {\r\n                        framework.selected = true;\r\n                    } else {\r\n                        framework.selected = false;\r\n                    }\r\n                });\r\n            }\r\n\r\n            var context = {\r\n                competencies: self._competencies,\r\n                framework: self._getFramework(self._frameworkId),\r\n                frameworks: self._frameworks,\r\n                search: self._searchText,\r\n                singleFramework: self._singleFramework,\r\n            };\r\n\r\n            return Templates.render('tool_lp/competency_picker', context);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Reset the dialogue properties.\r\n     *\r\n     * This does not reset everything, just enough to reset the UI.\r\n     *\r\n     * @method _reset\r\n     */\r\n    Picker.prototype._reset = function() {\r\n        this._competencies = [];\r\n        this._disallowedCompetencyIDs = [];\r\n        this._popup = null;\r\n        this._searchText = '';\r\n        this._selectedCompetencies = [];\r\n    };\r\n\r\n    /**\r\n     * Set what competencies cannot be picked.\r\n     *\r\n     * This needs to be set after reset/close.\r\n     *\r\n     * @param {Number[]} ids The IDs.\r\n     * @method _setDisallowedCompetencyIDs\r\n     */\r\n    Picker.prototype.setDisallowedCompetencyIDs = function(ids) {\r\n        this._disallowedCompetencyIDs = ids;\r\n    };\r\n\r\n    /**\r\n     * Trigger an event.\r\n     *\r\n     * @param {String} type The type of event.\r\n     * @param {Object} data The data to pass to the listeners.\r\n     * @method _reset\r\n     */\r\n    Picker.prototype._trigger = function(type, data) {\r\n        this._eventNode.trigger(type, [data]);\r\n    };\r\n\r\n    return Picker;\r\n\r\n});\r\n"],"names":["define","$","Notification","Ajax","Templates","Dialogue","Str","Tree","Pending","Picker","pageContextId","singleFramework","pageContextIncludes","multiSelect","this","_eventNode","_frameworks","_reset","_pageContextId","_pageContextIncludes","_multiSelect","_frameworkId","_singleFramework","prototype","_competencies","_disallowedCompetencyIDs","_popup","_searchText","_selectedCompetencies","_onlyVisible","_afterRender","self","tree","_find","show","on","evt","params","selected","preventDefault","validIds","each","index","item","compId","data","valid","i","id","push","length","removeAttr","attr","change","e","target","val","_loadCompetencies","then","_refresh","bind","catch","exception","click","always","close","pendingPromise","_trigger","competencyIds","competencyId","resolve","currentItems","slice","node","toggleItem","updateFocus","display","when","get_string","_render","title","render","_fetchCompetencies","frameworkId","searchText","call","methodname","args","searchtext","competencyframeworkid","done","competencies","addCompetencyChildren","parent","parentid","haschildren","children","comp","fail","selector","getContent","find","_getFramework","fid","frm","f","_loadFrameworks","framework","sort","context","contextid","includes","onlyvisible","frameworks","type","handler","_preRender","html","replaceWith","search","setDisallowedCompetencyIDs","ids","trigger"],"mappings":"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"}