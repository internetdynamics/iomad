{"version":3,"file":"competency_rule_points.min.js","sources":["../src/competency_rule_points.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Competency rule points module.\r\n *\r\n * @module     tool_lp/competency_rule_points\r\n * @copyright  2015 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery',\r\n        'core/str',\r\n        'core/templates',\r\n        'tool_lp/competency_rule',\r\n        ],\r\n        function($, Str, Templates, RuleBase) {\r\n\r\n    /**\r\n     * Competency rule points class.\r\n     */\r\n    var Rule = function() {\r\n        RuleBase.apply(this, arguments);\r\n    };\r\n    Rule.prototype = Object.create(RuleBase.prototype);\r\n\r\n    /** @property {Node} Reference to the container in which the template was included. */\r\n    Rule.prototype._container = null;\r\n    /** @property {Boolean} Whether or not the template was included. */\r\n    Rule.prototype._templateLoaded = false;\r\n\r\n    /**\r\n     * The config established by this rule.\r\n     *\r\n     * @return {String}\r\n     * @method getConfig\r\n     */\r\n    Rule.prototype.getConfig = function() {\r\n        return JSON.stringify({\r\n            base: {\r\n                points: this._getRequiredPoints(),\r\n            },\r\n            competencies: this._getCompetenciesConfig()\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Gathers the input provided by the user for competencies.\r\n     *\r\n     * @return {Array} Containing id, points and required.\r\n     * @method _getCompetenciesConfig\r\n     * @protected\r\n     */\r\n    Rule.prototype._getCompetenciesConfig = function() {\r\n        var competencies = [];\r\n\r\n        this._container.find('[data-competency]').each(function() {\r\n            var node = $(this),\r\n                id = node.data('competency'),\r\n                points = parseInt(node.find('[name=\"points\"]').val(), 10),\r\n                required = node.find('[name=\"required\"]').prop('checked');\r\n\r\n            competencies.push({\r\n                id: id,\r\n                points: points,\r\n                required: required ? 1 : 0\r\n            });\r\n        });\r\n\r\n        return competencies;\r\n    };\r\n\r\n    /**\r\n     * Fetches the required points set by the user.\r\n     *\r\n     * @return {Number}\r\n     * @method _getRequiredPoints\r\n     * @protected\r\n     */\r\n    Rule.prototype._getRequiredPoints = function() {\r\n        return parseInt(this._container.find('[name=\"requiredpoints\"]').val() || 1, 10);\r\n    };\r\n\r\n    /**\r\n     * Return the type of the module.\r\n     *\r\n     * @return {String}\r\n     * @method getType\r\n     */\r\n    Rule.prototype.getType = function() {\r\n        return 'core_competency\\\\competency_rule_points';\r\n    };\r\n\r\n    /**\r\n     * Callback to inject the template.\r\n     *\r\n     * @param  {Node} container Node to inject in.\r\n     * @return {Promise} Resolved when done.\r\n     * @method injectTemplate\r\n     */\r\n    Rule.prototype.injectTemplate = function(container) {\r\n        var self = this,\r\n            children = this._tree.getChildren(this._competency.id),\r\n            context,\r\n            config = {\r\n                base: {points: 2},\r\n                competencies: []\r\n            };\r\n\r\n        this._templateLoaded = false;\r\n\r\n        // Only pre-load the configuration when the competency is using this rule.\r\n        if (self._competency.ruletype == self.getType()) {\r\n            try {\r\n                config = JSON.parse(self._competency.ruleconfig);\r\n            } catch (e) {\r\n                // eslint-disable-line no-empty\r\n            }\r\n        }\r\n\r\n        context = {\r\n            requiredpoints: (config && config.base) ? config.base.points : 2,\r\n            competency: self._competency,\r\n            children: []\r\n        };\r\n\r\n        $.each(children, function(index, child) {\r\n            var competency = {\r\n                id: child.id,\r\n                shortname: child.shortname,\r\n                required: false,\r\n                points: 0\r\n            };\r\n\r\n            if (config) {\r\n                $.each(config.competencies, function(index, comp) {\r\n                    if (comp.id == competency.id) {\r\n                        competency.required = comp.required ? true : false;\r\n                        competency.points = comp.points;\r\n                    }\r\n                });\r\n            }\r\n\r\n            context.children.push(competency);\r\n        });\r\n\r\n        return Templates.render('tool_lp/competency_rule_points', context).then(function(html) {\r\n            self._container = container;\r\n            container.html(html);\r\n            container.find('input').change(function() {\r\n                self._triggerChange();\r\n            });\r\n\r\n            // We're done, let's trigger a change.\r\n            self._templateLoaded = true;\r\n            self._triggerChange();\r\n            return;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Whether or not the current config is valid.\r\n     *\r\n     * @return {Boolean}\r\n     * @method isValid\r\n     */\r\n    Rule.prototype.isValid = function() {\r\n        if (!this._templateLoaded) {\r\n            return false;\r\n        }\r\n\r\n        var required = this._getRequiredPoints(),\r\n            max = 0,\r\n            valid = true;\r\n\r\n        $.each(this._getCompetenciesConfig(), function(index, competency) {\r\n            if (competency.points < 0) {\r\n                valid = false;\r\n            }\r\n            max += competency.points;\r\n        });\r\n\r\n        valid = valid && max >= required;\r\n        return valid;\r\n    };\r\n\r\n    return Rule;\r\n});\r\n"],"names":["define","$","Str","Templates","RuleBase","Rule","apply","this","arguments","prototype","Object","create","_container","_templateLoaded","getConfig","JSON","stringify","base","points","_getRequiredPoints","competencies","_getCompetenciesConfig","find","each","node","id","data","parseInt","val","required","prop","push","getType","injectTemplate","container","context","self","children","_tree","getChildren","_competency","config","ruletype","parse","ruleconfig","e","requiredpoints","competency","index","child","shortname","comp","render","then","html","change","_triggerChange","isValid","max","valid"],"mappings":";;;;;;;AAuBAA,wCAAO,CAAC,SACA,WACA,iBACA,4BAEA,SAASC,EAAGC,IAAKC,UAAWC,cAK5BC,KAAO,WACPD,SAASE,MAAMC,KAAMC,mBAEzBH,KAAKI,UAAYC,OAAOC,OAAOP,SAASK,YAGzBG,WAAa,KAE5BP,KAAKI,UAAUI,iBAAkB,EAQjCR,KAAKI,UAAUK,UAAY,kBAChBC,KAAKC,UAAU,CAClBC,KAAM,CACFC,OAAQX,KAAKY,sBAEjBC,aAAcb,KAAKc,4BAW3BhB,KAAKI,UAAUY,uBAAyB,eAChCD,aAAe,eAEdR,WAAWU,KAAK,qBAAqBC,MAAK,eACvCC,KAAOvB,EAAEM,MACTkB,GAAKD,KAAKE,KAAK,cACfR,OAASS,SAASH,KAAKF,KAAK,mBAAmBM,MAAO,IACtDC,SAAWL,KAAKF,KAAK,qBAAqBQ,KAAK,WAEnDV,aAAaW,KAAK,CACdN,GAAIA,GACJP,OAAQA,OACRW,SAAUA,SAAW,EAAI,OAI1BT,cAUXf,KAAKI,UAAUU,mBAAqB,kBACzBQ,SAASpB,KAAKK,WAAWU,KAAK,2BAA2BM,OAAS,EAAG,KAShFvB,KAAKI,UAAUuB,QAAU,iBACd,2CAUX3B,KAAKI,UAAUwB,eAAiB,SAASC,eAGjCC,QAFAC,KAAO7B,KACP8B,SAAW9B,KAAK+B,MAAMC,YAAYhC,KAAKiC,YAAYf,IAEnDgB,OAAS,CACLxB,KAAM,CAACC,OAAQ,GACfE,aAAc,YAGjBP,iBAAkB,EAGnBuB,KAAKI,YAAYE,UAAYN,KAAKJ,cAE9BS,OAAS1B,KAAK4B,MAAMP,KAAKI,YAAYI,YACvC,MAAOC,WAKbV,QAAU,CACNW,eAAiBL,QAAUA,OAAOxB,KAAQwB,OAAOxB,KAAKC,OAAS,EAC/D6B,WAAYX,KAAKI,YACjBH,SAAU,IAGdpC,EAAEsB,KAAKc,UAAU,SAASW,MAAOC,WACzBF,WAAa,CACbtB,GAAIwB,MAAMxB,GACVyB,UAAWD,MAAMC,UACjBrB,UAAU,EACVX,OAAQ,GAGRuB,QACAxC,EAAEsB,KAAKkB,OAAOrB,cAAc,SAAS4B,MAAOG,MACpCA,KAAK1B,IAAMsB,WAAWtB,KACtBsB,WAAWlB,WAAWsB,KAAKtB,SAC3BkB,WAAW7B,OAASiC,KAAKjC,WAKrCiB,QAAQE,SAASN,KAAKgB,eAGnB5C,UAAUiD,OAAO,iCAAkCjB,SAASkB,MAAK,SAASC,MAC7ElB,KAAKxB,WAAasB,UAClBA,UAAUoB,KAAKA,MACfpB,UAAUZ,KAAK,SAASiC,QAAO,WAC3BnB,KAAKoB,oBAITpB,KAAKvB,iBAAkB,EACvBuB,KAAKoB,qBAWbnD,KAAKI,UAAUgD,QAAU,eAChBlD,KAAKM,uBACC,MAGPgB,SAAWtB,KAAKY,qBAChBuC,IAAM,EACNC,OAAQ,SAEZ1D,EAAEsB,KAAKhB,KAAKc,0BAA0B,SAAS2B,MAAOD,YAC9CA,WAAW7B,OAAS,IACpByC,OAAQ,GAEZD,KAAOX,WAAW7B,UAGtByC,MAAQA,OAASD,KAAO7B,UAIrBxB"}