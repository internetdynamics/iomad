{"version":3,"file":"course_competency_settings.min.js","sources":["../src/course_competency_settings.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Change the course competency settings in a popup.\r\n *\r\n * @module     tool_lp/course_competency_settings\r\n * @copyright  2015 Damyon Wiese <damyon@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery',\r\n        'core/notification',\r\n        'tool_lp/dialogue',\r\n        'core/str',\r\n        'core/ajax',\r\n        'core/templates',\r\n        'core/pending'\r\n        ],\r\n       function($, notification, Dialogue, str, ajax, templates, Pending) {\r\n\r\n    /**\r\n     * Constructor\r\n     *\r\n     * @param {String} selector - selector for the links to open the dialogue.\r\n     */\r\n    var settingsMod = function(selector) {\r\n        $(selector).on('click', this.configureSettings.bind(this));\r\n    };\r\n\r\n    /** @property {Dialogue} Reference to the dialogue that we opened. */\r\n    settingsMod.prototype._dialogue = null;\r\n\r\n    /**\r\n     * Open the configure settings dialogue.\r\n     *\r\n     * @param {Event} e\r\n     * @method configureSettings\r\n     */\r\n    settingsMod.prototype.configureSettings = function(e) {\r\n        var pendingPromise = new Pending();\r\n        var courseid = $(e.target).closest('a').data('courseid');\r\n        var currentValue = $(e.target).closest('a').data('pushratingstouserplans');\r\n        var context = {\r\n            courseid: courseid,\r\n            settings: {pushratingstouserplans: currentValue}\r\n        };\r\n        e.preventDefault();\r\n\r\n        $.when(\r\n            str.get_string('configurecoursecompetencysettings', 'tool_lp'),\r\n            templates.render('tool_lp/course_competency_settings', context),\r\n        )\r\n        .then(function(title, templateResult) {\r\n            this._dialogue = new Dialogue(\r\n                title,\r\n                templateResult[0],\r\n                this.addListeners.bind(this)\r\n            );\r\n\r\n            return this._dialogue;\r\n        }.bind(this))\r\n        .then(pendingPromise.resolve)\r\n        .catch(notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Add the save listener to the form.\r\n     *\r\n     * @method addSaveListener\r\n     */\r\n    settingsMod.prototype.addListeners = function() {\r\n        var save = this._find('[data-action=\"save\"]');\r\n        save.on('click', this.saveSettings.bind(this));\r\n        var cancel = this._find('[data-action=\"cancel\"]');\r\n        cancel.on('click', this.cancelChanges.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Cancel the changes.\r\n     *\r\n     * @param {Event} e\r\n     * @method cancelChanges\r\n     */\r\n    settingsMod.prototype.cancelChanges = function(e) {\r\n        e.preventDefault();\r\n        this._dialogue.close();\r\n    };\r\n\r\n    /**\r\n     * Cancel the changes.\r\n     *\r\n     * @param {String} selector\r\n     * @return {JQuery}\r\n     */\r\n    settingsMod.prototype._find = function(selector) {\r\n        return $('[data-region=\"coursecompetencysettings\"]').find(selector);\r\n    };\r\n\r\n    /**\r\n     * Save the settings.\r\n     *\r\n     * @param {Event} e\r\n     * @method saveSettings\r\n     */\r\n    settingsMod.prototype.saveSettings = function(e) {\r\n        var pendingPromise = new Pending();\r\n        e.preventDefault();\r\n\r\n        var newValue = this._find('input[name=\"pushratingstouserplans\"]:checked').val();\r\n        var courseId = this._find('input[name=\"courseid\"]').val();\r\n        var settings = {pushratingstouserplans: newValue};\r\n\r\n        ajax.call([\r\n            {methodname: 'core_competency_update_course_competency_settings',\r\n              args: {courseid: courseId, settings: settings}}\r\n        ])[0]\r\n        .then(function() {\r\n            return this.refreshCourseCompetenciesPage();\r\n        }.bind(this))\r\n        .then(pendingPromise.resolve)\r\n        .catch(notification.exception);\r\n\r\n    };\r\n\r\n    /**\r\n     * Refresh the course competencies page.\r\n     *\r\n     * @method saveSettings\r\n     */\r\n    settingsMod.prototype.refreshCourseCompetenciesPage = function() {\r\n        var courseId = this._find('input[name=\"courseid\"]').val();\r\n        var pendingPromise = new Pending();\r\n\r\n        ajax.call([\r\n            {methodname: 'tool_lp_data_for_course_competencies_page',\r\n              args: {courseid: courseId, moduleid: 0}}\r\n        ])[0]\r\n        .then(function(context) {\r\n            return templates.render('tool_lp/course_competencies_page', context);\r\n        })\r\n        .then(function(html, js) {\r\n            templates.replaceNode($('[data-region=\"coursecompetenciespage\"]'), html, js);\r\n            this._dialogue.close();\r\n\r\n            return;\r\n        }.bind(this))\r\n        .then(pendingPromise.resolve)\r\n        .catch(notification.exception);\r\n    };\r\n\r\n    return /** @alias module:tool_lp/configurecoursecompetencysettings */ settingsMod;\r\n});\r\n"],"names":["define","$","notification","Dialogue","str","ajax","templates","Pending","settingsMod","selector","on","this","configureSettings","bind","prototype","_dialogue","e","pendingPromise","context","courseid","target","closest","data","settings","pushratingstouserplans","preventDefault","when","get_string","render","then","title","templateResult","addListeners","resolve","catch","exception","_find","saveSettings","cancelChanges","close","find","newValue","val","courseId","call","methodname","args","refreshCourseCompetenciesPage","moduleid","html","js","replaceNode"],"mappings":";;;;;;;AAsBAA,4CAAO,CAAC,SACA,oBACA,mBACA,WACA,YACA,iBACA,iBAED,SAASC,EAAGC,aAAcC,SAAUC,IAAKC,KAAMC,UAAWC,aAOzDC,YAAc,SAASC,UACvBR,EAAEQ,UAAUC,GAAG,QAASC,KAAKC,kBAAkBC,KAAKF,eAIxDH,YAAYM,UAAUC,UAAY,KAQlCP,YAAYM,UAAUF,kBAAoB,SAASI,OAC3CC,eAAiB,IAAIV,QAGrBW,QAAU,CACVC,SAHWlB,EAAEe,EAAEI,QAAQC,QAAQ,KAAKC,KAAK,YAIzCC,SAAU,CAACC,uBAHIvB,EAAEe,EAAEI,QAAQC,QAAQ,KAAKC,KAAK,4BAKjDN,EAAES,iBAEFxB,EAAEyB,KACEtB,IAAIuB,WAAW,oCAAqC,WACpDrB,UAAUsB,OAAO,qCAAsCV,UAE1DW,KAAK,SAASC,MAAOC,4BACbhB,UAAY,IAAIZ,SACjB2B,MACAC,eAAe,GACfpB,KAAKqB,aAAanB,KAAKF,OAGpBA,KAAKI,WACdF,KAAKF,OACNkB,KAAKZ,eAAegB,SACpBC,MAAMhC,aAAaiC,YAQxB3B,YAAYM,UAAUkB,aAAe,WACtBrB,KAAKyB,MAAM,wBACjB1B,GAAG,QAASC,KAAK0B,aAAaxB,KAAKF,OAC3BA,KAAKyB,MAAM,0BACjB1B,GAAG,QAASC,KAAK2B,cAAczB,KAAKF,QAS/CH,YAAYM,UAAUwB,cAAgB,SAAStB,GAC3CA,EAAES,sBACGV,UAAUwB,SASnB/B,YAAYM,UAAUsB,MAAQ,SAAS3B,iBAC5BR,EAAE,4CAA4CuC,KAAK/B,WAS9DD,YAAYM,UAAUuB,aAAe,SAASrB,OACtCC,eAAiB,IAAIV,QACzBS,EAAES,qBAEEgB,SAAW9B,KAAKyB,MAAM,gDAAgDM,MACtEC,SAAWhC,KAAKyB,MAAM,0BAA0BM,MAChDnB,SAAW,CAACC,uBAAwBiB,UAExCpC,KAAKuC,KAAK,CACN,CAACC,WAAY,oDACXC,KAAM,CAAC3B,SAAUwB,SAAUpB,SAAUA,aACxC,GACFM,KAAK,kBACKlB,KAAKoC,iCACdlC,KAAKF,OACNkB,KAAKZ,eAAegB,SACpBC,MAAMhC,aAAaiC,YASxB3B,YAAYM,UAAUiC,8BAAgC,eAC9CJ,SAAWhC,KAAKyB,MAAM,0BAA0BM,MAChDzB,eAAiB,IAAIV,QAEzBF,KAAKuC,KAAK,CACN,CAACC,WAAY,4CACXC,KAAM,CAAC3B,SAAUwB,SAAUK,SAAU,MACxC,GACFnB,MAAK,SAASX,gBACJZ,UAAUsB,OAAO,mCAAoCV,YAE/DW,KAAK,SAASoB,KAAMC,IACjB5C,UAAU6C,YAAYlD,EAAE,0CAA2CgD,KAAMC,SACpEnC,UAAUwB,SAGjB1B,KAAKF,OACNkB,KAAKZ,eAAegB,SACpBC,MAAMhC,aAAaiC,YAG8C3B"}