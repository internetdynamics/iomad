{"version":3,"file":"competency_rule.min.js","sources":["../src/competency_rule.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Competency rule base module.\r\n *\r\n * @module     tool_lp/competency_rule\r\n * @copyright  2015 Frédéric Massart - FMCorz.net\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery'], function($) {\r\n\r\n    /**\r\n     * Competency rule abstract class.\r\n     *\r\n     * Any competency rule should extend this object. The event 'change' should be\r\n     * triggered on the instance when the configuration has changed. This will allow\r\n     * the components using the rule to gather the config, or check its validity.\r\n     *\r\n     * this._triggerChange();\r\n     *\r\n     * @param {Tree} tree The competency tree.\r\n     */\r\n    var Rule = function(tree) {\r\n        this._eventNode = $('<div>');\r\n        this._ready = $.Deferred();\r\n        this._tree = tree;\r\n    };\r\n\r\n    /** @property {Object} The current competency. */\r\n    Rule.prototype._competency = null;\r\n    /** @property {Node} The node we attach the events to. */\r\n    Rule.prototype._eventNode = null;\r\n    /** @property {Promise} Resolved when the object is ready. */\r\n    Rule.prototype._ready = null;\r\n    /** @property {Tree} The competency tree. */\r\n    Rule.prototype._tree = null;\r\n\r\n    /**\r\n     * Whether or not the current competency can be configured using this rule.\r\n     *\r\n     * @return {Boolean}\r\n     * @method canConfig\r\n     */\r\n    Rule.prototype.canConfig = function() {\r\n        return this._tree.hasChildren(this._competency.id);\r\n    };\r\n\r\n    /**\r\n     * The config established by this rule.\r\n     *\r\n     * To override in subclasses when relevant.\r\n     *\r\n     * @return {String|null}\r\n     * @method getConfig\r\n     */\r\n    Rule.prototype.getConfig = function() {\r\n        return null;\r\n    };\r\n\r\n    // eslint-disable-line valid-jsdoc\r\n    /**\r\n     * Return the type of the module.\r\n     *\r\n     * @return {String}\r\n     * @method getType\r\n     */\r\n    // eslint-enable-line valid-jsdoc\r\n    Rule.prototype.getType = function() {\r\n        throw new Error('Not implemented');\r\n    };\r\n\r\n    /**\r\n     * The init process.\r\n     *\r\n     * Do not override this, instead override _load.\r\n     *\r\n     * @return {Promise} Revoled when the plugin is initialised.\r\n     * @method init\r\n     */\r\n    Rule.prototype.init = function() {\r\n        return this._load();\r\n    };\r\n\r\n    /**\r\n     * Callback to inject the template.\r\n     *\r\n     * @returns {Promise} Resolved when done.\r\n     * @method injectTemplate\r\n     */\r\n    Rule.prototype.injectTemplate = function() {\r\n        return $.Deferred().reject().promise();\r\n    };\r\n\r\n    /**\r\n     * Whether or not the current config is valid.\r\n     *\r\n     * Plugins should override this.\r\n     *\r\n     * @return {Boolean}\r\n     * @method _isValid\r\n     */\r\n    Rule.prototype.isValid = function() {\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Load the class.\r\n     *\r\n     * @return {Promise}\r\n     * @method _load\r\n     * @protected\r\n     */\r\n    Rule.prototype._load = function() {\r\n        return $.when();\r\n    };\r\n\r\n    /**\r\n     * Register an event listener.\r\n     *\r\n     * @param {String} type The event type.\r\n     * @param {Function} handler The event listener.\r\n     * @method on\r\n     */\r\n    Rule.prototype.on = function(type, handler) {\r\n        this._eventNode.on(type, handler);\r\n    };\r\n\r\n    /**\r\n     * Sets the current competency.\r\n     *\r\n     * @param {Competency} competency\r\n     * @method setTargetCompetency\r\n     */\r\n    Rule.prototype.setTargetCompetency = function(competency) {\r\n        this._competency = competency;\r\n    };\r\n\r\n    /**\r\n     * Trigger an event.\r\n     *\r\n     * @param {String} type The type of event.\r\n     * @param {Object} data The data to pass to the listeners.\r\n     * @method _trigger\r\n     * @protected\r\n     */\r\n    Rule.prototype._trigger = function(type, data) {\r\n        this._eventNode.trigger(type, [data]);\r\n    };\r\n\r\n    /**\r\n     * Trigger the change event.\r\n     *\r\n     * @method _triggerChange\r\n     * @protected\r\n     */\r\n    Rule.prototype._triggerChange = function() {\r\n        this._trigger('change', this);\r\n    };\r\n\r\n    return /** @alias module:tool_lp/competency_rule */ Rule;\r\n\r\n});\r\n"],"names":["define","$","Rule","tree","_eventNode","_ready","Deferred","_tree","prototype","_competency","canConfig","this","hasChildren","id","getConfig","getType","Error","init","_load","injectTemplate","reject","promise","isValid","when","on","type","handler","setTargetCompetency","competency","_trigger","data","trigger","_triggerChange"],"mappings":";;;;;;;AAuBAA,iCAAO,CAAC,WAAW,SAASC,OAapBC,KAAO,SAASC,WACXC,WAAaH,EAAE,cACfI,OAASJ,EAAEK,gBACXC,MAAQJ,aAIjBD,KAAKM,UAAUC,YAAc,KAE7BP,KAAKM,UAAUJ,WAAa,KAE5BF,KAAKM,UAAUH,OAAS,KAExBH,KAAKM,UAAUD,MAAQ,KAQvBL,KAAKM,UAAUE,UAAY,kBAChBC,KAAKJ,MAAMK,YAAYD,KAAKF,YAAYI,KAWnDX,KAAKM,UAAUM,UAAY,kBAChB,MAWXZ,KAAKM,UAAUO,QAAU,iBACf,IAAIC,MAAM,oBAWpBd,KAAKM,UAAUS,KAAO,kBACXN,KAAKO,SAShBhB,KAAKM,UAAUW,eAAiB,kBACrBlB,EAAEK,WAAWc,SAASC,WAWjCnB,KAAKM,UAAUc,QAAU,kBACd,GAUXpB,KAAKM,UAAUU,MAAQ,kBACZjB,EAAEsB,QAUbrB,KAAKM,UAAUgB,GAAK,SAASC,KAAMC,cAC1BtB,WAAWoB,GAAGC,KAAMC,UAS7BxB,KAAKM,UAAUmB,oBAAsB,SAASC,iBACrCnB,YAAcmB,YAWvB1B,KAAKM,UAAUqB,SAAW,SAASJ,KAAMK,WAChC1B,WAAW2B,QAAQN,KAAM,CAACK,QASnC5B,KAAKM,UAAUwB,eAAiB,gBACvBH,SAAS,SAAUlB,OAGwBT"}