{"version":3,"file":"model.min.js","sources":["../src/model.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * AMD module for model actions confirmation.\r\n *\r\n * @module     tool_analytics/model\r\n * @copyright  2017 David Monllao\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core/str', 'core/log', 'core/notification', 'core/modal_factory', 'core/modal_events', 'core/templates'],\r\n    function($, Str, log, Notification, ModalFactory, ModalEvents, Templates) {\r\n\r\n    /**\r\n     * List of actions that require confirmation and confirmation message.\r\n     */\r\n    var actionsList = {\r\n        clear: {\r\n            title: {\r\n                key: 'clearpredictions',\r\n                component: 'tool_analytics'\r\n            }, body: {\r\n                key: 'clearmodelpredictions',\r\n                component: 'tool_analytics'\r\n            }\r\n\r\n        },\r\n        'delete': {\r\n            title: {\r\n                key: 'delete',\r\n                component: 'tool_analytics'\r\n            }, body: {\r\n                key: 'deletemodelconfirmation',\r\n                component: 'tool_analytics'\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Returns the model name.\r\n     *\r\n     * @param {Object} actionItem The action item DOM node.\r\n     * @return {String}\r\n     */\r\n    var getModelName = function(actionItem) {\r\n        var wrap = $(actionItem).closest('[data-model-name]');\r\n\r\n        if (wrap.length) {\r\n            return wrap.attr('data-model-name');\r\n\r\n        } else {\r\n            log.error('Unexpected DOM error - unable to obtain the model name');\r\n            return '';\r\n        }\r\n    };\r\n\r\n    /** @alias module:tool_analytics/model */\r\n    return {\r\n\r\n        /**\r\n         * Displays a confirm modal window before executing the action.\r\n         *\r\n         * @param {String} actionId\r\n         * @param {String} actionType\r\n         */\r\n        confirmAction: function(actionId, actionType) {\r\n            $('[data-action-id=\"' + actionId + '\"]').on('click', function(ev) {\r\n                ev.preventDefault();\r\n\r\n                var a = $(ev.currentTarget);\r\n\r\n                if (typeof actionsList[actionType] === \"undefined\") {\r\n                    log.error('Action \"' + actionType + '\" is not allowed.');\r\n                    return;\r\n                }\r\n\r\n                var reqStrings = [\r\n                    actionsList[actionType].title,\r\n                    actionsList[actionType].body\r\n                ];\r\n                reqStrings[1].param = getModelName(a);\r\n\r\n                var stringsPromise = Str.get_strings(reqStrings);\r\n                var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\r\n\r\n                $.when(stringsPromise, modalPromise).then(function(strings, modal) {\r\n                    modal.setTitle(strings[0]);\r\n                    modal.setBody(strings[1]);\r\n                    modal.setSaveButtonText(strings[0]);\r\n                    modal.getRoot().on(ModalEvents.save, function() {\r\n                        window.location.href = a.attr('href');\r\n                    });\r\n                    modal.show();\r\n                    return modal;\r\n                }).fail(Notification.exception);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Displays evaluation mode and time-splitting method choices.\r\n         *\r\n         * @param  {String}  actionId\r\n         * @param  {Boolean} trainedOnlyExternally\r\n         */\r\n        selectEvaluationOptions: function(actionId, trainedOnlyExternally) {\r\n            $('[data-action-id=\"' + actionId + '\"]').on('click', function(ev) {\r\n                ev.preventDefault();\r\n\r\n                var a = $(ev.currentTarget);\r\n\r\n                var timeSplittingMethods = $(this).attr('data-timesplitting-methods');\r\n\r\n                var stringsPromise = Str.get_strings([\r\n                    {\r\n                        key: 'evaluatemodel',\r\n                        component: 'tool_analytics'\r\n                    }, {\r\n                        key: 'evaluate',\r\n                        component: 'tool_analytics'\r\n                    }\r\n                ]);\r\n                var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\r\n                var bodyPromise = Templates.render('tool_analytics/evaluation_options', {\r\n                    trainedexternally: trainedOnlyExternally,\r\n                    timesplittingmethods: JSON.parse(timeSplittingMethods)\r\n                });\r\n\r\n                $.when(stringsPromise, modalPromise).then(function(strings, modal) {\r\n\r\n\r\n                    modal.getRoot().on(ModalEvents.hidden, modal.destroy.bind(modal));\r\n\r\n                    modal.setTitle(strings[0]);\r\n                    modal.setSaveButtonText(strings[1]);\r\n                    modal.setBody(bodyPromise);\r\n\r\n                    modal.getRoot().on(ModalEvents.save, function() {\r\n\r\n                        // Evaluation mode.\r\n                        var evaluationMode = $(\"input[name='evaluationmode']:checked\").val();\r\n                        if (evaluationMode == 'trainedmodel') {\r\n                            a.attr('href', a.attr('href') + '&mode=trainedmodel');\r\n                        }\r\n\r\n                        // Selected time-splitting id.\r\n                        var timeSplittingMethod = $(\"#id-evaluation-timesplitting\").val();\r\n                        a.attr('href', a.attr('href') + '&timesplitting=' + timeSplittingMethod);\r\n\r\n                        window.location.href = a.attr('href');\r\n                        return;\r\n                    });\r\n\r\n                    modal.show();\r\n                    return modal;\r\n                }).fail(Notification.exception);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Displays export options.\r\n         *\r\n         * We have two main options: export training data and export configuration.\r\n         * The 2nd option has an extra option: include the trained algorithm weights.\r\n         *\r\n         * @param  {String}  actionId\r\n         * @param  {Boolean} isTrained\r\n         */\r\n        selectExportOptions: function(actionId, isTrained) {\r\n            $('[data-action-id=\"' + actionId + '\"]').on('click', function(ev) {\r\n                ev.preventDefault();\r\n\r\n                var a = $(ev.currentTarget);\r\n\r\n                if (!isTrained) {\r\n                    // Export the model configuration if the model is not trained. We can't export anything else.\r\n                    a.attr('href', a.attr('href') + '&action=exportmodel&includeweights=0');\r\n                    window.location.href = a.attr('href');\r\n                    return;\r\n                }\r\n\r\n                var stringsPromise = Str.get_strings([\r\n                    {\r\n                        key: 'export',\r\n                        component: 'tool_analytics'\r\n                    }\r\n                ]);\r\n                var modalPromise = ModalFactory.create({type: ModalFactory.types.SAVE_CANCEL});\r\n                var bodyPromise = Templates.render('tool_analytics/export_options', {});\r\n\r\n                $.when(stringsPromise, modalPromise).then(function(strings, modal) {\r\n\r\n                    modal.getRoot().on(ModalEvents.hidden, modal.destroy.bind(modal));\r\n\r\n                    modal.setTitle(strings[0]);\r\n                    modal.setSaveButtonText(strings[0]);\r\n                    modal.setBody(bodyPromise);\r\n\r\n                    modal.getRoot().on(ModalEvents.save, function() {\r\n\r\n                        var exportOption = $(\"input[name='exportoption']:checked\").val();\r\n\r\n                        if (exportOption == 'exportdata') {\r\n                            a.attr('href', a.attr('href') + '&action=exportdata');\r\n\r\n                        } else {\r\n                            a.attr('href', a.attr('href') + '&action=exportmodel');\r\n                            if ($(\"#id-includeweights\").is(':checked')) {\r\n                                a.attr('href', a.attr('href') + '&includeweights=1');\r\n                            } else {\r\n                                a.attr('href', a.attr('href') + '&includeweights=0');\r\n                            }\r\n                        }\r\n\r\n                        window.location.href = a.attr('href');\r\n                        return;\r\n                    });\r\n\r\n                    modal.show();\r\n                    return modal;\r\n                }).fail(Notification.exception);\r\n            });\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","Str","log","Notification","ModalFactory","ModalEvents","Templates","actionsList","clear","title","key","component","body","confirmAction","actionId","actionType","on","ev","preventDefault","a","currentTarget","wrap","reqStrings","param","closest","length","attr","error","stringsPromise","get_strings","modalPromise","create","type","types","SAVE_CANCEL","when","then","strings","modal","setTitle","setBody","setSaveButtonText","getRoot","save","window","location","href","show","fail","exception","selectEvaluationOptions","trainedOnlyExternally","timeSplittingMethods","this","bodyPromise","render","trainedexternally","timesplittingmethods","JSON","parse","hidden","destroy","bind","val","timeSplittingMethod","selectExportOptions","isTrained","is"],"mappings":"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"}