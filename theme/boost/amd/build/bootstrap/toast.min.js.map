{"version":3,"file":"toast.min.js","sources":["../../src/bootstrap/toast.js"],"sourcesContent":["/**\r\n * --------------------------------------------------------------------------\r\n * Bootstrap (v4.6.2): toast.js\r\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\r\n * --------------------------------------------------------------------------\r\n */\r\n\r\nimport $ from 'jquery'\r\nimport Util from './util'\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst NAME = 'toast'\r\nconst VERSION = '4.6.2'\r\nconst DATA_KEY = 'bs.toast'\r\nconst EVENT_KEY = `.${DATA_KEY}`\r\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\r\n\r\nconst CLASS_NAME_FADE = 'fade'\r\nconst CLASS_NAME_HIDE = 'hide'\r\nconst CLASS_NAME_SHOW = 'show'\r\nconst CLASS_NAME_SHOWING = 'showing'\r\n\r\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\r\nconst EVENT_HIDE = `hide${EVENT_KEY}`\r\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\r\nconst EVENT_SHOW = `show${EVENT_KEY}`\r\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\r\n\r\nconst SELECTOR_DATA_DISMISS = '[data-dismiss=\"toast\"]'\r\n\r\nconst Default = {\r\n  animation: true,\r\n  autohide: true,\r\n  delay: 500\r\n}\r\n\r\nconst DefaultType = {\r\n  animation: 'boolean',\r\n  autohide: 'boolean',\r\n  delay: 'number'\r\n}\r\n\r\n/**\r\n * Class definition\r\n */\r\n\r\nclass Toast {\r\n  constructor(element, config) {\r\n    this._element = element\r\n    this._config = this._getConfig(config)\r\n    this._timeout = null\r\n    this._setListeners()\r\n  }\r\n\r\n  // Getters\r\n  static get VERSION() {\r\n    return VERSION\r\n  }\r\n\r\n  static get DefaultType() {\r\n    return DefaultType\r\n  }\r\n\r\n  static get Default() {\r\n    return Default\r\n  }\r\n\r\n  // Public\r\n  show() {\r\n    const showEvent = $.Event(EVENT_SHOW)\r\n\r\n    $(this._element).trigger(showEvent)\r\n    if (showEvent.isDefaultPrevented()) {\r\n      return\r\n    }\r\n\r\n    this._clearTimeout()\r\n\r\n    if (this._config.animation) {\r\n      this._element.classList.add(CLASS_NAME_FADE)\r\n    }\r\n\r\n    const complete = () => {\r\n      this._element.classList.remove(CLASS_NAME_SHOWING)\r\n      this._element.classList.add(CLASS_NAME_SHOW)\r\n\r\n      $(this._element).trigger(EVENT_SHOWN)\r\n\r\n      if (this._config.autohide) {\r\n        this._timeout = setTimeout(() => {\r\n          this.hide()\r\n        }, this._config.delay)\r\n      }\r\n    }\r\n\r\n    this._element.classList.remove(CLASS_NAME_HIDE)\r\n    Util.reflow(this._element)\r\n    this._element.classList.add(CLASS_NAME_SHOWING)\r\n    if (this._config.animation) {\r\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\r\n\r\n      $(this._element)\r\n        .one(Util.TRANSITION_END, complete)\r\n        .emulateTransitionEnd(transitionDuration)\r\n    } else {\r\n      complete()\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    if (!this._element.classList.contains(CLASS_NAME_SHOW)) {\r\n      return\r\n    }\r\n\r\n    const hideEvent = $.Event(EVENT_HIDE)\r\n\r\n    $(this._element).trigger(hideEvent)\r\n    if (hideEvent.isDefaultPrevented()) {\r\n      return\r\n    }\r\n\r\n    this._close()\r\n  }\r\n\r\n  dispose() {\r\n    this._clearTimeout()\r\n\r\n    if (this._element.classList.contains(CLASS_NAME_SHOW)) {\r\n      this._element.classList.remove(CLASS_NAME_SHOW)\r\n    }\r\n\r\n    $(this._element).off(EVENT_CLICK_DISMISS)\r\n\r\n    $.removeData(this._element, DATA_KEY)\r\n    this._element = null\r\n    this._config = null\r\n  }\r\n\r\n  // Private\r\n  _getConfig(config) {\r\n    config = {\r\n      ...Default,\r\n      ...$(this._element).data(),\r\n      ...(typeof config === 'object' && config ? config : {})\r\n    }\r\n\r\n    Util.typeCheckConfig(\r\n      NAME,\r\n      config,\r\n      this.constructor.DefaultType\r\n    )\r\n\r\n    return config\r\n  }\r\n\r\n  _setListeners() {\r\n    $(this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, () => this.hide())\r\n  }\r\n\r\n  _close() {\r\n    const complete = () => {\r\n      this._element.classList.add(CLASS_NAME_HIDE)\r\n      $(this._element).trigger(EVENT_HIDDEN)\r\n    }\r\n\r\n    this._element.classList.remove(CLASS_NAME_SHOW)\r\n    if (this._config.animation) {\r\n      const transitionDuration = Util.getTransitionDurationFromElement(this._element)\r\n\r\n      $(this._element)\r\n        .one(Util.TRANSITION_END, complete)\r\n        .emulateTransitionEnd(transitionDuration)\r\n    } else {\r\n      complete()\r\n    }\r\n  }\r\n\r\n  _clearTimeout() {\r\n    clearTimeout(this._timeout)\r\n    this._timeout = null\r\n  }\r\n\r\n  // Static\r\n  static _jQueryInterface(config) {\r\n    return this.each(function () {\r\n      const $element = $(this)\r\n      let data = $element.data(DATA_KEY)\r\n      const _config = typeof config === 'object' && config\r\n\r\n      if (!data) {\r\n        data = new Toast(this, _config)\r\n        $element.data(DATA_KEY, data)\r\n      }\r\n\r\n      if (typeof config === 'string') {\r\n        if (typeof data[config] === 'undefined') {\r\n          throw new TypeError(`No method named \"${config}\"`)\r\n        }\r\n\r\n        data[config](this)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * jQuery\r\n */\r\n\r\n$.fn[NAME] = Toast._jQueryInterface\r\n$.fn[NAME].Constructor = Toast\r\n$.fn[NAME].noConflict = () => {\r\n  $.fn[NAME] = JQUERY_NO_CONFLICT\r\n  return Toast._jQueryInterface\r\n}\r\n\r\nexport default Toast\r\n"],"names":["NAME","EVENT_KEY","JQUERY_NO_CONFLICT","$","fn","EVENT_CLICK_DISMISS","EVENT_HIDE","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","Default","animation","autohide","delay","DefaultType","Toast","constructor","element","config","_element","_config","this","_getConfig","_timeout","_setListeners","VERSION","show","showEvent","Event","trigger","isDefaultPrevented","_clearTimeout","classList","add","complete","remove","setTimeout","hide","reflow","transitionDuration","Util","getTransitionDurationFromElement","one","TRANSITION_END","emulateTransitionEnd","contains","hideEvent","_close","dispose","off","removeData","data","typeCheckConfig","on","clearTimeout","each","$element","TypeError","_jQueryInterface","Constructor","noConflict"],"mappings":"yVAcMA,KAAO,QAGPC,qBADW,YAEXC,mBAAqBC,gBAAEC,GAAF,MAOrBC,2CAAsCJ,WACtCK,yBAAoBL,WACpBM,6BAAwBN,WACxBO,yBAAoBP,WACpBQ,2BAAsBR,WAItBS,QAAU,CACdC,WAAW,EACXC,UAAU,EACVC,MAAO,KAGHC,YAAc,CAClBH,UAAW,UACXC,SAAU,UACVC,MAAO,gBAOHE,MACJC,YAAYC,QAASC,aACdC,SAAWF,aACXG,QAAUC,KAAKC,WAAWJ,aAC1BK,SAAW,UACXC,gBAIIC,2BA3CG,QA+CHX,gCACFA,YAGEJ,4BACFA,QAITgB,aACQC,UAAYxB,gBAAEyB,MAAMpB,mCAExBa,KAAKF,UAAUU,QAAQF,WACrBA,UAAUG,iCAITC,gBAEDV,KAAKD,QAAQT,gBACVQ,SAASa,UAAUC,IA9DN,cAiEdC,SAAW,UACVf,SAASa,UAAUG,OA/DH,gBAgEhBhB,SAASa,UAAUC,IAjEN,4BAmEhBZ,KAAKF,UAAUU,QAAQpB,aAErBY,KAAKD,QAAQR,gBACVW,SAAWa,YAAW,UACpBC,SACJhB,KAAKD,QAAQP,iBAIfM,SAASa,UAAUG,OA7EJ,sBA8EfG,OAAOjB,KAAKF,eACZA,SAASa,UAAUC,IA7ED,WA8EnBZ,KAAKD,QAAQT,UAAW,OACpB4B,mBAAqBC,cAAKC,iCAAiCpB,KAAKF,8BAEpEE,KAAKF,UACJuB,IAAIF,cAAKG,eAAgBT,UACzBU,qBAAqBL,yBAExBL,WAIJG,WACOhB,KAAKF,SAASa,UAAUa,SA3FT,qBA+FdC,UAAY3C,gBAAEyB,MAAMtB,gCAExBe,KAAKF,UAAUU,QAAQiB,WACrBA,UAAUhB,2BAITiB,SAGPC,eACOjB,gBAEDV,KAAKF,SAASa,UAAUa,SA5GR,cA6Gb1B,SAASa,UAAUG,OA7GN,4BAgHlBd,KAAKF,UAAU8B,IAAI5C,qCAEnB6C,WAAW7B,KAAKF,SAxHL,iBAyHRA,SAAW,UACXC,QAAU,KAIjBE,WAAWJ,eACTA,OAAS,IACJR,YACA,mBAAEW,KAAKF,UAAUgC,UACE,iBAAXjC,QAAuBA,OAASA,OAAS,kBAGjDkC,gBACHpD,KACAkB,OACAG,KAAKL,YAAYF,aAGZI,OAGTM,oCACIH,KAAKF,UAAUkC,GAAGhD,oBAhIM,0BAgIsC,IAAMgB,KAAKgB,SAG7EU,eACQb,SAAW,UACVf,SAASa,UAAUC,IA/IN,4BAgJhBZ,KAAKF,UAAUU,QAAQtB,uBAGtBY,SAASa,UAAUG,OAlJJ,QAmJhBd,KAAKD,QAAQT,UAAW,OACpB4B,mBAAqBC,cAAKC,iCAAiCpB,KAAKF,8BAEpEE,KAAKF,UACJuB,IAAIF,cAAKG,eAAgBT,UACzBU,qBAAqBL,yBAExBL,WAIJH,gBACEuB,aAAajC,KAAKE,eACbA,SAAW,6BAIML,eACfG,KAAKkC,MAAK,iBACTC,UAAW,mBAAEnC,UACf8B,KAAOK,SAASL,KA7KT,eAgLNA,OACHA,KAAO,IAAIpC,MAAMM,KAHe,iBAAXH,QAAuBA,QAI5CsC,SAASL,KAlLA,WAkLeA,OAGJ,iBAAXjC,OAAqB,SACF,IAAjBiC,KAAKjC,cACR,IAAIuC,qCAA8BvC,aAG1CiC,KAAKjC,QAAQG,2BAUnBjB,GAAF,MAAaW,MAAM2C,iCACjBtD,GAAF,MAAWuD,YAAc5C,sBACvBX,GAAF,MAAWwD,WAAa,qBACpBxD,GAAF,MAAaF,mBACNa,MAAM2C,+BAGA3C"}