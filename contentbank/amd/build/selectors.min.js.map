{"version":3,"file":"selectors.min.js","sources":["../src/selectors.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Define all of the selectors we will be using on the contentbank interface.\r\n *\r\n * @module     core_contentbank/selectors\r\n * @copyright  2020 Sara Arjona <sara@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * A small helper function to build queryable data selectors.\r\n *\r\n * @method getDataSelector\r\n * @param {String} name\r\n * @param {String} value\r\n * @return {string}\r\n */\r\nconst getDataSelector = (name, value) => {\r\n    return `[data-${name}=\"${value}\"]`;\r\n};\r\n\r\nexport default {\r\n    regions: {\r\n        cbcontentname: getDataSelector('region', 'cb-content-name'),\r\n        contentbank: getDataSelector('region', 'contentbank'),\r\n        filearea: getDataSelector('region', 'filearea')\r\n    },\r\n    actions: {\r\n        search: getDataSelector('action', 'searchcontent'),\r\n        clearSearch: getDataSelector('action', 'clearsearch'),\r\n        viewgrid: getDataSelector('action', 'viewgrid'),\r\n        viewlist: getDataSelector('action', 'viewlist'),\r\n        sortname: getDataSelector('action', 'sortname'),\r\n        sortuses: getDataSelector('action', 'sortuses'),\r\n        sortdate: getDataSelector('action', 'sortdate'),\r\n        sortsize: getDataSelector('action', 'sortsize'),\r\n        sorttype: getDataSelector('action', 'sorttype'),\r\n        sortauthor: getDataSelector('action', 'sortauthor'),\r\n    },\r\n    elements: {\r\n        listitem: '.cb-listitem',\r\n        heading: '.cb-heading',\r\n        cell: '.cb-column',\r\n        cbnavbarbreadcrumb: '.cb-navbar-breadbrumb',\r\n        cbnavbartotalsearch: '.cb-navbar-totalsearch',\r\n        searchinput: '[data-action=\"search\"]',\r\n        sortbutton: '.cb-btnsort'\r\n    },\r\n};\r\n"],"names":["getDataSelector","name","value","regions","cbcontentname","contentbank","filearea","actions","search","clearSearch","viewgrid","viewlist","sortname","sortuses","sortdate","sortsize","sorttype","sortauthor","elements","listitem","heading","cell","cbnavbarbreadcrumb","cbnavbartotalsearch","searchinput","sortbutton"],"mappings":";;;;;;;;MA+BMA,gBAAkB,CAACC,KAAMC,wBACXD,kBAASC,yBAGd,CACXC,QAAS,CACLC,cAAeJ,gBAAgB,SAAU,mBACzCK,YAAaL,gBAAgB,SAAU,eACvCM,SAAUN,gBAAgB,SAAU,aAExCO,QAAS,CACLC,OAAQR,gBAAgB,SAAU,iBAClCS,YAAaT,gBAAgB,SAAU,eACvCU,SAAUV,gBAAgB,SAAU,YACpCW,SAAUX,gBAAgB,SAAU,YACpCY,SAAUZ,gBAAgB,SAAU,YACpCa,SAAUb,gBAAgB,SAAU,YACpCc,SAAUd,gBAAgB,SAAU,YACpCe,SAAUf,gBAAgB,SAAU,YACpCgB,SAAUhB,gBAAgB,SAAU,YACpCiB,WAAYjB,gBAAgB,SAAU,eAE1CkB,SAAU,CACNC,SAAU,eACVC,QAAS,cACTC,KAAM,aACNC,mBAAoB,wBACpBC,oBAAqB,yBACrBC,YAAa,yBACbC,WAAY"}