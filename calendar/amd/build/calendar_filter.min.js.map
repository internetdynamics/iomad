{"version":3,"file":"calendar_filter.min.js","sources":["../src/calendar_filter.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * This module is responsible for the calendar filter.\r\n *\r\n * @module     core_calendar/calendar_filter\r\n * @copyright  2017 Andrew Nicols <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core_calendar/selectors',\r\n    'core_calendar/events',\r\n    'core/str',\r\n    'core/templates',\r\n],\r\nfunction(\r\n    $,\r\n    CalendarSelectors,\r\n    CalendarEvents,\r\n    Str,\r\n    Templates\r\n) {\r\n\r\n    var registerEventListeners = function(root) {\r\n        root.on('click', CalendarSelectors.eventFilterItem, function(e) {\r\n            var target = $(e.currentTarget);\r\n\r\n            toggleFilter(target);\r\n\r\n            e.preventDefault();\r\n        });\r\n\r\n        $('body').on(CalendarEvents.viewUpdated, function() {\r\n            var filters = root.find(CalendarSelectors.eventFilterItem);\r\n\r\n            filters.each(function(i, filter) {\r\n                filter = $(filter);\r\n                if (filter.data('eventtype-hidden')) {\r\n                    var data = getFilterData(filter);\r\n                    fireFilterChangedEvent(data);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    var toggleFilter = function(target) {\r\n        var data = getFilterData(target);\r\n\r\n        // Toggle the hidden. We need to render the template before we change the value.\r\n        data.hidden = !data.hidden;\r\n\r\n        M.util.js_pending(\"core_calendar/calendar_filter:toggleFilter\");\r\n        return Str.get_string('eventtype' + data.eventtype, 'calendar')\r\n        .then(function(nameStr) {\r\n            data.name = nameStr;\r\n            data.icon = true;\r\n            data.key = 'i/' + data.eventtype + 'event';\r\n            data.component = 'core';\r\n\r\n            return data;\r\n        })\r\n        .then(function(context) {\r\n            return Templates.render('core_calendar/event_filter_key', context);\r\n        })\r\n        .then(function(html, js) {\r\n            return Templates.replaceNode(target, html, js);\r\n        })\r\n        .then(function() {\r\n            fireFilterChangedEvent(data);\r\n            M.util.js_complete(\"core_calendar/calendar_filter:toggleFilter\");\r\n            return;\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Fire the filterChanged event for the specified data.\r\n     *\r\n     * @param   {object} data The data to include\r\n     */\r\n    var fireFilterChangedEvent = function(data) {\r\n        M.util.js_pending(\"month-mini-filterChanged\");\r\n        $('body').trigger(CalendarEvents.filterChanged, {\r\n            type: data.eventtype,\r\n            hidden: data.hidden,\r\n        });\r\n        M.util.js_complete(\"month-mini-filterChanged\");\r\n    };\r\n\r\n    /**\r\n     * Get the filter data for the specified target.\r\n     *\r\n     * @param   {jQuery} target The target node\r\n     * @return  {Object}\r\n     */\r\n    var getFilterData = function(target) {\r\n        return {\r\n            eventtype: target.data('eventtype'),\r\n            hidden: target.data('eventtype-hidden'),\r\n        };\r\n    };\r\n\r\n    return {\r\n        init: function(root) {\r\n            root = $(root);\r\n\r\n            registerEventListeners(root);\r\n        }\r\n    };\r\n});\r\n"],"names":["define","$","CalendarSelectors","CalendarEvents","Str","Templates","toggleFilter","target","data","getFilterData","hidden","M","util","js_pending","get_string","eventtype","then","nameStr","name","icon","key","component","context","render","html","js","replaceNode","fireFilterChangedEvent","js_complete","trigger","filterChanged","type","init","root","on","eventFilterItem","e","currentTarget","preventDefault","viewUpdated","find","each","i","filter","registerEventListeners"],"mappings":";;;;;;;AAsBAA,uCAAO,CACH,SACA,0BACA,uBACA,WACA,mBAEJ,SACIC,EACAC,kBACAC,eACAC,IACAC,eAyBIC,aAAe,SAASC,YACpBC,KAAOC,cAAcF,eAGzBC,KAAKE,QAAUF,KAAKE,OAEpBC,EAAEC,KAAKC,WAAW,8CACXT,IAAIU,WAAW,YAAcN,KAAKO,UAAW,YACnDC,MAAK,SAASC,gBACXT,KAAKU,KAAOD,QACZT,KAAKW,MAAO,EACZX,KAAKY,IAAM,KAAOZ,KAAKO,UAAY,QACnCP,KAAKa,UAAY,OAEVb,QAEVQ,MAAK,SAASM,gBACJjB,UAAUkB,OAAO,iCAAkCD,YAE7DN,MAAK,SAASQ,KAAMC,WACVpB,UAAUqB,YAAYnB,OAAQiB,KAAMC,OAE9CT,MAAK,WACFW,uBAAuBnB,MACvBG,EAAEC,KAAKgB,YAAY,kDAUvBD,uBAAyB,SAASnB,MAClCG,EAAEC,KAAKC,WAAW,4BAClBZ,EAAE,QAAQ4B,QAAQ1B,eAAe2B,cAAe,CAC5CC,KAAMvB,KAAKO,UACXL,OAAQF,KAAKE,SAEjBC,EAAEC,KAAKgB,YAAY,6BASnBnB,cAAgB,SAASF,cAClB,CACHQ,UAAWR,OAAOC,KAAK,aACvBE,OAAQH,OAAOC,KAAK,4BAIrB,CACHwB,KAAM,SAASC,OA/EU,SAASA,MAClCA,KAAKC,GAAG,QAAShC,kBAAkBiC,iBAAiB,SAASC,OACrD7B,OAASN,EAAEmC,EAAEC,eAEjB/B,aAAaC,QAEb6B,EAAEE,oBAGNrC,EAAE,QAAQiC,GAAG/B,eAAeoC,aAAa,WACvBN,KAAKO,KAAKtC,kBAAkBiC,iBAElCM,MAAK,SAASC,EAAGC,YACrBA,OAAS1C,EAAE0C,SACAnC,KAAK,oBAAqB,KAC7BA,KAAOC,cAAckC,QACzBhB,uBAAuBnB,aAkE/BoC,CAFAX,KAAOhC,EAAEgC"}