{"version":3,"file":"event_form.min.js","sources":["../src/event_form.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module to enhance the event form.\r\n *\r\n * @module     core_calendar/event_form\r\n * @copyright  2017 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine(['jquery', 'core_calendar/repository', 'core/notification'], function($, CalendarRepository, Notification) {\r\n\r\n    var SELECTORS = {\r\n        EVENT_GROUP_COURSE_ID: '[name=\"groupcourseid\"]',\r\n        EVENT_GROUP_ID: '[name=\"groupid\"]',\r\n        SELECT_OPTION: 'option'\r\n    };\r\n\r\n    /**\r\n     * Listen for when the user changes the group course when configuring\r\n     * a group event and filter the options in the group select to only\r\n     * show the groups available within the course the user has selected.\r\n     *\r\n     * @method addCourseGroupSelectListeners\r\n     * @param {object} formElement The root form element\r\n     */\r\n    var addCourseGroupSelectListeners = function(formElement) {\r\n        var courseGroupSelect = formElement.find(SELECTORS.EVENT_GROUP_COURSE_ID);\r\n\r\n        var loadGroupSelectOptions = function(groups) {\r\n            var groupSelect = formElement.find(SELECTORS.EVENT_GROUP_ID),\r\n                groupSelectOptions = groupSelect.find(SELECTORS.SELECT_OPTION),\r\n                courseGroups = $(groups);\r\n\r\n            // Let's clear all options first.\r\n            groupSelectOptions.remove();\r\n            groupSelect.prop(\"disabled\", false);\r\n            courseGroups.each(function(id, group) {\r\n                $(groupSelect).append($(\"<option></option>\").attr(\"value\", group.id).text(group.name));\r\n            });\r\n        };\r\n\r\n        // If the user choose a course in the selector do a WS request to get groups.\r\n        courseGroupSelect.on('change', function() {\r\n            var courseId = formElement.find(SELECTORS.EVENT_GROUP_COURSE_ID).val();\r\n            CalendarRepository.getCourseGroupsData(courseId)\r\n                .then(function(groups) {\r\n                    return loadGroupSelectOptions(groups);\r\n                })\r\n                .catch(Notification.exception);\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Initialise all of the form enhancements.\r\n     *\r\n     * @method init\r\n     * @param {string} formId The value of the form's id attribute\r\n     */\r\n    var init = function(formId) {\r\n        var formElement = $('#' + formId);\r\n        addCourseGroupSelectListeners(formElement);\r\n    };\r\n\r\n    return {\r\n        init: init,\r\n    };\r\n});\r\n"],"names":["define","$","CalendarRepository","Notification","SELECTORS","addCourseGroupSelectListeners","formElement","courseGroupSelect","find","on","courseId","val","getCourseGroupsData","then","groups","groupSelect","groupSelectOptions","courseGroups","remove","prop","each","id","group","append","attr","text","name","loadGroupSelectOptions","catch","exception","init","formId"],"mappings":";;;;;;;AAsBAA,kCAAO,CAAC,SAAU,2BAA4B,sBAAsB,SAASC,EAAGC,mBAAoBC,kBAE5FC,gCACuB,yBADvBA,yBAEgB,mBAFhBA,wBAGe,SAWfC,8BAAgC,SAASC,iBACrCC,kBAAoBD,YAAYE,KAAKJ,iCAgBzCG,kBAAkBE,GAAG,UAAU,eACvBC,SAAWJ,YAAYE,KAAKJ,iCAAiCO,MACjET,mBAAmBU,oBAAoBF,UAClCG,MAAK,SAASC,eAjBM,SAASA,YAC9BC,YAAcT,YAAYE,KAAKJ,0BAC/BY,mBAAqBD,YAAYP,KAAKJ,yBACtCa,aAAehB,EAAEa,QAGrBE,mBAAmBE,SACnBH,YAAYI,KAAK,YAAY,GAC7BF,aAAaG,MAAK,SAASC,GAAIC,OAC3BrB,EAAEc,aAAaQ,OAAOtB,EAAE,qBAAqBuB,KAAK,QAASF,MAAMD,IAAII,KAAKH,MAAMI,UASrEC,CAAuBb,WAEjCc,MAAMzB,aAAa0B,qBAezB,CACHC,KANO,SAASC,YACZzB,YAAcL,EAAE,IAAM8B,QAC1B1B,8BAA8BC"}