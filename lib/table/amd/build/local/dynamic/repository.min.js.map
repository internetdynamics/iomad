{"version":3,"file":"repository.min.js","sources":["../../../src/local/dynamic/repository.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module to handle calendar ajax actions.\r\n *\r\n * @module     core_table/local/dynamic/repository\r\n * @copyright  2017 Simey Lameze <lameze@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\nimport {call as fetchMany} from 'core/ajax';\r\n\r\n/**\r\n * Fetch table view.\r\n *\r\n * @method fetch\r\n * @param {String} component The component\r\n * @param {String} handler The name of the handler\r\n * @param {String} uniqueid The unique id of the table\r\n * @param {Object} options The options to use when updating the table\r\n * @param {Array} options.sortData The list of columns to sort by\r\n * @param {Number} options.joinType The filterset join type\r\n * @param {Object} options.filters The filters to apply when searching\r\n * @param {String} options.firstinitial The first name initial to filter on\r\n * @param {String} options.lastinitial The last name initial to filter on\r\n * @param {String} options.pageNumber The page number\r\n * @param {Number} options.pageSize The page size\r\n * @param {Object} options.hiddenColumns The columns to hide\r\n * @param {Bool} resetPreferences\r\n * @return {Promise} Resolved with requested table view\r\n */\r\nexport const fetch = (component, handler, uniqueid, {\r\n    sortData = [],\r\n    joinType = null,\r\n    filters = {},\r\n    firstinitial = null,\r\n    lastinitial = null,\r\n    pageNumber = null,\r\n    pageSize = null,\r\n    hiddenColumns = {}\r\n} = {}, resetPreferences = false) => fetchMany([{\r\n    methodname: `core_table_get_dynamic_table_content`,\r\n    args: {\r\n        component,\r\n        handler,\r\n        uniqueid,\r\n        sortdata: sortData,\r\n        jointype: joinType,\r\n        filters,\r\n        firstinitial,\r\n        lastinitial,\r\n        pagenumber: pageNumber,\r\n        pagesize: pageSize,\r\n        hiddencolumns: hiddenColumns,\r\n        resetpreferences: resetPreferences\r\n    },\r\n}])[0];\r\n"],"names":["component","handler","uniqueid","sortData","joinType","filters","firstinitial","lastinitial","pageNumber","pageSize","hiddenColumns","resetPreferences","methodname","args","sortdata","jointype","pagenumber","pagesize","hiddencolumns","resetpreferences"],"mappings":"4LA2CqB,SAACA,UAAWC,QAASC,cAAUC,SAChDA,SAAW,GADqCC,SAEhDA,SAAW,KAFqCC,QAGhDA,QAAU,GAHsCC,aAIhDA,aAAe,KAJiCC,YAKhDA,YAAc,KALkCC,WAMhDA,WAAa,KANmCC,SAOhDA,SAAW,KAPqCC,cAQhDA,cAAgB,2DAChB,GAAIC,gFAA6B,cAAU,CAAC,CAC5CC,kDACAC,KAAM,CACFb,UAAAA,UACAC,QAAAA,QACAC,SAAAA,SACAY,SAAUX,SACVY,SAAUX,SACVC,QAAAA,QACAC,aAAAA,aACAC,YAAAA,YACAS,WAAYR,WACZS,SAAUR,SACVS,cAAeR,cACfS,iBAAkBR,qBAEtB"}