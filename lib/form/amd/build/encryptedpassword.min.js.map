{"version":3,"file":"encryptedpassword.min.js","sources":["../src/encryptedpassword.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Encrypted password functionality.\r\n *\r\n * @module core_form/encryptedpassword\r\n * @copyright 2019 The Open University\r\n * @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\n/**\r\n * Constructor for EncryptedPassword.\r\n *\r\n * @class core_form/encryptedpassword\r\n * @param {String} elementId The element to apply the encrypted password JS to\r\n */\r\nexport const EncryptedPassword = function(elementId) {\r\n    const wrapper = document.querySelector('div[data-encryptedpasswordid=\"' + elementId + '\"]');\r\n    this.spanOrLink = wrapper.querySelector('span, a');\r\n    this.input = wrapper.querySelector('input');\r\n    this.editButtonOrLink = wrapper.querySelector('button[data-editbutton], a');\r\n    this.cancelButton = wrapper.querySelector('button[data-cancelbutton]');\r\n\r\n    // Edit button action.\r\n    var editHandler = (e) => {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        this.startEditing(true);\r\n    };\r\n    this.editButtonOrLink.addEventListener('click', editHandler);\r\n\r\n    // When it's a link, do some magic to make the label work as well.\r\n    if (this.editButtonOrLink.nodeName === 'A') {\r\n        wrapper.parentElement.previousElementSibling.querySelector('label').addEventListener('click', editHandler);\r\n    }\r\n\r\n    // Cancel button action.\r\n    this.cancelButton.addEventListener('click', (e) => {\r\n        e.stopImmediatePropagation();\r\n        e.preventDefault();\r\n        this.cancelEditing();\r\n    });\r\n\r\n    // If the value is not set yet, start editing and remove the cancel option - so that\r\n    // it saves something in the config table and doesn't keep repeat showing it as a new\r\n    // admin setting...\r\n    if (wrapper.dataset.novalue === 'y') {\r\n        this.startEditing(false);\r\n        this.cancelButton.style.display = 'none';\r\n    }\r\n};\r\n\r\n/**\r\n * Starts editing.\r\n *\r\n * @param {Boolean} moveFocus If true, sets focus to the edit box\r\n */\r\nEncryptedPassword.prototype.startEditing = function(moveFocus) {\r\n    this.input.style.display = 'inline';\r\n    this.input.disabled = false;\r\n    this.spanOrLink.style.display = 'none';\r\n    this.editButtonOrLink.style.display = 'none';\r\n    this.cancelButton.style.display = 'inline';\r\n\r\n    // Move the id around, which changes what happens when you click the label.\r\n    const id = this.editButtonOrLink.id;\r\n    this.editButtonOrLink.removeAttribute('id');\r\n    this.input.id = id;\r\n\r\n    if (moveFocus) {\r\n        this.input.focus();\r\n    }\r\n};\r\n\r\n/**\r\n * Cancels editing.\r\n */\r\nEncryptedPassword.prototype.cancelEditing = function() {\r\n    this.input.style.display = 'none';\r\n    this.input.value = '';\r\n    this.input.disabled = true;\r\n    this.spanOrLink.style.display = 'inline';\r\n    this.editButtonOrLink.style.display = 'inline';\r\n    this.cancelButton.style.display = 'none';\r\n\r\n    // Move the id around, which changes what happens when you click the label.\r\n    const id = this.input.id;\r\n    this.input.removeAttribute('id');\r\n    this.editButtonOrLink.id = id;\r\n};\r\n"],"names":["EncryptedPassword","elementId","wrapper","document","querySelector","spanOrLink","input","editButtonOrLink","cancelButton","editHandler","e","stopImmediatePropagation","preventDefault","startEditing","addEventListener","this","nodeName","parentElement","previousElementSibling","cancelEditing","dataset","novalue","style","display","prototype","moveFocus","disabled","id","removeAttribute","focus","value"],"mappings":";;;;;;;;MA6BaA,kBAAoB,SAASC,iBAChCC,QAAUC,SAASC,cAAc,iCAAmCH,UAAY,WACjFI,WAAaH,QAAQE,cAAc,gBACnCE,MAAQJ,QAAQE,cAAc,cAC9BG,iBAAmBL,QAAQE,cAAc,mCACzCI,aAAeN,QAAQE,cAAc,iCAGtCK,YAAeC,IACfA,EAAEC,2BACFD,EAAEE,sBACGC,cAAa,SAEjBN,iBAAiBO,iBAAiB,QAASL,aAGT,MAAnCM,KAAKR,iBAAiBS,UACtBd,QAAQe,cAAcC,uBAAuBd,cAAc,SAASU,iBAAiB,QAASL,kBAI7FD,aAAaM,iBAAiB,SAAUJ,IACzCA,EAAEC,2BACFD,EAAEE,sBACGO,mBAMuB,MAA5BjB,QAAQkB,QAAQC,eACXR,cAAa,QACbL,aAAac,MAAMC,QAAU,sDAS1CvB,kBAAkBwB,UAAUX,aAAe,SAASY,gBAC3CnB,MAAMgB,MAAMC,QAAU,cACtBjB,MAAMoB,UAAW,OACjBrB,WAAWiB,MAAMC,QAAU,YAC3BhB,iBAAiBe,MAAMC,QAAU,YACjCf,aAAac,MAAMC,QAAU,eAG5BI,GAAKZ,KAAKR,iBAAiBoB,QAC5BpB,iBAAiBqB,gBAAgB,WACjCtB,MAAMqB,GAAKA,GAEZF,gBACKnB,MAAMuB,SAOnB7B,kBAAkBwB,UAAUL,cAAgB,gBACnCb,MAAMgB,MAAMC,QAAU,YACtBjB,MAAMwB,MAAQ,QACdxB,MAAMoB,UAAW,OACjBrB,WAAWiB,MAAMC,QAAU,cAC3BhB,iBAAiBe,MAAMC,QAAU,cACjCf,aAAac,MAAMC,QAAU,aAG5BI,GAAKZ,KAAKT,MAAMqB,QACjBrB,MAAMsB,gBAAgB,WACtBrB,iBAAiBoB,GAAKA"}