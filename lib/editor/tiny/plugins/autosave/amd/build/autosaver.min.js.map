{"version":3,"file":"autosaver.min.js","sources":["../src/autosaver.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Storage helper for the Moodle Tiny Autosave plugin.\r\n *\r\n * @module      tiny_autosave/autosaver\r\n * @copyright   2022 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Options from './options';\r\nimport * as Storage from './storage';\r\nimport Log from 'core/log';\r\nimport {getLogSource} from './common';\r\n\r\nexport const register = (editor) => {\r\n    const undoHandler = () => {\r\n        if (!editor.undoManager.hasUndo()) {\r\n            Log.debug(`Ignoring undo event as there is no undo history`, getLogSource(editor));\r\n            return;\r\n        }\r\n        Storage.saveDraft(editor);\r\n    };\r\n\r\n    const visibilityChangedHandler = () => {\r\n        if (document.visibilityState === 'hidden') {\r\n            if (Options.isInitialised(editor)) {\r\n                Storage.saveDraft(editor);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Attempt to store the draft one final time before the page unloads.\r\n    // Note: This may need to be sent as a beacon instead.\r\n    document.addEventListener('visibilitychange', visibilityChangedHandler);\r\n\r\n    // When the page is submitted as a form, remove the draft.\r\n    editor.on('submit', () => {\r\n        document.removeEventListener('visibilitychange', visibilityChangedHandler);\r\n        Storage.removeAutosaveSession(editor);\r\n    });\r\n\r\n    editor.on('init', () => {\r\n        // Setup the Undo handler.\r\n        editor.on('AddUndo', undoHandler);\r\n\r\n        if (editor.dom.isEmpty(editor.getBody())) {\r\n            Log.info(`Attempting to restore draft`, getLogSource(editor));\r\n            Storage.restoreDraft(editor);\r\n        } else {\r\n            // There was nothing to restore, so we can mark the editor as initialised.\r\n            Log.warn(`Skipping draft restoration. The editor is not empty.`, getLogSource(editor));\r\n            Options.markInitialised(editor);\r\n        }\r\n    });\r\n};\r\n"],"names":["editor","undoHandler","undoManager","hasUndo","Storage","saveDraft","debug","visibilityChangedHandler","document","visibilityState","Options","isInitialised","addEventListener","on","removeEventListener","removeAutosaveSession","dom","isEmpty","getBody","info","restoreDraft","warn","markInitialised"],"mappings":";;;;;;;4OA4ByBA,eACfC,YAAc,KACXD,OAAOE,YAAYC,UAIxBC,QAAQC,UAAUL,qBAHVM,yDAAyD,wBAAaN,UAM5EO,yBAA2B,KACI,WAA7BC,SAASC,iBACLC,QAAQC,cAAcX,SACtBI,QAAQC,UAAUL,SAO9BQ,SAASI,iBAAiB,mBAAoBL,0BAG9CP,OAAOa,GAAG,UAAU,KAChBL,SAASM,oBAAoB,mBAAoBP,0BACjDH,QAAQW,sBAAsBf,WAGlCA,OAAOa,GAAG,QAAQ,KAEdb,OAAOa,GAAG,UAAWZ,aAEjBD,OAAOgB,IAAIC,QAAQjB,OAAOkB,yBACtBC,oCAAoC,wBAAanB,SACrDI,QAAQgB,aAAapB,uBAGjBqB,6DAA6D,wBAAarB,SAC9EU,QAAQY,gBAAgBtB"}