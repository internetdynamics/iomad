{"version":3,"file":"commands_audio.min.js","sources":["../src/commands_audio.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Record RTC - record audio command.\r\n *\r\n * @module      tiny_recordrtc/commands_audio\r\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {get_string as getString} from 'core/str';\r\nimport {getButtonImage} from 'editor_tiny/utils';\r\nimport {\r\n    audioButtonName,\r\n    component\r\n} from './common';\r\nimport Recorder from './audio_recorder';\r\nimport {isAudioAllowed} from './options';\r\n\r\nexport default async() => {\r\n    if (!Recorder.isBrowserCompatible()) {\r\n        // The browser doesn't support the plugin, so just don't show it.\r\n        return () => false;\r\n    }\r\n\r\n    const [\r\n        audioButtonTitle,\r\n        audio,\r\n    ] = await Promise.all([\r\n        getString('audiobuttontitle', component),\r\n        getButtonImage('audio', component),\r\n    ]);\r\n\r\n    return (editor) => {\r\n        if (!isAudioAllowed(editor)) {\r\n            return;\r\n        }\r\n\r\n        const icon = 'audio';\r\n        editor.ui.registry.addIcon(icon, audio.html);\r\n\r\n        editor.ui.registry.addButton(audioButtonName, {\r\n            icon,\r\n            tooltip: audioButtonTitle,\r\n            onAction: () => Recorder.display(editor),\r\n        });\r\n\r\n        editor.ui.registry.addMenuItem(audioButtonName, {\r\n            icon,\r\n            text: audioButtonTitle,\r\n            onAction: () => Recorder.display(editor),\r\n        });\r\n    };\r\n};\r\n"],"names":["async","Recorder","isBrowserCompatible","audioButtonTitle","audio","Promise","all","component","editor","ui","registry","addIcon","html","addButton","audioButtonName","icon","tooltip","onAction","display","addMenuItem","text"],"mappings":";;;;;;;qLAgCeA,cACNC,wBAASC,4BAEH,KAAM,QAIbC,iBACAC,aACMC,QAAQC,IAAI,EAClB,mBAAU,mBAAoBC,oBAC9B,yBAAe,QAASA,4BAGpBC,cACC,2BAAeA,eAKpBA,OAAOC,GAAGC,SAASC,QADN,QACoBP,MAAMQ,MAEvCJ,OAAOC,GAAGC,SAASG,UAAUC,wBAAiB,CAC1CC,KAJS,QAKTC,QAASb,iBACTc,SAAU,IAAMhB,wBAASiB,QAAQV,UAGrCA,OAAOC,GAAGC,SAASS,YAAYL,wBAAiB,CAC5CC,KAVS,QAWTK,KAAMjB,iBACNc,SAAU,IAAMhB,wBAASiB,QAAQV"}