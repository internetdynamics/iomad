{"version":3,"file":"configuration.min.js","sources":["../src/configuration.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Record RTC configuration.\r\n *\r\n * @module      tiny_recordrtc/configuration\r\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport {\r\n    audioButtonName,\r\n    videoButtonName\r\n} from './common';\r\nimport {\r\n    addMenubarItem,\r\n} from 'editor_tiny/utils';\r\n\r\nconst configureMenu = (menu) => {\r\n    const items = menu.insert.items.split(' ');\r\n    const inserted = items.some((item, index) => {\r\n        // Append after the media or video button.\r\n        if (item.match(/(media|video)\\b/)) {\r\n            items.splice(index + 1, 0, audioButtonName, videoButtonName);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n\r\n    if (inserted) {\r\n        menu.insert.items = items.join(' ');\r\n    } else {\r\n        addMenubarItem(menu, 'insert', `${audioButtonName} ${videoButtonName}`);\r\n    }\r\n\r\n    return menu;\r\n};\r\n\r\nconst configureToolbar = (toolbar) => {\r\n    // The toolbar contains an array of named sections.\r\n    // The Moodle integration ensures that there is a section called 'content'.\r\n\r\n\r\n    return toolbar.map((section) => {\r\n        if (section.name === 'content') {\r\n            const inserted = section.items.some((item, index) => {\r\n                // Append after the media or video button.\r\n                if (item.match(/(media|video)\\b/)) {\r\n                    section.items.splice(index + 1, 0, audioButtonName, videoButtonName);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n\r\n            if (!inserted) {\r\n                section.items.unshift(audioButtonName, videoButtonName);\r\n            }\r\n        }\r\n\r\n        return section;\r\n    });\r\n};\r\n\r\nexport const configure = (instanceConfig) => {\r\n    // Update the instance configuration to add the Media menu option to the menus and toolbars and upload_handler.\r\n    return {\r\n        toolbar: configureToolbar(instanceConfig.toolbar),\r\n        menu: configureMenu(instanceConfig.menu),\r\n    };\r\n};\r\n"],"names":["configureMenu","menu","items","insert","split","some","item","index","match","splice","audioButtonName","videoButtonName","join","instanceConfig","toolbar","map","section","name","unshift"],"mappings":";;;;;;;;MA+BMA,cAAiBC,aACbC,MAAQD,KAAKE,OAAOD,MAAME,MAAM,YACrBF,MAAMG,MAAK,CAACC,KAAMC,UAE3BD,KAAKE,MAAM,qBACXN,MAAMO,OAAOF,MAAQ,EAAG,EAAGG,wBAAiBC,0BACrC,KAOXV,KAAKE,OAAOD,MAAQA,MAAMU,KAAK,+BAEhBX,KAAM,mBAAaS,oCAAmBC,0BAGlDV,yBA4BeY,uBAEf,CACHC,SA5BkBA,QA4BQD,eAAeC,QAvBtCA,QAAQC,KAAKC,UACK,YAAjBA,QAAQC,OACSD,QAAQd,MAAMG,MAAK,CAACC,KAAMC,UAEnCD,KAAKE,MAAM,qBACXQ,QAAQd,MAAMO,OAAOF,MAAQ,EAAG,EAAGG,wBAAiBC,0BAC7C,MAMXK,QAAQd,MAAMgB,QAAQR,wBAAiBC,0BAIxCK,YAQPf,KAAMD,cAAca,eAAeZ,OA7BjBa,IAAAA"}