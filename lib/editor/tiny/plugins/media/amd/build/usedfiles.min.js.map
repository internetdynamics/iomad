{"version":3,"file":"usedfiles.min.js","sources":["../src/usedfiles.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Media Manager usedfiles.\r\n *\r\n * @module      tiny_media/usedfiles\r\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport * as Templates from 'core/templates';\r\nimport Config from 'core/config';\r\n\r\nclass UsedFileManager {\r\n    constructor(files, userContext, itemId, elementId) {\r\n        this.files = files;\r\n        this.userContext = userContext;\r\n        this.itemId = itemId;\r\n        this.elementId = elementId;\r\n    }\r\n\r\n    getElementId() {\r\n        return this.elementId;\r\n    }\r\n\r\n    getUsedFiles() {\r\n        const editor = window.parent.tinymce.EditorManager.get(this.getElementId());\r\n        if (!editor) {\r\n            window.console.error(`Editor not found for ${this.getElementId()}`);\r\n            return [];\r\n        }\r\n        const content = editor.getContent();\r\n        const baseUrl = `${Config.wwwroot}/draftfile.php/${this.userContext}/user/draft/${this.itemId}/`;\r\n        const pattern = new RegExp(\"[\\\"']\" + baseUrl.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + \"(?<filename>.+?)[\\\\?\\\"']\", 'gm');\r\n\r\n        const usedFiles = [...content.matchAll(pattern)].map((match) => decodeURIComponent(match.groups.filename));\r\n\r\n        return usedFiles;\r\n    }\r\n\r\n    // Return an array of unused files.\r\n    findUnusedFiles(usedFiles) {\r\n        return Object.entries(this.files)\r\n            .filter(([filename]) => !usedFiles.includes(filename))\r\n            .map(([filename]) => filename);\r\n    }\r\n\r\n    // Return an array of missing files.\r\n    findMissingFiles(usedFiles) {\r\n        return usedFiles.filter((filename) => !this.files.hasOwnProperty(filename));\r\n    }\r\n\r\n    updateFiles() {\r\n        const form = document.querySelector('form');\r\n        const usedFiles = this.getUsedFiles();\r\n        const unusedFiles = this.findUnusedFiles(usedFiles);\r\n        const missingFiles = this.findMissingFiles(usedFiles);\r\n\r\n        form.querySelectorAll('input[type=checkbox][name^=\"deletefile\"]').forEach((checkbox) => {\r\n            if (!unusedFiles.includes(checkbox.dataset.filename)) {\r\n                checkbox.closest('.fitem').remove();\r\n            }\r\n        });\r\n\r\n        form.classList.toggle('has-missing-files', !!missingFiles.length);\r\n        form.classList.toggle('has-unused-files', !!unusedFiles.length);\r\n\r\n        return Templates.renderForPromise('tiny_media/missingfiles', {\r\n            missingFiles,\r\n        }).then(({html, js}) => {\r\n            Templates.replaceNodeContents(form.querySelector('.missing-files'), html, js);\r\n            return;\r\n        });\r\n    }\r\n}\r\n\r\nexport const init = (files, usercontext, itemid, elementid) => {\r\n    const manager = new UsedFileManager(files, usercontext, itemid, elementid);\r\n    manager.updateFiles();\r\n\r\n    return manager;\r\n};\r\n"],"names":["UsedFileManager","constructor","files","userContext","itemId","elementId","getElementId","this","getUsedFiles","editor","window","parent","tinymce","EditorManager","get","console","error","content","getContent","baseUrl","Config","wwwroot","pattern","RegExp","replace","matchAll","map","match","decodeURIComponent","groups","filename","findUnusedFiles","usedFiles","Object","entries","filter","_ref","includes","_ref2","findMissingFiles","hasOwnProperty","updateFiles","form","document","querySelector","unusedFiles","missingFiles","querySelectorAll","forEach","checkbox","dataset","closest","remove","classList","toggle","length","Templates","renderForPromise","then","_ref3","html","js","replaceNodeContents","usercontext","itemid","elementid","manager"],"mappings":";;;;;;;+EA0BMA,gBACFC,YAAYC,MAAOC,YAAaC,OAAQC,gBAC/BH,MAAQA,WACRC,YAAcA,iBACdC,OAASA,YACTC,UAAYA,UAGrBC,sBACWC,KAAKF,UAGhBG,qBACUC,OAASC,OAAOC,OAAOC,QAAQC,cAAcC,IAAIP,KAAKD,oBACvDG,cACDC,OAAOK,QAAQC,qCAA8BT,KAAKD,iBAC3C,SAELW,QAAUR,OAAOS,aACjBC,kBAAaC,gBAAOC,kCAAyBd,KAAKJ,mCAA0BI,KAAKH,YACjFkB,QAAU,IAAIC,OAAO,QAAUJ,QAAQK,QAAQ,wBAAyB,QAAU,2BAA4B,YAElG,IAAIP,QAAQQ,SAASH,UAAUI,KAAKC,OAAUC,mBAAmBD,MAAME,OAAOC,YAMpGC,gBAAgBC,kBACLC,OAAOC,QAAQ3B,KAAKL,OACtBiC,QAAOC,WAAEN,sBAAeE,UAAUK,SAASP,aAC3CJ,KAAIY,YAAER,uBAAcA,YAI7BS,iBAAiBP,kBACNA,UAAUG,QAAQL,WAAcvB,KAAKL,MAAMsC,eAAeV,YAGrEW,oBACUC,KAAOC,SAASC,cAAc,QAC9BZ,UAAYzB,KAAKC,eACjBqC,YAActC,KAAKwB,gBAAgBC,WACnCc,aAAevC,KAAKgC,iBAAiBP,kBAE3CU,KAAKK,iBAAiB,4CAA4CC,SAASC,WAClEJ,YAAYR,SAASY,SAASC,QAAQpB,WACvCmB,SAASE,QAAQ,UAAUC,YAInCV,KAAKW,UAAUC,OAAO,sBAAuBR,aAAaS,QAC1Db,KAAKW,UAAUC,OAAO,qBAAsBT,YAAYU,QAEjDC,UAAUC,iBAAiB,0BAA2B,CACzDX,aAAAA,eACDY,MAAKC,YAACC,KAACA,KAADC,GAAOA,UACZL,UAAUM,oBAAoBpB,KAAKE,cAAc,kBAAmBgB,KAAMC,sBAMlE,CAAC3D,MAAO6D,YAAaC,OAAQC,mBACvCC,QAAU,IAAIlE,gBAAgBE,MAAO6D,YAAaC,OAAQC,kBAChEC,QAAQzB,cAEDyB"}