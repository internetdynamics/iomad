{"version":3,"file":"manager.min.js","sources":["../src/manager.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Media Manager plugin class for Moodle.\r\n *\r\n * @module      tiny_media/manager\r\n * @copyright   2022, Stevani Andolo <stevani@hotmail.com.au>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport Templates from 'core/templates';\r\nimport {get_string as getString} from 'core/str';\r\nimport * as Modal from 'core/modal_factory';\r\nimport * as ModalEvents from 'core/modal_events';\r\nimport {getData} from './options';\r\nimport Config from 'core/config';\r\n\r\nexport const MediaManager = class {\r\n\r\n    editor = null;\r\n    area = null;\r\n\r\n    constructor(editor) {\r\n        this.editor = editor;\r\n        const data = getData(editor);\r\n        this.area = data.params.area;\r\n        this.area.itemid = data.fpoptions.image.itemid;\r\n    }\r\n\r\n    displayDialogue = () => {\r\n        Modal.create({\r\n            type: Modal.types.DEFAULT,\r\n            large: true,\r\n            title: getString('mediamanagerproperties', 'tiny_media'),\r\n            body: Templates.render('tiny_media/mm_iframe', {\r\n                src: this.getIframeURL()\r\n            })\r\n        }).then(modal => {\r\n            modal.getRoot().on(ModalEvents.bodyRendered, () => {\r\n                this.selectFirstElement();\r\n            });\r\n            modal.getRoot().on(ModalEvents.hidden, () => {\r\n                modal.destroy();\r\n            });\r\n            modal.show();\r\n            document.querySelector('.modal-lg').style.cssText = `max-width: 850px`;\r\n            return modal;\r\n        }).catch();\r\n    };\r\n\r\n    // It will select the first element in the file manager.\r\n    selectFirstElement = () => {\r\n        const iframe = document.getElementById('mm-iframe');\r\n        iframe.addEventListener('load', function() {\r\n            let intervalId = setInterval(function() {\r\n                const iDocument = iframe.contentWindow.document;\r\n                if (iDocument.querySelector('.filemanager')) {\r\n                    const firstFocusableElement = iDocument.querySelector('.fp-navbar a:not([disabled])');\r\n                    if (firstFocusableElement) {\r\n                        firstFocusableElement.focus();\r\n                    }\r\n                    clearInterval(intervalId);\r\n                }\r\n            }, 200);\r\n        });\r\n    };\r\n\r\n    getIframeURL = () => {\r\n        const url = new URL(`${Config.wwwroot}/lib/editor/tiny/plugins/media/manage.php`);\r\n        url.searchParams.append('elementid', this.editor.getElement().id);\r\n        for (const key in this.area) {\r\n            url.searchParams.append(key, this.area[key]);\r\n        }\r\n        return url.toString();\r\n    };\r\n};\r\n"],"names":["constructor","editor","Modal","create","type","types","DEFAULT","large","title","body","Templates","render","src","this","getIframeURL","then","modal","getRoot","on","ModalEvents","bodyRendered","selectFirstElement","hidden","destroy","show","document","querySelector","style","cssText","catch","iframe","getElementById","addEventListener","intervalId","setInterval","iDocument","contentWindow","firstFocusableElement","focus","clearInterval","url","URL","Config","wwwroot","searchParams","append","getElement","id","key","area","toString","data","params","itemid","fpoptions","image"],"mappings":"kpDA8B4B,MAKxBA,YAAYC,sCAHH,kCACF,8CASW,KACdC,MAAMC,OAAO,CACTC,KAAMF,MAAMG,MAAMC,QAClBC,OAAO,EACPC,OAAO,mBAAU,yBAA0B,cAC3CC,KAAMC,mBAAUC,OAAO,uBAAwB,CAC3CC,IAAKC,KAAKC,mBAEfC,MAAKC,QACJA,MAAMC,UAAUC,GAAGC,YAAYC,cAAc,UACpCC,wBAETL,MAAMC,UAAUC,GAAGC,YAAYG,QAAQ,KACnCN,MAAMO,aAEVP,MAAMQ,OACNC,SAASC,cAAc,aAAaC,MAAMC,2BACnCZ,SACRa,sDAIc,WACXC,OAASL,SAASM,eAAe,aACvCD,OAAOE,iBAAiB,QAAQ,eACxBC,WAAaC,aAAY,iBACnBC,UAAYL,OAAOM,cAAcX,YACnCU,UAAUT,cAAc,gBAAiB,OACnCW,sBAAwBF,UAAUT,cAAc,gCAClDW,uBACAA,sBAAsBC,QAE1BC,cAAcN,eAEnB,gDAII,WACLO,IAAM,IAAIC,cAAOC,gBAAOC,sDAC9BH,IAAII,aAAaC,OAAO,YAAahC,KAAKZ,OAAO6C,aAAaC,QACzD,MAAMC,OAAOnC,KAAKoC,KACnBT,IAAII,aAAaC,OAAOG,IAAKnC,KAAKoC,KAAKD,aAEpCR,IAAIU,mBAlDNjD,OAASA,aACRkD,MAAO,oBAAQlD,aAChBgD,KAAOE,KAAKC,OAAOH,UACnBA,KAAKI,OAASF,KAAKG,UAAUC,MAAMF"}