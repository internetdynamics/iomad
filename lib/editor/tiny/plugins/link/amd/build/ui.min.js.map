{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Tiny Link UI.\r\n *\r\n * @module      tiny_link/ui\r\n * @copyright   2023 Huong Nguyen <huongnv13@gmail.com>\r\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nimport ModalFactory from 'core/modal_factory';\r\nimport ModalEvents from 'core/modal_events';\r\nimport {displayFilepicker} from 'editor_tiny/utils';\r\nimport LinkModal from 'tiny_link/modal';\r\nimport {getPermissions} from \"tiny_link/options\";\r\nimport {setLink, getCurrentLinkData, unSetLink} from \"tiny_link/link\";\r\nimport Selectors from 'tiny_link/selectors';\r\n\r\n/**\r\n * Handle action.\r\n *\r\n * @param {TinyMCE} editor\r\n * @param {boolean} unlink\r\n */\r\nexport const handleAction = (editor, unlink = false) => {\r\n    if (!unlink) {\r\n        displayDialogue(editor);\r\n    } else {\r\n        unSetLink(editor);\r\n    }\r\n};\r\n\r\n/**\r\n * Display the link dialogue.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {Promise<void>}\r\n */\r\nconst displayDialogue = async(editor) => {\r\n    const modalPromises = await ModalFactory.create({\r\n        type: LinkModal.TYPE,\r\n        templateContext: getTemplateContext(editor),\r\n        large: false,\r\n    });\r\n\r\n    modalPromises.show();\r\n    const $root = await modalPromises.getRoot();\r\n    const root = $root[0];\r\n    const currentForm = root.querySelector('form');\r\n\r\n    $root.on(ModalEvents.hidden, () => {\r\n        modalPromises.destroy();\r\n    });\r\n\r\n    root.addEventListener('click', (e) => {\r\n        const submitAction = e.target.closest(Selectors.actions.submit);\r\n        const linkBrowserAction = e.target.closest(Selectors.actions.linkBrowser);\r\n        if (submitAction) {\r\n            e.preventDefault();\r\n            setLink(currentForm, editor);\r\n            modalPromises.destroy();\r\n        }\r\n        if (linkBrowserAction) {\r\n            e.preventDefault();\r\n            displayFilepicker(editor, 'link').then((params) => {\r\n                filePickerCallback(params, currentForm, editor);\r\n                return modalPromises.destroy();\r\n            }).catch();\r\n        }\r\n    });\r\n\r\n    const linkTitle = root.querySelector(Selectors.elements.urlText);\r\n    const linkUrl = root.querySelector(Selectors.elements.urlEntry);\r\n    linkTitle.addEventListener('change', () => {\r\n        if (linkTitle.value.length > 0) {\r\n            linkTitle.dataset.useLinkAsText = 'false';\r\n        } else {\r\n            linkTitle.dataset.useLinkAsText = 'true';\r\n            linkTitle.value = linkUrl.value;\r\n        }\r\n    });\r\n\r\n    linkUrl.addEventListener('keyup', () => {\r\n        updateTextToDisplay(currentForm);\r\n    });\r\n};\r\n\r\n/**\r\n * Get template context.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {Object}\r\n */\r\nconst getTemplateContext = (editor) => {\r\n    const data = getCurrentLinkData(editor);\r\n\r\n    return Object.assign({}, {\r\n        elementid: editor.id,\r\n        showfilepicker: getPermissions(editor).filepicker,\r\n        isupdating: Object.keys(data).length > 0,\r\n    }, data);\r\n};\r\n\r\n/**\r\n * Update the dialogue after a link was selected in the File Picker.\r\n *\r\n * @param {Object} params\r\n * @param {Element} currentForm\r\n * @param {TinyMCE} editor\r\n */\r\nconst filePickerCallback = (params, currentForm, editor) => {\r\n    if (params.url) {\r\n        const inputUrl = currentForm.querySelector(Selectors.elements.urlEntry);\r\n        inputUrl.value = params.url;\r\n        setLink(currentForm, editor);\r\n    }\r\n};\r\n\r\n/**\r\n * Update the text to display if the user does not provide the custom text.\r\n *\r\n * @param {Element} currentForm\r\n */\r\nconst updateTextToDisplay = (currentForm) => {\r\n    const urlEntry = currentForm.querySelector(Selectors.elements.urlEntry);\r\n    const urlText = currentForm.querySelector(Selectors.elements.urlText);\r\n    if (urlText.dataset.useLinkAsText === 'true') {\r\n        urlText.value = urlEntry.value;\r\n    }\r\n};\r\n"],"names":["editor","unlink","displayDialogue","async","modalPromises","ModalFactory","create","type","LinkModal","TYPE","templateContext","getTemplateContext","large","show","$root","getRoot","root","currentForm","querySelector","on","ModalEvents","hidden","destroy","addEventListener","e","submitAction","target","closest","Selectors","actions","submit","linkBrowserAction","linkBrowser","preventDefault","then","params","filePickerCallback","catch","linkTitle","elements","urlText","linkUrl","urlEntry","value","length","dataset","useLinkAsText","updateTextToDisplay","data","Object","assign","elementid","id","showfilepicker","filepicker","isupdating","keys","url"],"mappings":";;;;;;;8SAqC4B,SAACA,YAAQC,+DAC5BA,2BAGSD,QAFVE,gBAAgBF,eAYlBE,gBAAkBC,MAAAA,eACdC,oBAAsBC,uBAAaC,OAAO,CAC5CC,KAAMC,eAAUC,KAChBC,gBAAiBC,mBAAmBX,QACpCY,OAAO,IAGXR,cAAcS,aACRC,YAAcV,cAAcW,UAC5BC,KAAOF,MAAM,GACbG,YAAcD,KAAKE,cAAc,QAEvCJ,MAAMK,GAAGC,sBAAYC,QAAQ,KACzBjB,cAAckB,aAGlBN,KAAKO,iBAAiB,SAAUC,UACtBC,aAAeD,EAAEE,OAAOC,QAAQC,mBAAUC,QAAQC,QAClDC,kBAAoBP,EAAEE,OAAOC,QAAQC,mBAAUC,QAAQG,aACzDP,eACAD,EAAES,mCACMhB,YAAajB,QACrBI,cAAckB,WAEdS,oBACAP,EAAES,8CACgBjC,OAAQ,QAAQkC,MAAMC,SACpCC,mBAAmBD,OAAQlB,YAAajB,QACjCI,cAAckB,aACtBe,kBAILC,UAAYtB,KAAKE,cAAcU,mBAAUW,SAASC,SAClDC,QAAUzB,KAAKE,cAAcU,mBAAUW,SAASG,UACtDJ,UAAUf,iBAAiB,UAAU,KAC7Be,UAAUK,MAAMC,OAAS,EACzBN,UAAUO,QAAQC,cAAgB,SAElCR,UAAUO,QAAQC,cAAgB,OAClCR,UAAUK,MAAQF,QAAQE,UAIlCF,QAAQlB,iBAAiB,SAAS,KAC9BwB,oBAAoB9B,iBAUtBN,mBAAsBX,eAClBgD,MAAO,4BAAmBhD,eAEzBiD,OAAOC,OAAO,GAAI,CACrBC,UAAWnD,OAAOoD,GAClBC,gBAAgB,2BAAerD,QAAQsD,WACvCC,WAAYN,OAAOO,KAAKR,MAAMJ,OAAS,GACxCI,OAUDZ,mBAAqB,CAACD,OAAQlB,YAAajB,aACzCmC,OAAOsB,IAAK,CACKxC,YAAYC,cAAcU,mBAAUW,SAASG,UACrDC,MAAQR,OAAOsB,sBAChBxC,YAAajB,UASvB+C,oBAAuB9B,oBACnByB,SAAWzB,YAAYC,cAAcU,mBAAUW,SAASG,UACxDF,QAAUvB,YAAYC,cAAcU,mBAAUW,SAASC,SACvB,SAAlCA,QAAQK,QAAQC,gBAChBN,QAAQG,MAAQD,SAASC"}