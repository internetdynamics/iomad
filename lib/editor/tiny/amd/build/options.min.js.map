{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Option helper for TinyMCE Editor Manager.\r\n *\r\n * @module editor_tiny/options\r\n * @copyright  2022 Andrew Lyons <andrew@nicols.co.uk>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\nconst optionContextId = 'moodle:contextid';\r\nconst optionDraftItemId = 'moodle:draftitemid';\r\nconst filePickers = 'moodle:filepickers';\r\nconst optionsMoodleLang = 'moodle:language';\r\nconst currentLanguage = 'moodle:currentLanguage';\r\nconst optionPlaceholderSelectors = 'moodle:placeholderSelectors';\r\nconst nestedMenu = 'moodle:nestedmenu';\r\n\r\nexport const register = (editor, options) => {\r\n    const registerOption = editor.options.register;\r\n    const setOption = editor.options.set;\r\n\r\n    registerOption(optionContextId, {\r\n        processor: 'number',\r\n        \"default\": 0,\r\n    });\r\n    setOption(optionContextId, options.context);\r\n\r\n    registerOption(filePickers, {\r\n        processor: 'object',\r\n        \"default\": {},\r\n    });\r\n    setOption(filePickers, options.filepicker);\r\n\r\n    registerOption(optionDraftItemId, {\r\n        processor: 'number',\r\n        \"default\": 0,\r\n    });\r\n    setOption(optionDraftItemId, options.draftitemid);\r\n\r\n    registerOption(currentLanguage, {\r\n        processor: 'string',\r\n        \"default\": 'en',\r\n    });\r\n    setOption(currentLanguage, options.currentLanguage);\r\n\r\n    // This is primarily used by the media plugin, but it may be re-used elsewhere so is included here as it is large.\r\n    registerOption(optionsMoodleLang, {\r\n        processor: 'object',\r\n        \"default\": {},\r\n    });\r\n    setOption(optionsMoodleLang, options.language);\r\n\r\n    registerOption(optionPlaceholderSelectors, {\r\n        processor: 'array',\r\n        \"default\": [],\r\n    });\r\n    setOption(optionPlaceholderSelectors, options.placeholderSelectors);\r\n\r\n    registerOption(nestedMenu, {\r\n        processor: 'boolean',\r\n        \"default\": false,\r\n    });\r\n    setOption(nestedMenu, options.nestedmenu);\r\n};\r\n\r\nexport const getContextId = (editor) => editor.options.get(optionContextId);\r\nexport const getDraftItemId = (editor) => editor.options.get(optionDraftItemId);\r\nexport const getFilepickers = (editor) => editor.options.get(filePickers);\r\nexport const getFilePicker = (editor, type) => getFilepickers(editor)[type];\r\nexport const getMoodleLang = (editor) => editor.options.get(optionsMoodleLang);\r\nexport const getCurrentLanguage = (editor) => editor.options.get(currentLanguage);\r\nexport const getNestedMenu = (editor) => editor.options.get(nestedMenu);\r\n\r\n/**\r\n * Get a set of namespaced options for all defined plugins.\r\n *\r\n * @param {object} options\r\n * @returns {object}\r\n */\r\nexport const getInitialPluginConfiguration = (options) => {\r\n    const config = {};\r\n\r\n    Object.entries(options.plugins).forEach(([pluginName, pluginConfig]) => {\r\n        const values = Object.entries(pluginConfig.config ?? {});\r\n        values.forEach(([optionName, value]) => {\r\n            config[getPluginOptionName(pluginName, optionName)] = value;\r\n        });\r\n    });\r\n\r\n    return config;\r\n};\r\n\r\n/**\r\n * Get the namespaced option name for a plugin.\r\n *\r\n * @param {string} pluginName\r\n * @param {string} optionName\r\n * @returns {string}\r\n */\r\nexport const getPluginOptionName = (pluginName, optionName) => `${pluginName}:${optionName}`;\r\n\r\n/**\r\n * Get the placeholder selectors.\r\n *\r\n * @param {TinyMCE} editor\r\n * @returns {array}\r\n */\r\nexport const getPlaceholderSelectors = (editor) => editor.options.get(optionPlaceholderSelectors);\r\n\r\n/**\r\n * Register placeholder selectos.\r\n *\r\n * @param {TinyMCE} editor\r\n * @param {array} selectors\r\n */\r\nexport const registerPlaceholderSelectors = (editor, selectors) => {\r\n    if (selectors.length) {\r\n        let existingData = getPlaceholderSelectors(editor);\r\n        existingData = existingData.concat(selectors);\r\n        editor.options.set(optionPlaceholderSelectors, existingData);\r\n    }\r\n};\r\n"],"names":["editor","options","registerOption","register","setOption","set","processor","context","filepicker","draftitemid","currentLanguage","language","placeholderSelectors","nestedmenu","get","getFilepickers","type","config","Object","entries","plugins","forEach","_ref","pluginName","pluginConfig","_ref2","optionName","value","getPluginOptionName","getPlaceholderSelectors","selectors","length","existingData","concat"],"mappings":"kdA+BwB,CAACA,OAAQC,iBACvBC,eAAiBF,OAAOC,QAAQE,SAChCC,UAAYJ,OAAOC,QAAQI,IAEjCH,eAZoB,mBAYY,CAC5BI,UAAW,iBACA,IAEfF,UAhBoB,mBAgBOH,QAAQM,SAEnCL,eAhBgB,qBAgBY,CACxBI,UAAW,iBACA,KAEfF,UApBgB,qBAoBOH,QAAQO,YAE/BN,eAvBsB,qBAuBY,CAC9BI,UAAW,iBACA,IAEfF,UA3BsB,qBA2BOH,QAAQQ,aAErCP,eA1BoB,yBA0BY,CAC5BI,UAAW,iBACA,OAEfF,UA9BoB,yBA8BOH,QAAQS,iBAGnCR,eAlCsB,kBAkCY,CAC9BI,UAAW,iBACA,KAEfF,UAtCsB,kBAsCOH,QAAQU,UAErCT,eAtC+B,8BAsCY,CACvCI,UAAW,gBACA,KAEfF,UA1C+B,8BA0COH,QAAQW,sBAE9CV,eA3Ce,oBA2CY,CACvBI,UAAW,mBACA,IAEfF,UA/Ce,oBA+COH,QAAQY,mCAGLb,QAAWA,OAAOC,QAAQa,IAxD/B,4CAyDOd,QAAWA,OAAOC,QAAQa,IAxD/B,4BAyDbC,eAAkBf,QAAWA,OAAOC,QAAQa,IAxDrC,oFAyDS,CAACd,OAAQgB,OAASD,eAAef,QAAQgB,6BACxChB,QAAWA,OAAOC,QAAQa,IAzD9B,+CA0DSd,QAAWA,OAAOC,QAAQa,IAzDrC,iDA0DMd,QAAWA,OAAOC,QAAQa,IAxDrC,4DAgE2Bb,gBACpCgB,OAAS,UAEfC,OAAOC,QAAQlB,QAAQmB,SAASC,SAAQC,oCAAEC,WAAYC,mBACnCN,OAAOC,qCAAQK,aAAaP,4DAAU,IAC9CI,SAAQI,YAAEC,WAAYC,aACzBV,OAAOW,oBAAoBL,WAAYG,aAAeC,YAIvDV,cAUEW,oBAAsB,CAACL,WAAYG,uBAAkBH,uBAAcG,mEAQnEG,wBAA2B7B,QAAWA,OAAOC,QAAQa,IA7F/B,8HAqGS,CAACd,OAAQ8B,gBAC7CA,UAAUC,OAAQ,KACdC,aAAeH,wBAAwB7B,QAC3CgC,aAAeA,aAAaC,OAAOH,WACnC9B,OAAOC,QAAQI,IAzGY,8BAyGoB2B"}