{"version":3,"file":"events.min.js","sources":["../src/events.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/ //\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Javascript events for the `editor_atto` plugin.\r\n *\r\n * @module     editor_atto/events\r\n * @copyright  2021 Jun Pataleta <jun@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      3.10.5\r\n */\r\n\r\nimport {dispatchEvent} from 'core/event_dispatcher';\r\n\r\n/**\r\n * Events for the `editor_atto` plugin.\r\n *\r\n * @constant\r\n * @property {String} attoButtonHighlightToggled See {@link event:attoButtonHighlightToggled}\r\n */\r\nexport const eventTypes = {\r\n    /**\r\n     * An event triggered when a toolbar button's highlight gets toggled.\r\n     *\r\n     * @event attoButtonHighlightToggled\r\n     * @type {CustomEvent}\r\n     * @property {HTMLElement} target The button which had its highlight toggled.\r\n     * @property {object} detail\r\n     * @property {String} detail.buttonName The name of the Atto button that has had its highlight toggled.\r\n     * @property {Boolean} detail.highlight True when the button was highlighted. False, otherwise.\r\n     */\r\n    attoButtonHighlightToggled: 'editor_atto/attoButtonHighlightToggled',\r\n};\r\n\r\n/**\r\n * Trigger an event to indicate that a button's highlight was toggled.\r\n *\r\n * @method  notifyButtonHighlightToggled\r\n * @returns {CustomEvent}\r\n * @fires   attoButtonHighlightToggled\r\n * @param {HTMLElement} attoButton The button object.\r\n * @param {String} buttonName The button name.\r\n * @param {Boolean} highlight True when the button was highlighted. False, otherwise.\r\n */\r\nexport const notifyButtonHighlightToggled = (attoButton, buttonName, highlight) => {\r\n    return dispatchEvent(\r\n        eventTypes.attoButtonHighlightToggled,\r\n        {\r\n            buttonName,\r\n            highlight,\r\n        },\r\n        attoButton\r\n    );\r\n};\r\n"],"names":["eventTypes","attoButtonHighlightToggled","attoButton","buttonName","highlight"],"mappings":";;;;;;;;;MA+BaA,WAAa,CAWtBC,2BAA4B,+GAaY,CAACC,WAAYC,WAAYC,aAC1D,mCACHJ,WAAWC,2BACX,CACIE,WAAAA,WACAC,UAAAA,WAEJF"}