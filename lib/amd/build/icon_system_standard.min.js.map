{"version":3,"file":"icon_system_standard.min.js","sources":["../src/icon_system_standard.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Competency rule points module.\r\n *\r\n * @module core/icon_system_standard\r\n * @copyright  2017 Damyon Wiese\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['core/icon_system', 'core/url', 'core/mustache'],\r\n        function(IconSystem, CoreUrl, Mustache) {\r\n\r\n    /**\r\n     * IconSystemStandard\r\n     *\r\n     * @class core/icon_system_standard\r\n     */\r\n    var IconSystemStandard = function() {\r\n        IconSystem.apply(this, arguments);\r\n    };\r\n    IconSystemStandard.prototype = Object.create(IconSystem.prototype);\r\n\r\n    /**\r\n     * Render an icon.\r\n     *\r\n     * @method renderIcon\r\n     * @param {String} key\r\n     * @param {String} component\r\n     * @param {String} title\r\n     * @param {String} template\r\n     * @return {String}\r\n     */\r\n    IconSystemStandard.prototype.renderIcon = function(key, component, title, template) {\r\n        var url = CoreUrl.imageUrl(key, component);\r\n\r\n        var templatecontext = {\r\n            attributes: [\r\n                {name: 'src', value: url},\r\n                {name: 'alt', value: title},\r\n                {name: 'title', value: title}\r\n            ]\r\n        };\r\n        if (typeof title === \"undefined\" || title == \"\") {\r\n            templatecontext.attributes.push({name: 'aria-hidden', value: 'true'});\r\n        }\r\n\r\n        var result = Mustache.render(template, templatecontext);\r\n        return result.trim();\r\n    };\r\n\r\n    /**\r\n     * Get the name of the template to pre-cache for this icon system.\r\n     *\r\n     * @return {String}\r\n     * @method getTemplateName\r\n     */\r\n    IconSystemStandard.prototype.getTemplateName = function() {\r\n        return 'core/pix_icon';\r\n    };\r\n\r\n    return IconSystemStandard;\r\n});\r\n"],"names":["define","IconSystem","CoreUrl","Mustache","IconSystemStandard","apply","this","arguments","prototype","Object","create","renderIcon","key","component","title","template","templatecontext","attributes","name","value","imageUrl","push","render","trim","getTemplateName"],"mappings":";;;;;;;AAuBAA,mCAAO,CAAC,mBAAoB,WAAY,kBAChC,SAASC,WAAYC,QAASC,cAO9BC,mBAAqB,WACrBH,WAAWI,MAAMC,KAAMC,mBAE3BH,mBAAmBI,UAAYC,OAAOC,OAAOT,WAAWO,YAY3BG,WAAa,SAASC,IAAKC,UAAWC,MAAOC,cAGlEC,gBAAkB,CAClBC,WAAY,CACR,CAACC,KAAM,MAAOC,MAJZjB,QAAQkB,SAASR,IAAKC,YAKxB,CAACK,KAAM,MAAOC,MAAOL,OACrB,CAACI,KAAM,QAASC,MAAOL,qBAGV,IAAVA,OAAkC,IAATA,OAChCE,gBAAgBC,WAAWI,KAAK,CAACH,KAAM,cAAeC,MAAO,SAGpDhB,SAASmB,OAAOP,SAAUC,iBACzBO,QASlBnB,mBAAmBI,UAAUgB,gBAAkB,iBACpC,iBAGJpB"}