{"version":3,"file":"icon_system.min.js","sources":["../src/icon_system.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Icon System base module.\r\n *\r\n * @module core/icon_system\r\n * @copyright  2017 Damyon Wiese\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\n\r\ndefine(['jquery'], function($) {\r\n\r\n    /**\r\n     * Icon System abstract class.\r\n     *\r\n     * Any icon system needs to define a module extending this one and return this module name from the php icon_system class.\r\n     *\r\n     * @class core/icon_system\r\n     */\r\n    var IconSystem = function() {\r\n    };\r\n\r\n    /**\r\n     * Initialise the icon system.\r\n     *\r\n     * @return {Promise}\r\n     * @method init\r\n     */\r\n    IconSystem.prototype.init = function() {\r\n        return $.when(this);\r\n    };\r\n\r\n    /**\r\n     * Render an icon.\r\n     *\r\n     * The key, component and title come from either the pix mustache helper tag, or the call to templates.renderIcon.\r\n     * The template is the pre-loaded template string matching the template from getTemplateName() in this class.\r\n     * This function must return a string (not a promise) because it is used during the internal rendering of the mustache\r\n     * template (which is unfortunately synchronous). To render the mustache template in this function call\r\n     * core/mustache.render() directly and do not use any partials, blocks or helper functions in the template.\r\n     *\r\n     * @param {String} key\r\n     * @param {String} component\r\n     * @param {String} title\r\n     * @param {String} template\r\n     * @return {String}\r\n     * @method renderIcon\r\n     */\r\n    IconSystem.prototype.renderIcon = function(key, component, title, template) { // eslint-disable-line no-unused-vars\r\n        throw new Error('Abstract function not implemented.');\r\n    };\r\n\r\n    /**\r\n     * getTemplateName\r\n     *\r\n     * @return {String}\r\n     * @method getTemplateName\r\n     */\r\n    IconSystem.prototype.getTemplateName = function() {\r\n        throw new Error('Abstract function not implemented.');\r\n    };\r\n\r\n    return /** @alias module:core/icon_system */ IconSystem;\r\n});\r\n"],"names":["define","$","IconSystem","prototype","init","when","this","renderIcon","key","component","title","template","Error","getTemplateName"],"mappings":";;;;;;;AAuBAA,0BAAO,CAAC,WAAW,SAASC,OASpBC,WAAa,oBASjBA,WAAWC,UAAUC,KAAO,kBACjBH,EAAEI,KAAKC,OAmBlBJ,WAAWC,UAAUI,WAAa,SAASC,IAAKC,UAAWC,MAAOC,gBACxD,IAAIC,MAAM,uCASpBV,WAAWC,UAAUU,gBAAkB,iBAC7B,IAAID,MAAM,uCAGyBV"}