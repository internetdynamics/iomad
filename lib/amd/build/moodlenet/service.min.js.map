{"version":3,"file":"service.min.js","sources":["../../src/moodlenet/service.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * A javascript module to handle MoodleNet ajax actions.\r\n *\r\n * @module     core/moodlenet/service\r\n * @copyright  2023 Huong Nguyen <huongnv13@gmail.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n * @since      4.2\r\n */\r\n\r\nimport Ajax from 'core/ajax';\r\n\r\n/**\r\n * Get the activity information by course module id.\r\n *\r\n * @param {Integer} cmId The course module id.\r\n * @return {promise}\r\n */\r\nexport const getActivityInformation = (cmId) => {\r\n    const request = {\r\n        methodname: 'core_moodlenet_get_share_info_activity',\r\n        args: {\r\n            cmid: cmId\r\n        }\r\n    };\r\n\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Send the activity to Moodlenet.\r\n *\r\n * @param {Integer} issuerId The OAuth 2 issuer ID.\r\n * @param {Integer} cmId The course module ID.\r\n * @param {Integer} shareFormat The share format.\r\n * @return {promise}\r\n */\r\nexport const sendActivity = (issuerId, cmId, shareFormat) => {\r\n    const request = {\r\n        methodname: 'core_moodlenet_send_activity',\r\n        args: {\r\n            issuerid: issuerId,\r\n            cmid: cmId,\r\n            shareformat: shareFormat,\r\n        }\r\n    };\r\n\r\n    return Ajax.call([request])[0];\r\n};\r\n\r\n/**\r\n * Check if the user is already authorized with MoodleNet.\r\n *\r\n * @param {Integer} issuerId The OAuth 2 issuer ID.\r\n * @param {Integer} courseId The course ID.\r\n * @return {promise}\r\n */\r\nexport const authorizationCheck = (issuerId, courseId) => {\r\n    const request = {\r\n        methodname: 'core_moodlenet_auth_check',\r\n        args: {\r\n            issuerid: issuerId,\r\n            courseid: courseId,\r\n        }\r\n    };\r\n\r\n    return Ajax.call([request])[0];\r\n};\r\n"],"names":["cmId","request","methodname","args","cmid","Ajax","call","issuerId","shareFormat","issuerid","shareformat","courseId","courseid"],"mappings":";;;;;;;;0OAgCuCA,aAC7BC,QAAU,CACZC,WAAY,yCACZC,KAAM,CACFC,KAAMJ,cAIPK,cAAKC,KAAK,CAACL,UAAU,0BAWJ,CAACM,SAAUP,KAAMQ,qBACnCP,QAAU,CACZC,WAAY,+BACZC,KAAM,CACFM,SAAUF,SACVH,KAAMJ,KACNU,YAAaF,qBAIdH,cAAKC,KAAK,CAACL,UAAU,gCAUE,CAACM,SAAUI,kBACnCV,QAAU,CACZC,WAAY,4BACZC,KAAM,CACFM,SAAUF,SACVK,SAAUD,kBAIXN,cAAKC,KAAK,CAACL,UAAU"}