{"version":3,"file":"modal.min.js","sources":["../src/modal.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\r\n//\r\n// Moodle is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// Moodle is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\n/**\r\n * Contain the logic for modals.\r\n *\r\n * @module core/modal\r\n * @class core/modal\r\n * @copyright  2016 Ryan Wyllie <ryan@moodle.com>\r\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\r\n */\r\ndefine([\r\n    'jquery',\r\n    'core/templates',\r\n    'core/notification',\r\n    'core/key_codes',\r\n    'core/custom_interaction_events',\r\n    'core/modal_backdrop',\r\n    'core_filters/events',\r\n    'core/modal_events',\r\n    'core/local/aria/focuslock',\r\n    'core/pending',\r\n    'core/aria',\r\n    'core/fullscreen'\r\n], function(\r\n    $,\r\n    Templates,\r\n    Notification,\r\n    KeyCodes,\r\n    CustomEvents,\r\n    ModalBackdrop,\r\n    FilterEvents,\r\n    ModalEvents,\r\n    FocusLock,\r\n    Pending,\r\n    Aria,\r\n    Fullscreen\r\n) {\r\n\r\n    var SELECTORS = {\r\n        CONTAINER: '[data-region=\"modal-container\"]',\r\n        MODAL: '[data-region=\"modal\"]',\r\n        HEADER: '[data-region=\"header\"]',\r\n        TITLE: '[data-region=\"title\"]',\r\n        BODY: '[data-region=\"body\"]',\r\n        FOOTER: '[data-region=\"footer\"]',\r\n        HIDE: '[data-action=\"hide\"]',\r\n        DIALOG: '[role=dialog]',\r\n        FORM: 'form',\r\n        MENU_BAR: '[role=menubar]',\r\n        HAS_Z_INDEX: '.moodle-has-zindex',\r\n        CAN_RECEIVE_FOCUS: 'input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]',\r\n    };\r\n\r\n    var TEMPLATES = {\r\n        LOADING: 'core/loading',\r\n        BACKDROP: 'core/modal_backdrop',\r\n    };\r\n\r\n    /**\r\n     * Module singleton for the backdrop to be reused by all Modal instances.\r\n     */\r\n    var backdropPromise;\r\n\r\n    /**\r\n     * A counter that gets incremented for each modal created. This can be\r\n     * used to generate unique values for the modals.\r\n     */\r\n    var modalCounter = 0;\r\n\r\n    /**\r\n     * Constructor for the Modal.\r\n     *\r\n     * @param {object} root The root jQuery element for the modal\r\n     */\r\n    var Modal = function(root) {\r\n        this.root = $(root);\r\n        this.modal = this.root.find(SELECTORS.MODAL);\r\n        this.header = this.modal.find(SELECTORS.HEADER);\r\n        this.headerPromise = $.Deferred();\r\n        this.title = this.header.find(SELECTORS.TITLE);\r\n        this.titlePromise = $.Deferred();\r\n        this.body = this.modal.find(SELECTORS.BODY);\r\n        this.bodyPromise = $.Deferred();\r\n        this.footer = this.modal.find(SELECTORS.FOOTER);\r\n        this.footerPromise = $.Deferred();\r\n        this.hiddenSiblings = [];\r\n        this.isAttached = false;\r\n        this.bodyJS = null;\r\n        this.footerJS = null;\r\n        this.modalCount = modalCounter++;\r\n        this.attachmentPoint = document.createElement('div');\r\n        document.body.append(this.attachmentPoint);\r\n        this.focusOnClose = null;\r\n\r\n        if (!this.root.is(SELECTORS.CONTAINER)) {\r\n            Notification.exception({message: 'Element is not a modal container'});\r\n        }\r\n\r\n        if (!this.modal.length) {\r\n            Notification.exception({message: 'Container does not contain a modal'});\r\n        }\r\n\r\n        if (!this.header.length) {\r\n            Notification.exception({message: 'Modal is missing a header region'});\r\n        }\r\n\r\n        if (!this.title.length) {\r\n            Notification.exception({message: 'Modal header is missing a title region'});\r\n        }\r\n\r\n        if (!this.body.length) {\r\n            Notification.exception({message: 'Modal is missing a body region'});\r\n        }\r\n\r\n        if (!this.footer.length) {\r\n            Notification.exception({message: 'Modal is missing a footer region'});\r\n        }\r\n\r\n        this.registerEventListeners();\r\n    };\r\n\r\n    /**\r\n     * Attach the modal to the correct part of the page.\r\n     *\r\n     * If it hasn't already been added it runs any\r\n     * javascript that has been cached until now.\r\n     *\r\n     * @method attachToDOM\r\n     */\r\n    Modal.prototype.attachToDOM = function() {\r\n        this.getAttachmentPoint().append(this.root);\r\n\r\n        if (this.isAttached) {\r\n            return;\r\n        }\r\n\r\n        FocusLock.trapFocus(this.root[0]);\r\n\r\n        // If we'd cached any JS then we can run it how that the modal is\r\n        // attached to the DOM.\r\n        if (this.bodyJS) {\r\n            Templates.runTemplateJS(this.bodyJS);\r\n            this.bodyJS = null;\r\n        }\r\n\r\n        if (this.footerJS) {\r\n            Templates.runTemplateJS(this.footerJS);\r\n            this.footerJS = null;\r\n        }\r\n\r\n        this.isAttached = true;\r\n    };\r\n\r\n    /**\r\n     * Count the number of other visible modals (not including this one).\r\n     *\r\n     * @method countOtherVisibleModals\r\n     * @return {int}\r\n     */\r\n    Modal.prototype.countOtherVisibleModals = function() {\r\n        var count = 0;\r\n        $('body').find(SELECTORS.CONTAINER).each(function(index, element) {\r\n            element = $(element);\r\n\r\n            // If we haven't found ourself and the element is visible.\r\n            if (!this.root.is(element) && element.hasClass('show')) {\r\n                count++;\r\n            }\r\n        }.bind(this));\r\n\r\n        return count;\r\n    };\r\n\r\n    /**\r\n     * Get the modal backdrop.\r\n     *\r\n     * @method getBackdrop\r\n     * @return {object} jQuery promise\r\n     */\r\n    Modal.prototype.getBackdrop = function() {\r\n        if (!backdropPromise) {\r\n            backdropPromise = Templates.render(TEMPLATES.BACKDROP, {})\r\n                .then(function(html) {\r\n                    var element = $(html);\r\n\r\n                    return new ModalBackdrop(element);\r\n                })\r\n                .fail(Notification.exception);\r\n        }\r\n\r\n        return backdropPromise;\r\n    };\r\n\r\n    /**\r\n     * Get the root element of this modal.\r\n     *\r\n     * @method getRoot\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getRoot = function() {\r\n        return this.root;\r\n    };\r\n\r\n    /**\r\n     * Get the modal element of this modal.\r\n     *\r\n     * @method getModal\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getModal = function() {\r\n        return this.modal;\r\n    };\r\n\r\n    /**\r\n     * Get the modal title element.\r\n     *\r\n     * @method getTitle\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getTitle = function() {\r\n        return this.title;\r\n    };\r\n\r\n    /**\r\n     * Get the modal body element.\r\n     *\r\n     * @method getBody\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getBody = function() {\r\n        return this.body;\r\n    };\r\n\r\n    /**\r\n     * Get the modal footer element.\r\n     *\r\n     * @method getFooter\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getFooter = function() {\r\n        return this.footer;\r\n    };\r\n\r\n    /**\r\n     * Get a promise resolving to the title region.\r\n     *\r\n     * @method getTitlePromise\r\n     * @return {Promise}\r\n     */\r\n    Modal.prototype.getTitlePromise = function() {\r\n        return this.titlePromise;\r\n    };\r\n\r\n    /**\r\n     * Get a promise resolving to the body region.\r\n     *\r\n     * @method getBodyPromise\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getBodyPromise = function() {\r\n        return this.bodyPromise;\r\n    };\r\n\r\n    /**\r\n     * Get a promise resolving to the footer region.\r\n     *\r\n     * @method getFooterPromise\r\n     * @return {object} jQuery object\r\n     */\r\n    Modal.prototype.getFooterPromise = function() {\r\n        return this.footerPromise;\r\n    };\r\n\r\n    /**\r\n     * Get the unique modal count.\r\n     *\r\n     * @method getModalCount\r\n     * @return {int}\r\n     */\r\n    Modal.prototype.getModalCount = function() {\r\n        return this.modalCount;\r\n    };\r\n\r\n    /**\r\n     * Set the modal title element.\r\n     *\r\n     * This method is overloaded to take either a string value for the title or a jQuery promise that is resolved with\r\n     * HTML most commonly from a Str.get_string call.\r\n     *\r\n     * @method setTitle\r\n     * @param {(string|object)} value The title string or jQuery promise which resolves to the title.\r\n     */\r\n    Modal.prototype.setTitle = function(value) {\r\n        var title = this.getTitle();\r\n        this.titlePromise = $.Deferred();\r\n\r\n        this.asyncSet(value, title.html.bind(title))\r\n        .then(function() {\r\n            this.titlePromise.resolve(title);\r\n        }.bind(this))\r\n        .catch(Notification.exception);\r\n    };\r\n\r\n    /**\r\n     * Set the modal body element.\r\n     *\r\n     * This method is overloaded to take either a string value for the body or a jQuery promise that is resolved with\r\n     * HTML and Javascript most commonly from a Templates.render call.\r\n     *\r\n     * @method setBody\r\n     * @param {(string|object)} value The body string or jQuery promise which resolves to the body.\r\n     * @fires event:filterContentUpdated\r\n     */\r\n    Modal.prototype.setBody = function(value) {\r\n        this.bodyPromise = $.Deferred();\r\n\r\n        var body = this.getBody();\r\n\r\n        if (typeof value === 'string') {\r\n            // Just set the value if it's a string.\r\n            body.html(value);\r\n            FilterEvents.notifyFilterContentUpdated(body);\r\n            this.getRoot().trigger(ModalEvents.bodyRendered, this);\r\n            this.bodyPromise.resolve(body);\r\n        } else {\r\n            var jsPendingId = 'amd-modal-js-pending-id-' + this.getModalCount();\r\n            M.util.js_pending(jsPendingId);\r\n            // Otherwise we assume it's a promise to be resolved with\r\n            // html and javascript.\r\n            var contentPromise = null;\r\n            body.css('overflow', 'hidden');\r\n\r\n            // Ensure that the `value` is a jQuery Promise.\r\n            value = $.when(value);\r\n\r\n            if (value.state() == 'pending') {\r\n                // We're still waiting for the body promise to resolve so\r\n                // let's show a loading icon.\r\n                var height = body.innerHeight();\r\n                if (height < 100) {\r\n                    height = 100;\r\n                }\r\n\r\n                body.animate({height: height + 'px'}, 150);\r\n\r\n                body.html('');\r\n                contentPromise = Templates.render(TEMPLATES.LOADING, {})\r\n                    .then(function(html) {\r\n                        var loadingIcon = $(html).hide();\r\n                        body.html(loadingIcon);\r\n                        loadingIcon.fadeIn(150);\r\n\r\n                        // We only want the loading icon to fade out\r\n                        // when the content for the body has finished\r\n                        // loading.\r\n                        return $.when(loadingIcon.promise(), value);\r\n                    })\r\n                    .then(function(loadingIcon) {\r\n                        // Once the content has finished loading and\r\n                        // the loading icon has been shown then we can\r\n                        // fade the icon away to reveal the content.\r\n                        return loadingIcon.fadeOut(100).promise();\r\n                    })\r\n                    .then(function() {\r\n                        return value;\r\n                    });\r\n            } else {\r\n                // The content is already loaded so let's just display\r\n                // it to the user. No need for a loading icon.\r\n                contentPromise = value;\r\n            }\r\n\r\n            // Now we can actually display the content.\r\n            contentPromise.then(function(html, js) {\r\n                var result = null;\r\n\r\n                if (this.isVisible()) {\r\n                    // If the modal is visible then we should display\r\n                    // the content gracefully for the user.\r\n                    body.css('opacity', 0);\r\n                    var currentHeight = body.innerHeight();\r\n                    body.html(html);\r\n                    // We need to clear any height values we've set here\r\n                    // in order to measure the height of the content being\r\n                    // added. This then allows us to animate the height\r\n                    // transition.\r\n                    body.css('height', '');\r\n                    var newHeight = body.innerHeight();\r\n                    body.css('height', currentHeight + 'px');\r\n                    result = body.animate(\r\n                        {height: newHeight + 'px', opacity: 1},\r\n                        {duration: 150, queue: false}\r\n                    ).promise();\r\n                } else {\r\n                    // Since the modal isn't visible we can just immediately\r\n                    // set the content. No need to animate it.\r\n                    body.html(html);\r\n                }\r\n\r\n                if (js) {\r\n                    if (this.isAttached) {\r\n                        // If we're in the DOM then run the JS immediately.\r\n                        Templates.runTemplateJS(js);\r\n                    } else {\r\n                        // Otherwise cache it to be run when we're attached.\r\n                        this.bodyJS = js;\r\n                    }\r\n                }\r\n\r\n                return result;\r\n            }.bind(this))\r\n            .then(function(result) {\r\n                FilterEvents.notifyFilterContentUpdated(body);\r\n                this.getRoot().trigger(ModalEvents.bodyRendered, this);\r\n                return result;\r\n            }.bind(this))\r\n            .then(function() {\r\n                this.bodyPromise.resolve(body);\r\n                return;\r\n            }.bind(this))\r\n            .fail(Notification.exception)\r\n            .always(function() {\r\n                // When we're done displaying all of the content we need\r\n                // to clear the custom values we've set here.\r\n                body.css('height', '');\r\n                body.css('overflow', '');\r\n                body.css('opacity', '');\r\n                M.util.js_complete(jsPendingId);\r\n\r\n                return;\r\n            })\r\n            .fail(Notification.exception);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Alternative to setBody() that can be used from non-Jquery modules\r\n     *\r\n     * @param {Promise} promise promise that returns {html, js} object\r\n     * @return {Promise}\r\n     */\r\n    Modal.prototype.setBodyContent = function(promise) {\r\n        // Call the leegacy API for now and pass it a jQuery Promise.\r\n        // This is a non-spec feature of jQuery and cannot be produced with spec promises.\r\n        // We can encourage people to migrate to this approach, and in future we can swap\r\n        // it so that setBody() calls setBodyPromise().\r\n        return promise.then(({html, js}) => this.setBody($.when(html, js)))\r\n            .catch(exception => {\r\n                this.hide();\r\n                throw exception;\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Set the modal footer element. The footer element is made visible, if it\r\n     * isn't already.\r\n     *\r\n     * This method is overloaded to take either a string\r\n     * value for the body or a jQuery promise that is resolved with HTML and Javascript\r\n     * most commonly from a Templates.render call.\r\n     *\r\n     * @method setFooter\r\n     * @param {(string|object)} value The footer string or jQuery promise\r\n     */\r\n    Modal.prototype.setFooter = function(value) {\r\n        // Make sure the footer is visible.\r\n        this.showFooter();\r\n        this.footerPromise = $.Deferred();\r\n\r\n        var footer = this.getFooter();\r\n\r\n        if (typeof value === 'string') {\r\n            // Just set the value if it's a string.\r\n            footer.html(value);\r\n            this.footerPromise.resolve(footer);\r\n        } else {\r\n            // Otherwise we assume it's a promise to be resolved with\r\n            // html and javascript.\r\n            Templates.render(TEMPLATES.LOADING, {})\r\n            .then(function(html) {\r\n                footer.html(html);\r\n\r\n                return value;\r\n            })\r\n            .then(function(html, js) {\r\n                footer.html(html);\r\n\r\n                if (js) {\r\n                    if (this.isAttached) {\r\n                        // If we're in the DOM then run the JS immediately.\r\n                        Templates.runTemplateJS(js);\r\n                    } else {\r\n                        // Otherwise cache it to be run when we're attached.\r\n                        this.footerJS = js;\r\n                    }\r\n                }\r\n\r\n                return footer;\r\n            }.bind(this))\r\n            .then(function(footer) {\r\n                this.footerPromise.resolve(footer);\r\n                return;\r\n            }.bind(this))\r\n            .catch(Notification.exception);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Check if the footer has any content in it.\r\n     *\r\n     * @method hasFooterContent\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.hasFooterContent = function() {\r\n        return this.getFooter().children().length ? true : false;\r\n    };\r\n\r\n    /**\r\n     * Hide the footer element.\r\n     *\r\n     * @method hideFooter\r\n     */\r\n    Modal.prototype.hideFooter = function() {\r\n        this.getFooter().addClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Show the footer element.\r\n     *\r\n     * @method showFooter\r\n     */\r\n    Modal.prototype.showFooter = function() {\r\n        this.getFooter().removeClass('hidden');\r\n    };\r\n\r\n    /**\r\n     * Mark the modal as a large modal.\r\n     *\r\n     * @method setLarge\r\n     */\r\n    Modal.prototype.setLarge = function() {\r\n        if (this.isLarge()) {\r\n            return;\r\n        }\r\n\r\n        this.getModal().addClass('modal-lg');\r\n    };\r\n\r\n    /**\r\n     * Check if the modal is a large modal.\r\n     *\r\n     * @method isLarge\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.isLarge = function() {\r\n        return this.getModal().hasClass('modal-lg');\r\n    };\r\n\r\n    /**\r\n     * Mark the modal as a small modal.\r\n     *\r\n     * @method setSmall\r\n     */\r\n    Modal.prototype.setSmall = function() {\r\n        if (this.isSmall()) {\r\n            return;\r\n        }\r\n\r\n        this.getModal().removeClass('modal-lg');\r\n    };\r\n\r\n    /**\r\n     * Check if the modal is a small modal.\r\n     *\r\n     * @method isSmall\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.isSmall = function() {\r\n        return !this.getModal().hasClass('modal-lg');\r\n    };\r\n\r\n    /**\r\n     * Set this modal to be scrollable or not.\r\n     *\r\n     * @method setScrollable\r\n     * @param {bool} value Whether the modal is scrollable or not\r\n     */\r\n    Modal.prototype.setScrollable = function(value) {\r\n        if (!value) {\r\n            this.getModal()[0].classList.remove('modal-dialog-scrollable');\r\n            return;\r\n        }\r\n\r\n        this.getModal()[0].classList.add('modal-dialog-scrollable');\r\n    };\r\n\r\n\r\n    /**\r\n     * Determine the highest z-index value currently on the page.\r\n     *\r\n     * @method calculateZIndex\r\n     * @return {int}\r\n     */\r\n    Modal.prototype.calculateZIndex = function() {\r\n        var items = $(SELECTORS.DIALOG + ', ' + SELECTORS.MENU_BAR + ', ' + SELECTORS.HAS_Z_INDEX);\r\n        var zIndex = parseInt(this.root.css('z-index'));\r\n\r\n        items.each(function(index, item) {\r\n            item = $(item);\r\n            // Note that webkit browsers won't return the z-index value from the CSS stylesheet\r\n            // if the element doesn't have a position specified. Instead it'll return \"auto\".\r\n            var itemZIndex = item.css('z-index') ? parseInt(item.css('z-index')) : 0;\r\n\r\n            if (itemZIndex > zIndex) {\r\n                zIndex = itemZIndex;\r\n            }\r\n        });\r\n\r\n        return zIndex;\r\n    };\r\n\r\n    /**\r\n     * Check if this modal is visible.\r\n     *\r\n     * @method isVisible\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.isVisible = function() {\r\n        return this.root.hasClass('show');\r\n    };\r\n\r\n    /**\r\n     * Check if this modal has focus.\r\n     *\r\n     * @method hasFocus\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.hasFocus = function() {\r\n        var target = $(document.activeElement);\r\n        return this.root.is(target) || this.root.has(target).length;\r\n    };\r\n\r\n    /**\r\n     * Check if this modal has CSS transitions applied.\r\n     *\r\n     * @method hasTransitions\r\n     * @return {bool}\r\n     */\r\n    Modal.prototype.hasTransitions = function() {\r\n        return this.getRoot().hasClass('fade');\r\n    };\r\n\r\n    /**\r\n     * Gets the jQuery wrapped node that the Modal should be attached to.\r\n     *\r\n     * @returns {jQuery}\r\n     */\r\n    Modal.prototype.getAttachmentPoint = function() {\r\n        return $(Fullscreen.getElement() || this.attachmentPoint);\r\n    };\r\n\r\n    /**\r\n     * Display this modal. The modal will be attached to the DOM if it hasn't\r\n     * already been.\r\n     *\r\n     * @method show\r\n     * @returns {Promise}\r\n     */\r\n    Modal.prototype.show = function() {\r\n        if (this.isVisible()) {\r\n            return $.Deferred().resolve();\r\n        }\r\n\r\n        var pendingPromise = new Pending('core/modal:show');\r\n\r\n        if (this.hasFooterContent()) {\r\n            this.showFooter();\r\n        } else {\r\n            this.hideFooter();\r\n        }\r\n\r\n        this.attachToDOM();\r\n\r\n        // If the focusOnClose was not set. Set the focus back to triggered element.\r\n        if (!this.focusOnClose && document.activeElement) {\r\n            this.focusOnClose = document.activeElement;\r\n        }\r\n\r\n        return this.getBackdrop()\r\n        .then(function(backdrop) {\r\n            var currentIndex = this.calculateZIndex();\r\n            var newIndex = currentIndex + 2;\r\n            var newBackdropIndex = newIndex - 1;\r\n            this.root.css('z-index', newIndex);\r\n            backdrop.setZIndex(newBackdropIndex);\r\n            backdrop.show();\r\n\r\n            this.root.removeClass('hide').addClass('show');\r\n            this.accessibilityShow();\r\n            this.getModal().focus();\r\n            $('body').addClass('modal-open');\r\n            this.root.trigger(ModalEvents.shown, this);\r\n\r\n            return;\r\n        }.bind(this))\r\n        .then(pendingPromise.resolve);\r\n    };\r\n\r\n    /**\r\n     * Hide this modal if it does not contain a form.\r\n     *\r\n     * @method hideIfNotForm\r\n     */\r\n    Modal.prototype.hideIfNotForm = function() {\r\n        var formElement = this.modal.find(SELECTORS.FORM);\r\n        if (formElement.length == 0) {\r\n            this.hide();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Hide this modal.\r\n     *\r\n     * @method hide\r\n     */\r\n    Modal.prototype.hide = function() {\r\n        this.getBackdrop().done(function(backdrop) {\r\n            FocusLock.untrapFocus();\r\n\r\n            if (!this.countOtherVisibleModals()) {\r\n                // Hide the backdrop if we're the last open modal.\r\n                backdrop.hide();\r\n                $('body').removeClass('modal-open');\r\n            }\r\n\r\n            var currentIndex = parseInt(this.root.css('z-index'));\r\n            this.root.css('z-index', '');\r\n            backdrop.setZIndex(currentIndex - 3);\r\n\r\n            this.accessibilityHide();\r\n\r\n            if (this.hasTransitions()) {\r\n                // Wait for CSS transitions to complete before hiding the element.\r\n                this.getRoot().one('transitionend webkitTransitionEnd oTransitionEnd', function() {\r\n                    this.getRoot().removeClass('show').addClass('hide');\r\n                }.bind(this));\r\n            } else {\r\n                this.getRoot().removeClass('show').addClass('hide');\r\n            }\r\n\r\n            // Ensure the modal is moved onto the body node if it is still attached to the DOM.\r\n            if ($(document.body).find(this.getRoot()).length) {\r\n                $(document.body).append(this.getRoot());\r\n            }\r\n\r\n            this.root.trigger(ModalEvents.hidden, this);\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Remove this modal from the DOM.\r\n     *\r\n     * @method destroy\r\n     */\r\n    Modal.prototype.destroy = function() {\r\n        this.hide();\r\n        this.root.remove();\r\n        this.root.trigger(ModalEvents.destroyed, this);\r\n        this.attachmentPoint.remove();\r\n    };\r\n\r\n    /**\r\n     * Sets the appropriate aria attributes on this dialogue and the other\r\n     * elements in the DOM to ensure that screen readers are able to navigate\r\n     * the dialogue popup correctly.\r\n     *\r\n     * @method accessibilityShow\r\n     */\r\n    Modal.prototype.accessibilityShow = function() {\r\n        // Make us visible to screen readers.\r\n        Aria.unhide(this.root.get());\r\n\r\n        // Hide siblings.\r\n        Aria.hideSiblings(this.root.get()[0]);\r\n    };\r\n\r\n    /**\r\n     * Restores the aria visibility on the DOM elements changed when displaying\r\n     * the dialogue popup and makes the dialogue aria hidden to allow screen\r\n     * readers to navigate the main page correctly when the dialogue is closed.\r\n     *\r\n     * @method accessibilityHide\r\n     */\r\n    Modal.prototype.accessibilityHide = function() {\r\n        // Unhide siblings.\r\n        Aria.unhideSiblings(this.root.get()[0]);\r\n\r\n        // Hide this modal.\r\n        Aria.hide(this.root.get());\r\n    };\r\n\r\n    /**\r\n     * Set up all of the event handling for the modal.\r\n     *\r\n     * @method registerEventListeners\r\n     */\r\n    Modal.prototype.registerEventListeners = function() {\r\n        this.getRoot().on('keydown', function(e) {\r\n            if (!this.isVisible()) {\r\n                return;\r\n            }\r\n\r\n            if (e.keyCode == KeyCodes.escape) {\r\n                if (this.removeOnClose) {\r\n                    this.destroy();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        // Listen for clicks on the modal container.\r\n        this.getRoot().click(function(e) {\r\n            // If the click wasn't inside the modal element then we should\r\n            // hide the modal.\r\n            if (!$(e.target).closest(SELECTORS.MODAL).length) {\r\n                // The check above fails to detect the click was inside the modal when the DOM tree is already changed.\r\n                // So, we check if we can still find the container element or not. If not, then the DOM tree is changed.\r\n                // It's best not to hide the modal in that case.\r\n                if ($(e.target).closest(SELECTORS.CONTAINER).length) {\r\n                    var outsideClickEvent = $.Event(ModalEvents.outsideClick);\r\n                    this.getRoot().trigger(outsideClickEvent, this);\r\n\r\n                    if (!outsideClickEvent.isDefaultPrevented()) {\r\n                        this.hideIfNotForm();\r\n                    }\r\n                }\r\n            }\r\n        }.bind(this));\r\n\r\n        CustomEvents.define(this.getModal(), [CustomEvents.events.activate]);\r\n        this.getModal().on(CustomEvents.events.activate, SELECTORS.HIDE, function(e, data) {\r\n            if (this.removeOnClose) {\r\n                this.destroy();\r\n            } else {\r\n                this.hide();\r\n            }\r\n            data.originalEvent.preventDefault();\r\n        }.bind(this));\r\n\r\n        this.getRoot().on(ModalEvents.hidden, () => {\r\n            if (this.focusOnClose) {\r\n                // Focus on the element that actually triggers the modal.\r\n                this.focusOnClose.focus();\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Register a listener to close the dialogue when the cancel button is pressed.\r\n     *\r\n     * @method registerCloseOnCancel\r\n     */\r\n    Modal.prototype.registerCloseOnCancel = function() {\r\n        // Handle the clicking of the Cancel button.\r\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('cancel'), function(e, data) {\r\n            var cancelEvent = $.Event(ModalEvents.cancel);\r\n            this.getRoot().trigger(cancelEvent, this);\r\n\r\n            if (!cancelEvent.isDefaultPrevented()) {\r\n                data.originalEvent.preventDefault();\r\n\r\n                if (this.removeOnClose) {\r\n                    this.destroy();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Register a listener to close the dialogue when the save button is pressed.\r\n     *\r\n     * @method registerCloseOnSave\r\n     */\r\n    Modal.prototype.registerCloseOnSave = function() {\r\n        // Handle the clicking of the Cancel button.\r\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('save'), function(e, data) {\r\n            var saveEvent = $.Event(ModalEvents.save);\r\n            this.getRoot().trigger(saveEvent, this);\r\n\r\n            if (!saveEvent.isDefaultPrevented()) {\r\n                data.originalEvent.preventDefault();\r\n\r\n                if (this.removeOnClose) {\r\n                    this.destroy();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n\r\n    /**\r\n     * Register a listener to close the dialogue when the delete button is pressed.\r\n     *\r\n     * @method registerCloseOnDelete\r\n     */\r\n    Modal.prototype.registerCloseOnDelete = function() {\r\n        // Handle the clicking of the Cancel button.\r\n        this.getModal().on(CustomEvents.events.activate, this.getActionSelector('delete'), function(e, data) {\r\n            var deleteEvent = $.Event(ModalEvents.delete);\r\n            this.getRoot().trigger(deleteEvent, this);\r\n\r\n            if (!deleteEvent.isDefaultPrevented()) {\r\n                data.originalEvent.preventDefault();\r\n\r\n                if (this.removeOnClose) {\r\n                    this.destroy();\r\n                } else {\r\n                    this.hide();\r\n                }\r\n            }\r\n        }.bind(this));\r\n    };\r\n\r\n    /**\r\n     * Set or resolve and set the value using the function.\r\n     *\r\n     * @method asyncSet\r\n     * @param {(string|object)} value The string or jQuery promise.\r\n     * @param {function} setFunction The setter\r\n     * @return {Promise}\r\n     */\r\n    Modal.prototype.asyncSet = function(value, setFunction) {\r\n        var p = value;\r\n        if (typeof value !== 'object' || !value.hasOwnProperty('then')) {\r\n            p = $.Deferred();\r\n            p.resolve(value);\r\n        }\r\n\r\n        p.then(function(content) {\r\n            setFunction(content);\r\n\r\n            return;\r\n        })\r\n        .fail(Notification.exception);\r\n\r\n        return p;\r\n    };\r\n\r\n    /**\r\n     * Set the title text of a button.\r\n     *\r\n     * This method is overloaded to take either a string value for the button title or a jQuery promise that is resolved with\r\n     * text most commonly from a Str.get_string call.\r\n     *\r\n     * @param {DOMString} action The action of the button\r\n     * @param {(String|object)} value The button text, or a promise which will resolve to it\r\n     * @returns {Promise}\r\n     */\r\n    Modal.prototype.setButtonText = function(action, value) {\r\n        const button = this.getFooter().find(this.getActionSelector(action));\r\n\r\n        if (!button) {\r\n            throw new Error(\"Unable to find the '\" + action + \"' button\");\r\n        }\r\n\r\n        return this.asyncSet(value, button.text.bind(button));\r\n    };\r\n\r\n    /**\r\n     * Get the Selector for an action.\r\n     *\r\n     * @param {String} action\r\n     * @returns {DOMString}\r\n     */\r\n    Modal.prototype.getActionSelector = function(action) {\r\n        return \"[data-action='\" + action + \"']\";\r\n    };\r\n\r\n    /**\r\n     * Set the flag to remove the modal from the DOM on close.\r\n     *\r\n     * @param {Boolean} remove\r\n     */\r\n    Modal.prototype.setRemoveOnClose = function(remove) {\r\n        this.removeOnClose = remove;\r\n    };\r\n\r\n    /**\r\n     * Set the return element for the modal.\r\n     *\r\n     * @param {Element|jQuery} element Element to focus when the modal is closed\r\n     */\r\n    Modal.prototype.setReturnElement = function(element) {\r\n        this.focusOnClose = element;\r\n    };\r\n\r\n    /**\r\n     * Set the a button enabled or disabled.\r\n     *\r\n     * @param {DOMString} action The action of the button\r\n     * @param {Boolean} disabled the new disabled value\r\n     */\r\n    Modal.prototype.setButtonDisabled = function(action, disabled) {\r\n        const button = this.getFooter().find(this.getActionSelector(action));\r\n\r\n        if (!button) {\r\n            throw new Error(\"Unable to find the '\" + action + \"' button\");\r\n        }\r\n        if (disabled) {\r\n            button.attr('disabled', '');\r\n        } else {\r\n            button.removeAttr('disabled');\r\n        }\r\n    };\r\n\r\n    return Modal;\r\n});\r\n"],"names":["define","$","Templates","Notification","KeyCodes","CustomEvents","ModalBackdrop","FilterEvents","ModalEvents","FocusLock","Pending","Aria","Fullscreen","backdropPromise","SELECTORS","TEMPLATES","modalCounter","Modal","root","modal","this","find","header","headerPromise","Deferred","title","titlePromise","body","bodyPromise","footer","footerPromise","hiddenSiblings","isAttached","bodyJS","footerJS","modalCount","attachmentPoint","document","createElement","append","focusOnClose","is","exception","message","length","registerEventListeners","prototype","attachToDOM","getAttachmentPoint","trapFocus","runTemplateJS","countOtherVisibleModals","count","each","index","element","hasClass","bind","getBackdrop","render","then","html","fail","getRoot","getModal","getTitle","getBody","getFooter","getTitlePromise","getBodyPromise","getFooterPromise","getModalCount","setTitle","value","asyncSet","resolve","catch","setBody","notifyFilterContentUpdated","trigger","bodyRendered","jsPendingId","M","util","js_pending","contentPromise","css","when","state","height","innerHeight","animate","loadingIcon","hide","fadeIn","promise","fadeOut","js","result","isVisible","currentHeight","newHeight","opacity","duration","queue","always","js_complete","setBodyContent","_ref","setFooter","showFooter","hasFooterContent","children","hideFooter","addClass","removeClass","setLarge","isLarge","setSmall","isSmall","setScrollable","classList","add","remove","calculateZIndex","items","zIndex","parseInt","item","itemZIndex","hasFocus","target","activeElement","has","hasTransitions","getElement","show","pendingPromise","backdrop","newIndex","newBackdropIndex","setZIndex","accessibilityShow","focus","shown","hideIfNotForm","done","untrapFocus","currentIndex","accessibilityHide","one","hidden","destroy","destroyed","unhide","get","hideSiblings","unhideSiblings","on","e","keyCode","escape","removeOnClose","click","closest","outsideClickEvent","Event","outsideClick","isDefaultPrevented","events","activate","data","originalEvent","preventDefault","registerCloseOnCancel","getActionSelector","cancelEvent","cancel","registerCloseOnSave","saveEvent","save","registerCloseOnDelete","deleteEvent","delete","setFunction","p","hasOwnProperty","content","setButtonText","action","button","Error","text","setRemoveOnClose","setReturnElement","setButtonDisabled","disabled","attr","removeAttr"],"mappings":"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"}